"use strict";
(self.webpackChunktryApp = self.webpackChunktryApp || []).push([
  [179],
  {
    703: () => {
      function de(n) {
        return "function" == typeof n;
      }
      function Vs(n) {
        const e = n((i) => {
          Error.call(i), (i.stack = new Error().stack);
        });
        return (
          (e.prototype = Object.create(Error.prototype)),
          (e.prototype.constructor = e),
          e
        );
      }
      const Bs = Vs(
        (n) =>
          function (e) {
            n(this),
              (this.message = e
                ? `${e.length} errors occurred during unsubscription:\n${e
                    .map((i, r) => `${r + 1}) ${i.toString()}`)
                    .join("\n  ")}`
                : ""),
              (this.name = "UnsubscriptionError"),
              (this.errors = e);
          }
      );
      function ir(n, t) {
        if (n) {
          const e = n.indexOf(t);
          0 <= e && n.splice(e, 1);
        }
      }
      class xe {
        constructor(t) {
          (this.initialTeardown = t),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let t;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: e } = this;
            if (e)
              if (((this._parentage = null), Array.isArray(e)))
                for (const o of e) o.remove(this);
              else e.remove(this);
            const { initialTeardown: i } = this;
            if (de(i))
              try {
                i();
              } catch (o) {
                t = o instanceof Bs ? o.errors : [o];
              }
            const { _finalizers: r } = this;
            if (r) {
              this._finalizers = null;
              for (const o of r)
                try {
                  $p(o);
                } catch (s) {
                  (t = t ?? []),
                    s instanceof Bs ? (t = [...t, ...s.errors]) : t.push(s);
                }
            }
            if (t) throw new Bs(t);
          }
        }
        add(t) {
          var e;
          if (t && t !== this)
            if (this.closed) $p(t);
            else {
              if (t instanceof xe) {
                if (t.closed || t._hasParent(this)) return;
                t._addParent(this);
              }
              (this._finalizers =
                null !== (e = this._finalizers) && void 0 !== e ? e : []).push(
                t
              );
            }
        }
        _hasParent(t) {
          const { _parentage: e } = this;
          return e === t || (Array.isArray(e) && e.includes(t));
        }
        _addParent(t) {
          const { _parentage: e } = this;
          this._parentage = Array.isArray(e) ? (e.push(t), e) : e ? [e, t] : t;
        }
        _removeParent(t) {
          const { _parentage: e } = this;
          e === t ? (this._parentage = null) : Array.isArray(e) && ir(e, t);
        }
        remove(t) {
          const { _finalizers: e } = this;
          e && ir(e, t), t instanceof xe && t._removeParent(this);
        }
      }
      xe.EMPTY = (() => {
        const n = new xe();
        return (n.closed = !0), n;
      })();
      const jp = xe.EMPTY;
      function zp(n) {
        return (
          n instanceof xe ||
          (n && "closed" in n && de(n.remove) && de(n.add) && de(n.unsubscribe))
        );
      }
      function $p(n) {
        de(n) ? n() : n.unsubscribe();
      }
      const Mi = {
          onUnhandledError: null,
          onStoppedNotification: null,
          Promise: void 0,
          useDeprecatedSynchronousErrorHandling: !1,
          useDeprecatedNextContext: !1,
        },
        Hs = {
          setTimeout(n, t, ...e) {
            const { delegate: i } = Hs;
            return i?.setTimeout
              ? i.setTimeout(n, t, ...e)
              : setTimeout(n, t, ...e);
          },
          clearTimeout(n) {
            const { delegate: t } = Hs;
            return (t?.clearTimeout || clearTimeout)(n);
          },
          delegate: void 0,
        };
      function Up(n) {
        Hs.setTimeout(() => {
          const { onUnhandledError: t } = Mi;
          if (!t) throw n;
          t(n);
        });
      }
      function Sc() {}
      const eE = Mc("C", void 0, void 0);
      function Mc(n, t, e) {
        return { kind: n, value: t, error: e };
      }
      let Ti = null;
      function js(n) {
        if (Mi.useDeprecatedSynchronousErrorHandling) {
          const t = !Ti;
          if ((t && (Ti = { errorThrown: !1, error: null }), n(), t)) {
            const { errorThrown: e, error: i } = Ti;
            if (((Ti = null), e)) throw i;
          }
        } else n();
      }
      class Tc extends xe {
        constructor(t) {
          super(),
            (this.isStopped = !1),
            t
              ? ((this.destination = t), zp(t) && t.add(this))
              : (this.destination = aE);
        }
        static create(t, e, i) {
          return new uo(t, e, i);
        }
        next(t) {
          this.isStopped
            ? Ic(
                (function nE(n) {
                  return Mc("N", n, void 0);
                })(t),
                this
              )
            : this._next(t);
        }
        error(t) {
          this.isStopped
            ? Ic(
                (function tE(n) {
                  return Mc("E", void 0, n);
                })(t),
                this
              )
            : ((this.isStopped = !0), this._error(t));
        }
        complete() {
          this.isStopped
            ? Ic(eE, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(t) {
          this.destination.next(t);
        }
        _error(t) {
          try {
            this.destination.error(t);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const rE = Function.prototype.bind;
      function Ac(n, t) {
        return rE.call(n, t);
      }
      class oE {
        constructor(t) {
          this.partialObserver = t;
        }
        next(t) {
          const { partialObserver: e } = this;
          if (e.next)
            try {
              e.next(t);
            } catch (i) {
              zs(i);
            }
        }
        error(t) {
          const { partialObserver: e } = this;
          if (e.error)
            try {
              e.error(t);
            } catch (i) {
              zs(i);
            }
          else zs(t);
        }
        complete() {
          const { partialObserver: t } = this;
          if (t.complete)
            try {
              t.complete();
            } catch (e) {
              zs(e);
            }
        }
      }
      class uo extends Tc {
        constructor(t, e, i) {
          let r;
          if ((super(), de(t) || !t))
            r = {
              next: t ?? void 0,
              error: e ?? void 0,
              complete: i ?? void 0,
            };
          else {
            let o;
            this && Mi.useDeprecatedNextContext
              ? ((o = Object.create(t)),
                (o.unsubscribe = () => this.unsubscribe()),
                (r = {
                  next: t.next && Ac(t.next, o),
                  error: t.error && Ac(t.error, o),
                  complete: t.complete && Ac(t.complete, o),
                }))
              : (r = t);
          }
          this.destination = new oE(r);
        }
      }
      function zs(n) {
        Mi.useDeprecatedSynchronousErrorHandling
          ? (function iE(n) {
              Mi.useDeprecatedSynchronousErrorHandling &&
                Ti &&
                ((Ti.errorThrown = !0), (Ti.error = n));
            })(n)
          : Up(n);
      }
      function Ic(n, t) {
        const { onStoppedNotification: e } = Mi;
        e && Hs.setTimeout(() => e(n, t));
      }
      const aE = {
          closed: !0,
          next: Sc,
          error: function sE(n) {
            throw n;
          },
          complete: Sc,
        },
        Rc =
          ("function" == typeof Symbol && Symbol.observable) || "@@observable";
      function rr(n) {
        return n;
      }
      let De = (() => {
        class n {
          constructor(e) {
            e && (this._subscribe = e);
          }
          lift(e) {
            const i = new n();
            return (i.source = this), (i.operator = e), i;
          }
          subscribe(e, i, r) {
            const o = (function cE(n) {
              return (
                (n && n instanceof Tc) ||
                ((function lE(n) {
                  return n && de(n.next) && de(n.error) && de(n.complete);
                })(n) &&
                  zp(n))
              );
            })(e)
              ? e
              : new uo(e, i, r);
            return (
              js(() => {
                const { operator: s, source: a } = this;
                o.add(
                  s
                    ? s.call(o, a)
                    : a
                    ? this._subscribe(o)
                    : this._trySubscribe(o)
                );
              }),
              o
            );
          }
          _trySubscribe(e) {
            try {
              return this._subscribe(e);
            } catch (i) {
              e.error(i);
            }
          }
          forEach(e, i) {
            return new (i = Wp(i))((r, o) => {
              const s = new uo({
                next: (a) => {
                  try {
                    e(a);
                  } catch (l) {
                    o(l), s.unsubscribe();
                  }
                },
                error: o,
                complete: r,
              });
              this.subscribe(s);
            });
          }
          _subscribe(e) {
            var i;
            return null === (i = this.source) || void 0 === i
              ? void 0
              : i.subscribe(e);
          }
          [Rc]() {
            return this;
          }
          pipe(...e) {
            return (function Gp(n) {
              return 0 === n.length
                ? rr
                : 1 === n.length
                ? n[0]
                : function (e) {
                    return n.reduce((i, r) => r(i), e);
                  };
            })(e)(this);
          }
          toPromise(e) {
            return new (e = Wp(e))((i, r) => {
              let o;
              this.subscribe(
                (s) => (o = s),
                (s) => r(s),
                () => i(o)
              );
            });
          }
        }
        return (n.create = (t) => new n(t)), n;
      })();
      function Wp(n) {
        var t;
        return null !== (t = n ?? Mi.Promise) && void 0 !== t ? t : Promise;
      }
      const dE = Vs(
        (n) =>
          function () {
            n(this),
              (this.name = "ObjectUnsubscribedError"),
              (this.message = "object unsubscribed");
          }
      );
      let A = (() => {
        class n extends De {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(e) {
            const i = new qp(this, this);
            return (i.operator = e), i;
          }
          _throwIfClosed() {
            if (this.closed) throw new dE();
          }
          next(e) {
            js(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const i of this.currentObservers) i.next(e);
              }
            });
          }
          error(e) {
            js(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = e);
                const { observers: i } = this;
                for (; i.length; ) i.shift().error(e);
              }
            });
          }
          complete() {
            js(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: e } = this;
                for (; e.length; ) e.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var e;
            return (
              (null === (e = this.observers) || void 0 === e
                ? void 0
                : e.length) > 0
            );
          }
          _trySubscribe(e) {
            return this._throwIfClosed(), super._trySubscribe(e);
          }
          _subscribe(e) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(e),
              this._innerSubscribe(e)
            );
          }
          _innerSubscribe(e) {
            const { hasError: i, isStopped: r, observers: o } = this;
            return i || r
              ? jp
              : ((this.currentObservers = null),
                o.push(e),
                new xe(() => {
                  (this.currentObservers = null), ir(o, e);
                }));
          }
          _checkFinalizedStatuses(e) {
            const { hasError: i, thrownError: r, isStopped: o } = this;
            i ? e.error(r) : o && e.complete();
          }
          asObservable() {
            const e = new De();
            return (e.source = this), e;
          }
        }
        return (n.create = (t, e) => new qp(t, e)), n;
      })();
      class qp extends A {
        constructor(t, e) {
          super(), (this.destination = t), (this.source = e);
        }
        next(t) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.next) ||
            void 0 === i ||
            i.call(e, t);
        }
        error(t) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.error) ||
            void 0 === i ||
            i.call(e, t);
        }
        complete() {
          var t, e;
          null ===
            (e =
              null === (t = this.destination) || void 0 === t
                ? void 0
                : t.complete) ||
            void 0 === e ||
            e.call(t);
        }
        _subscribe(t) {
          var e, i;
          return null !==
            (i =
              null === (e = this.source) || void 0 === e
                ? void 0
                : e.subscribe(t)) && void 0 !== i
            ? i
            : jp;
        }
      }
      function Yp(n) {
        return de(n?.lift);
      }
      function dt(n) {
        return (t) => {
          if (Yp(t))
            return t.lift(function (e) {
              try {
                return n(e, this);
              } catch (i) {
                this.error(i);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
      function Qe(n, t, e, i, r) {
        return new uE(n, t, e, i, r);
      }
      class uE extends Tc {
        constructor(t, e, i, r, o, s) {
          super(t),
            (this.onFinalize = o),
            (this.shouldUnsubscribe = s),
            (this._next = e
              ? function (a) {
                  try {
                    e(a);
                  } catch (l) {
                    t.error(l);
                  }
                }
              : super._next),
            (this._error = r
              ? function (a) {
                  try {
                    r(a);
                  } catch (l) {
                    t.error(l);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = i
              ? function () {
                  try {
                    i();
                  } catch (a) {
                    t.error(a);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var t;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: e } = this;
            super.unsubscribe(),
              !e &&
                (null === (t = this.onFinalize) ||
                  void 0 === t ||
                  t.call(this));
          }
        }
      }
      function Kt(n, t) {
        return dt((e, i) => {
          let r = 0;
          e.subscribe(
            Qe(i, (o) => {
              i.next(n.call(t, o, r++));
            })
          );
        });
      }
      function ui(n) {
        return this instanceof ui ? ((this.v = n), this) : new ui(n);
      }
      function Qp(n) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var e,
          t = n[Symbol.asyncIterator];
        return t
          ? t.call(n)
          : ((n = (function Pc(n) {
              var t = "function" == typeof Symbol && Symbol.iterator,
                e = t && n[t],
                i = 0;
              if (e) return e.call(n);
              if (n && "number" == typeof n.length)
                return {
                  next: function () {
                    return (
                      n && i >= n.length && (n = void 0),
                      { value: n && n[i++], done: !n }
                    );
                  },
                };
              throw new TypeError(
                t
                  ? "Object is not iterable."
                  : "Symbol.iterator is not defined."
              );
            })(n)),
            (e = {}),
            i("next"),
            i("throw"),
            i("return"),
            (e[Symbol.asyncIterator] = function () {
              return this;
            }),
            e);
        function i(o) {
          e[o] =
            n[o] &&
            function (s) {
              return new Promise(function (a, l) {
                !(function r(o, s, a, l) {
                  Promise.resolve(l).then(function (c) {
                    o({ value: c, done: a });
                  }, s);
                })(a, l, (s = n[o](s)).done, s.value);
              });
            };
        }
      }
      "function" == typeof SuppressedError && SuppressedError;
      const Nc = (n) =>
        n && "number" == typeof n.length && "function" != typeof n;
      function Jp(n) {
        return de(n?.then);
      }
      function em(n) {
        return de(n[Rc]);
      }
      function tm(n) {
        return Symbol.asyncIterator && de(n?.[Symbol.asyncIterator]);
      }
      function nm(n) {
        return new TypeError(
          `You provided ${
            null !== n && "object" == typeof n ? "an invalid object" : `'${n}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      const im = (function OE() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      })();
      function rm(n) {
        return de(n?.[im]);
      }
      function om(n) {
        return (function Xp(n, t, e) {
          if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
          var r,
            i = e.apply(n, t || []),
            o = [];
          return (
            (r = {}),
            s("next"),
            s("throw"),
            s("return"),
            (r[Symbol.asyncIterator] = function () {
              return this;
            }),
            r
          );
          function s(h) {
            i[h] &&
              (r[h] = function (f) {
                return new Promise(function (m, g) {
                  o.push([h, f, m, g]) > 1 || a(h, f);
                });
              });
          }
          function a(h, f) {
            try {
              !(function l(h) {
                h.value instanceof ui
                  ? Promise.resolve(h.value.v).then(c, d)
                  : u(o[0][2], h);
              })(i[h](f));
            } catch (m) {
              u(o[0][3], m);
            }
          }
          function c(h) {
            a("next", h);
          }
          function d(h) {
            a("throw", h);
          }
          function u(h, f) {
            h(f), o.shift(), o.length && a(o[0][0], o[0][1]);
          }
        })(this, arguments, function* () {
          const e = n.getReader();
          try {
            for (;;) {
              const { value: i, done: r } = yield ui(e.read());
              if (r) return yield ui(void 0);
              yield yield ui(i);
            }
          } finally {
            e.releaseLock();
          }
        });
      }
      function sm(n) {
        return de(n?.getReader);
      }
      function St(n) {
        if (n instanceof De) return n;
        if (null != n) {
          if (em(n))
            return (function FE(n) {
              return new De((t) => {
                const e = n[Rc]();
                if (de(e.subscribe)) return e.subscribe(t);
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              });
            })(n);
          if (Nc(n))
            return (function PE(n) {
              return new De((t) => {
                for (let e = 0; e < n.length && !t.closed; e++) t.next(n[e]);
                t.complete();
              });
            })(n);
          if (Jp(n))
            return (function NE(n) {
              return new De((t) => {
                n.then(
                  (e) => {
                    t.closed || (t.next(e), t.complete());
                  },
                  (e) => t.error(e)
                ).then(null, Up);
              });
            })(n);
          if (tm(n)) return am(n);
          if (rm(n))
            return (function LE(n) {
              return new De((t) => {
                for (const e of n) if ((t.next(e), t.closed)) return;
                t.complete();
              });
            })(n);
          if (sm(n))
            return (function VE(n) {
              return am(om(n));
            })(n);
        }
        throw nm(n);
      }
      function am(n) {
        return new De((t) => {
          (function BE(n, t) {
            var e, i, r, o;
            return (function Kp(n, t, e, i) {
              return new (e || (e = Promise))(function (o, s) {
                function a(d) {
                  try {
                    c(i.next(d));
                  } catch (u) {
                    s(u);
                  }
                }
                function l(d) {
                  try {
                    c(i.throw(d));
                  } catch (u) {
                    s(u);
                  }
                }
                function c(d) {
                  d.done
                    ? o(d.value)
                    : (function r(o) {
                        return o instanceof e
                          ? o
                          : new e(function (s) {
                              s(o);
                            });
                      })(d.value).then(a, l);
                }
                c((i = i.apply(n, t || [])).next());
              });
            })(this, void 0, void 0, function* () {
              try {
                for (e = Qp(n); !(i = yield e.next()).done; )
                  if ((t.next(i.value), t.closed)) return;
              } catch (s) {
                r = { error: s };
              } finally {
                try {
                  i && !i.done && (o = e.return) && (yield o.call(e));
                } finally {
                  if (r) throw r.error;
                }
              }
              t.complete();
            });
          })(n, t).catch((e) => t.error(e));
        });
      }
      function Bn(n, t, e, i = 0, r = !1) {
        const o = t.schedule(function () {
          e(), r ? n.add(this.schedule(null, i)) : this.unsubscribe();
        }, i);
        if ((n.add(o), !r)) return o;
      }
      function Lc(n, t, e = 1 / 0) {
        return de(t)
          ? Lc((i, r) => Kt((o, s) => t(i, o, r, s))(St(n(i, r))), e)
          : ("number" == typeof t && (e = t),
            dt((i, r) =>
              (function HE(n, t, e, i, r, o, s, a) {
                const l = [];
                let c = 0,
                  d = 0,
                  u = !1;
                const h = () => {
                    u && !l.length && !c && t.complete();
                  },
                  f = (g) => (c < i ? m(g) : l.push(g)),
                  m = (g) => {
                    o && t.next(g), c++;
                    let _ = !1;
                    St(e(g, d++)).subscribe(
                      Qe(
                        t,
                        (v) => {
                          r?.(v), o ? f(v) : t.next(v);
                        },
                        () => {
                          _ = !0;
                        },
                        void 0,
                        () => {
                          if (_)
                            try {
                              for (c--; l.length && c < i; ) {
                                const v = l.shift();
                                s ? Bn(t, s, () => m(v)) : m(v);
                              }
                              h();
                            } catch (v) {
                              t.error(v);
                            }
                        }
                      )
                    );
                  };
                return (
                  n.subscribe(
                    Qe(t, f, () => {
                      (u = !0), h();
                    })
                  ),
                  () => {
                    a?.();
                  }
                );
              })(i, r, n, e)
            ));
      }
      function lm(n = 1 / 0) {
        return Lc(rr, n);
      }
      const $s = new De((n) => n.complete());
      function cm(n) {
        return n && de(n.schedule);
      }
      function Vc(n) {
        return n[n.length - 1];
      }
      function dm(n) {
        return de(Vc(n)) ? n.pop() : void 0;
      }
      function ho(n) {
        return cm(Vc(n)) ? n.pop() : void 0;
      }
      function um(n, t = 0) {
        return dt((e, i) => {
          e.subscribe(
            Qe(
              i,
              (r) => Bn(i, n, () => i.next(r), t),
              () => Bn(i, n, () => i.complete(), t),
              (r) => Bn(i, n, () => i.error(r), t)
            )
          );
        });
      }
      function hm(n, t = 0) {
        return dt((e, i) => {
          i.add(n.schedule(() => e.subscribe(i), t));
        });
      }
      function fm(n, t) {
        if (!n) throw new Error("Iterable cannot be null");
        return new De((e) => {
          Bn(e, t, () => {
            const i = n[Symbol.asyncIterator]();
            Bn(
              e,
              t,
              () => {
                i.next().then((r) => {
                  r.done ? e.complete() : e.next(r.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      function Ai(n, t) {
        return t
          ? (function YE(n, t) {
              if (null != n) {
                if (em(n))
                  return (function $E(n, t) {
                    return St(n).pipe(hm(t), um(t));
                  })(n, t);
                if (Nc(n))
                  return (function GE(n, t) {
                    return new De((e) => {
                      let i = 0;
                      return t.schedule(function () {
                        i === n.length
                          ? e.complete()
                          : (e.next(n[i++]), e.closed || this.schedule());
                      });
                    });
                  })(n, t);
                if (Jp(n))
                  return (function UE(n, t) {
                    return St(n).pipe(hm(t), um(t));
                  })(n, t);
                if (tm(n)) return fm(n, t);
                if (rm(n))
                  return (function WE(n, t) {
                    return new De((e) => {
                      let i;
                      return (
                        Bn(e, t, () => {
                          (i = n[im]()),
                            Bn(
                              e,
                              t,
                              () => {
                                let r, o;
                                try {
                                  ({ value: r, done: o } = i.next());
                                } catch (s) {
                                  return void e.error(s);
                                }
                                o ? e.complete() : e.next(r);
                              },
                              0,
                              !0
                            );
                        }),
                        () => de(i?.return) && i.return()
                      );
                    });
                  })(n, t);
                if (sm(n))
                  return (function qE(n, t) {
                    return fm(om(n), t);
                  })(n, t);
              }
              throw nm(n);
            })(n, t)
          : St(n);
      }
      function Pt(...n) {
        const t = ho(n),
          e = (function zE(n, t) {
            return "number" == typeof Vc(n) ? n.pop() : t;
          })(n, 1 / 0),
          i = n;
        return i.length ? (1 === i.length ? St(i[0]) : lm(e)(Ai(i, t))) : $s;
      }
      function Bc(n, t, ...e) {
        if (!0 === t) return void n();
        if (!1 === t) return;
        const i = new uo({
          next: () => {
            i.unsubscribe(), n();
          },
        });
        return St(t(...e)).subscribe(i);
      }
      function Ce(n) {
        for (let t in n) if (n[t] === Ce) return t;
        throw Error("Could not find renamed property on target object.");
      }
      function Hc(n, t) {
        for (const e in t)
          t.hasOwnProperty(e) && !n.hasOwnProperty(e) && (n[e] = t[e]);
      }
      function Me(n) {
        if ("string" == typeof n) return n;
        if (Array.isArray(n)) return "[" + n.map(Me).join(", ") + "]";
        if (null == n) return "" + n;
        if (n.overriddenName) return `${n.overriddenName}`;
        if (n.name) return `${n.name}`;
        const t = n.toString();
        if (null == t) return "" + t;
        const e = t.indexOf("\n");
        return -1 === e ? t : t.substring(0, e);
      }
      function jc(n, t) {
        return null == n || "" === n
          ? null === t
            ? ""
            : t
          : null == t || "" === t
          ? n
          : n + " " + t;
      }
      const ZE = Ce({ __forward_ref__: Ce });
      function Te(n) {
        return (
          (n.__forward_ref__ = Te),
          (n.toString = function () {
            return Me(this());
          }),
          n
        );
      }
      function H(n) {
        return zc(n) ? n() : n;
      }
      function zc(n) {
        return (
          "function" == typeof n &&
          n.hasOwnProperty(ZE) &&
          n.__forward_ref__ === Te
        );
      }
      function $c(n) {
        return n && !!n.ɵproviders;
      }
      class w extends Error {
        constructor(t, e) {
          super(Us(t, e)), (this.code = t);
        }
      }
      function Us(n, t) {
        return `NG0${Math.abs(n)}${t ? ": " + t.trim() : ""}`;
      }
      function K(n) {
        return "string" == typeof n ? n : null == n ? "" : String(n);
      }
      function Gs(n, t) {
        throw new w(-201, !1);
      }
      function Zt(n, t) {
        null == n &&
          (function be(n, t, e, i) {
            throw new Error(
              `ASSERTION ERROR: ${n}` +
                (null == i ? "" : ` [Expected=> ${e} ${i} ${t} <=Actual]`)
            );
          })(t, n, null, "!=");
      }
      function I(n) {
        return {
          token: n.token,
          providedIn: n.providedIn || null,
          factory: n.factory,
          value: void 0,
        };
      }
      function oe(n) {
        return { providers: n.providers || [], imports: n.imports || [] };
      }
      function Ws(n) {
        return mm(n, qs) || mm(n, _m);
      }
      function mm(n, t) {
        return n.hasOwnProperty(t) ? n[t] : null;
      }
      function gm(n) {
        return n && (n.hasOwnProperty(Uc) || n.hasOwnProperty(iS))
          ? n[Uc]
          : null;
      }
      const qs = Ce({ ɵprov: Ce }),
        Uc = Ce({ ɵinj: Ce }),
        _m = Ce({ ngInjectableDef: Ce }),
        iS = Ce({ ngInjectorDef: Ce });
      var G = (() => (
        ((G = G || {})[(G.Default = 0)] = "Default"),
        (G[(G.Host = 1)] = "Host"),
        (G[(G.Self = 2)] = "Self"),
        (G[(G.SkipSelf = 4)] = "SkipSelf"),
        (G[(G.Optional = 8)] = "Optional"),
        G
      ))();
      let Gc;
      function Xt(n) {
        const t = Gc;
        return (Gc = n), t;
      }
      function bm(n, t, e) {
        const i = Ws(n);
        return i && "root" == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : e & G.Optional
          ? null
          : void 0 !== t
          ? t
          : void Gs(Me(n));
      }
      const Ie = (() =>
          (typeof globalThis < "u" && globalThis) ||
          (typeof global < "u" && global) ||
          (typeof window < "u" && window) ||
          (typeof self < "u" &&
            typeof WorkerGlobalScope < "u" &&
            self instanceof WorkerGlobalScope &&
            self))(),
        fo = {},
        Wc = "__NG_DI_FLAG__",
        Ys = "ngTempTokenPath",
        oS = "ngTokenPath",
        sS = /\n/gm,
        aS = "\u0275",
        ym = "__source";
      let po;
      function or(n) {
        const t = po;
        return (po = n), t;
      }
      function lS(n, t = G.Default) {
        if (void 0 === po) throw new w(-203, !1);
        return null === po
          ? bm(n, void 0, t)
          : po.get(n, t & G.Optional ? null : void 0, t);
      }
      function b(n, t = G.Default) {
        return (
          (function rS() {
            return Gc;
          })() || lS
        )(H(n), t);
      }
      function vn(n, t = G.Default) {
        return b(n, Ks(t));
      }
      function Ks(n) {
        return typeof n > "u" || "number" == typeof n
          ? n
          : 0 |
              (n.optional && 8) |
              (n.host && 1) |
              (n.self && 2) |
              (n.skipSelf && 4);
      }
      function qc(n) {
        const t = [];
        for (let e = 0; e < n.length; e++) {
          const i = H(n[e]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new w(900, !1);
            let r,
              o = G.Default;
            for (let s = 0; s < i.length; s++) {
              const a = i[s],
                l = cS(a);
              "number" == typeof l
                ? -1 === l
                  ? (r = a.token)
                  : (o |= l)
                : (r = a);
            }
            t.push(b(r, o));
          } else t.push(b(i));
        }
        return t;
      }
      function mo(n, t) {
        return (n[Wc] = t), (n.prototype[Wc] = t), n;
      }
      function cS(n) {
        return n[Wc];
      }
      function Hn(n) {
        return { toString: n }.toString();
      }
      var Dn = (() => (
          ((Dn = Dn || {})[(Dn.OnPush = 0)] = "OnPush"),
          (Dn[(Dn.Default = 1)] = "Default"),
          Dn
        ))(),
        ln = (() => {
          return (
            ((n = ln || (ln = {}))[(n.Emulated = 0)] = "Emulated"),
            (n[(n.None = 2)] = "None"),
            (n[(n.ShadowDom = 3)] = "ShadowDom"),
            ln
          );
          var n;
        })();
      const jn = {},
        me = [],
        Zs = Ce({ ɵcmp: Ce }),
        Yc = Ce({ ɵdir: Ce }),
        Kc = Ce({ ɵpipe: Ce }),
        Dm = Ce({ ɵmod: Ce }),
        zn = Ce({ ɵfac: Ce }),
        go = Ce({ __NG_ELEMENT_ID__: Ce });
      let hS = 0;
      function Ee(n) {
        return Hn(() => {
          const t = xm(n),
            e = {
              ...t,
              decls: n.decls,
              vars: n.vars,
              template: n.template,
              consts: n.consts || null,
              ngContentSelectors: n.ngContentSelectors,
              onPush: n.changeDetection === Dn.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              dependencies: (t.standalone && n.dependencies) || null,
              getStandaloneInjector: null,
              data: n.data || {},
              encapsulation: n.encapsulation || ln.Emulated,
              id: "c" + hS++,
              styles: n.styles || me,
              _: null,
              schemas: n.schemas || null,
              tView: null,
            };
          Cm(e);
          const i = n.dependencies;
          return (e.directiveDefs = Xs(i, !1)), (e.pipeDefs = Xs(i, !0)), e;
        });
      }
      function pS(n) {
        return ye(n) || ut(n);
      }
      function mS(n) {
        return null !== n;
      }
      function le(n) {
        return Hn(() => ({
          type: n.type,
          bootstrap: n.bootstrap || me,
          declarations: n.declarations || me,
          imports: n.imports || me,
          exports: n.exports || me,
          transitiveCompileScopes: null,
          schemas: n.schemas || null,
          id: n.id || null,
        }));
      }
      function wm(n, t) {
        if (null == n) return jn;
        const e = {};
        for (const i in n)
          if (n.hasOwnProperty(i)) {
            let r = n[i],
              o = r;
            Array.isArray(r) && ((o = r[1]), (r = r[0])),
              (e[r] = i),
              t && (t[r] = o);
          }
        return e;
      }
      function x(n) {
        return Hn(() => {
          const t = xm(n);
          return Cm(t), t;
        });
      }
      function ye(n) {
        return n[Zs] || null;
      }
      function ut(n) {
        return n[Yc] || null;
      }
      function Tt(n) {
        return n[Kc] || null;
      }
      function xm(n) {
        const t = {};
        return {
          type: n.type,
          providersResolver: null,
          factory: null,
          hostBindings: n.hostBindings || null,
          hostVars: n.hostVars || 0,
          hostAttrs: n.hostAttrs || null,
          contentQueries: n.contentQueries || null,
          declaredInputs: t,
          exportAs: n.exportAs || null,
          standalone: !0 === n.standalone,
          selectors: n.selectors || me,
          viewQuery: n.viewQuery || null,
          features: n.features || null,
          setInput: null,
          findHostDirectiveDefs: null,
          hostDirectives: null,
          inputs: wm(n.inputs, t),
          outputs: wm(n.outputs),
        };
      }
      function Cm(n) {
        n.features?.forEach((t) => t(n));
      }
      function Xs(n, t) {
        if (!n) return null;
        const e = t ? Tt : pS;
        return () =>
          ("function" == typeof n ? n() : n).map((i) => e(i)).filter(mS);
      }
      const $n = 0,
        R = 1,
        J = 2,
        Le = 3,
        cn = 4,
        Ii = 5,
        ht = 6,
        sr = 7,
        ze = 8,
        Qs = 9,
        Js = 10,
        te = 11,
        Zc = 12,
        bo = 13,
        Em = 14,
        ar = 15,
        ft = 16,
        yo = 17,
        lr = 18,
        wn = 19,
        vo = 20,
        Sm = 21,
        Re = 22,
        Xc = 1,
        Mm = 2,
        ea = 7,
        ta = 8,
        cr = 9,
        vt = 10;
      function Vt(n) {
        return Array.isArray(n) && "object" == typeof n[Xc];
      }
      function dn(n) {
        return Array.isArray(n) && !0 === n[Xc];
      }
      function Qc(n) {
        return 0 != (4 & n.flags);
      }
      function Do(n) {
        return n.componentOffset > -1;
      }
      function na(n) {
        return 1 == (1 & n.flags);
      }
      function un(n) {
        return !!n.template;
      }
      function _S(n) {
        return 0 != (256 & n[J]);
      }
      function Ri(n, t) {
        return n.hasOwnProperty(zn) ? n[zn] : null;
      }
      class vS {
        constructor(t, e, i) {
          (this.previousValue = t),
            (this.currentValue = e),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function at() {
        return Im;
      }
      function Im(n) {
        return n.type.prototype.ngOnChanges && (n.setInput = wS), DS;
      }
      function DS() {
        const n = km(this),
          t = n?.current;
        if (t) {
          const e = n.previous;
          if (e === jn) n.previous = t;
          else for (let i in t) e[i] = t[i];
          (n.current = null), this.ngOnChanges(t);
        }
      }
      function wS(n, t, e, i) {
        const r = this.declaredInputs[e],
          o =
            km(n) ||
            (function xS(n, t) {
              return (n[Rm] = t);
            })(n, { previous: jn, current: null }),
          s = o.current || (o.current = {}),
          a = o.previous,
          l = a[r];
        (s[r] = new vS(l && l.currentValue, t, a === jn)), (n[i] = t);
      }
      at.ngInherit = !0;
      const Rm = "__ngSimpleChanges__";
      function km(n) {
        return n[Rm] || null;
      }
      const Qt = function (n, t, e) {},
        Om = "svg";
      function lt(n) {
        for (; Array.isArray(n); ) n = n[$n];
        return n;
      }
      function ia(n, t) {
        return lt(t[n]);
      }
      function Bt(n, t) {
        return lt(t[n.index]);
      }
      function Pm(n, t) {
        return n.data[t];
      }
      function At(n, t) {
        const e = t[n];
        return Vt(e) ? e : e[$n];
      }
      function ra(n) {
        return 64 == (64 & n[J]);
      }
      function fi(n, t) {
        return null == t ? null : n[t];
      }
      function Nm(n) {
        n[lr] = 0;
      }
      function ed(n, t) {
        n[Ii] += t;
        let e = n,
          i = n[Le];
        for (
          ;
          null !== i && ((1 === t && 1 === e[Ii]) || (-1 === t && 0 === e[Ii]));

        )
          (i[Ii] += t), (e = i), (i = i[Le]);
      }
      const Z = { lFrame: Wm(null), bindingsEnabled: !0 };
      function Vm() {
        return Z.bindingsEnabled;
      }
      function D() {
        return Z.lFrame.lView;
      }
      function ce() {
        return Z.lFrame.tView;
      }
      function Un(n) {
        return (Z.lFrame.contextLView = n), n[ze];
      }
      function Gn(n) {
        return (Z.lFrame.contextLView = null), n;
      }
      function ct() {
        let n = Bm();
        for (; null !== n && 64 === n.type; ) n = n.parent;
        return n;
      }
      function Bm() {
        return Z.lFrame.currentTNode;
      }
      function xn(n, t) {
        const e = Z.lFrame;
        (e.currentTNode = n), (e.isParent = t);
      }
      function td() {
        return Z.lFrame.isParent;
      }
      function nd() {
        Z.lFrame.isParent = !1;
      }
      function ur() {
        return Z.lFrame.bindingIndex++;
      }
      function qn(n) {
        const t = Z.lFrame,
          e = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + n), e;
      }
      function NS(n, t) {
        const e = Z.lFrame;
        (e.bindingIndex = e.bindingRootIndex = n), id(t);
      }
      function id(n) {
        Z.lFrame.currentDirectiveIndex = n;
      }
      function $m() {
        return Z.lFrame.currentQueryIndex;
      }
      function od(n) {
        Z.lFrame.currentQueryIndex = n;
      }
      function VS(n) {
        const t = n[R];
        return 2 === t.type ? t.declTNode : 1 === t.type ? n[ht] : null;
      }
      function Um(n, t, e) {
        if (e & G.SkipSelf) {
          let r = t,
            o = n;
          for (
            ;
            !((r = r.parent),
            null !== r ||
              e & G.Host ||
              ((r = VS(o)), null === r || ((o = o[ar]), 10 & r.type)));

          );
          if (null === r) return !1;
          (t = r), (n = o);
        }
        const i = (Z.lFrame = Gm());
        return (i.currentTNode = t), (i.lView = n), !0;
      }
      function sd(n) {
        const t = Gm(),
          e = n[R];
        (Z.lFrame = t),
          (t.currentTNode = e.firstChild),
          (t.lView = n),
          (t.tView = e),
          (t.contextLView = n),
          (t.bindingIndex = e.bindingStartIndex),
          (t.inI18n = !1);
      }
      function Gm() {
        const n = Z.lFrame,
          t = null === n ? null : n.child;
        return null === t ? Wm(n) : t;
      }
      function Wm(n) {
        const t = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: n,
          child: null,
          inI18n: !1,
        };
        return null !== n && (n.child = t), t;
      }
      function qm() {
        const n = Z.lFrame;
        return (
          (Z.lFrame = n.parent), (n.currentTNode = null), (n.lView = null), n
        );
      }
      const Ym = qm;
      function ad() {
        const n = qm();
        (n.isParent = !0),
          (n.tView = null),
          (n.selectedIndex = -1),
          (n.contextLView = null),
          (n.elementDepthCount = 0),
          (n.currentDirectiveIndex = -1),
          (n.currentNamespace = null),
          (n.bindingRootIndex = -1),
          (n.bindingIndex = -1),
          (n.currentQueryIndex = 0);
      }
      function wt() {
        return Z.lFrame.selectedIndex;
      }
      function ki(n) {
        Z.lFrame.selectedIndex = n;
      }
      function Fe() {
        const n = Z.lFrame;
        return Pm(n.tView, n.selectedIndex);
      }
      function pi() {
        Z.lFrame.currentNamespace = Om;
      }
      function oa() {
        !(function zS() {
          Z.lFrame.currentNamespace = null;
        })();
      }
      function sa(n, t) {
        for (let e = t.directiveStart, i = t.directiveEnd; e < i; e++) {
          const o = n.data[e].type.prototype,
            {
              ngAfterContentInit: s,
              ngAfterContentChecked: a,
              ngAfterViewInit: l,
              ngAfterViewChecked: c,
              ngOnDestroy: d,
            } = o;
          s && (n.contentHooks ?? (n.contentHooks = [])).push(-e, s),
            a &&
              ((n.contentHooks ?? (n.contentHooks = [])).push(e, a),
              (n.contentCheckHooks ?? (n.contentCheckHooks = [])).push(e, a)),
            l && (n.viewHooks ?? (n.viewHooks = [])).push(-e, l),
            c &&
              ((n.viewHooks ?? (n.viewHooks = [])).push(e, c),
              (n.viewCheckHooks ?? (n.viewCheckHooks = [])).push(e, c)),
            null != d && (n.destroyHooks ?? (n.destroyHooks = [])).push(e, d);
        }
      }
      function aa(n, t, e) {
        Km(n, t, 3, e);
      }
      function la(n, t, e, i) {
        (3 & n[J]) === e && Km(n, t, e, i);
      }
      function ld(n, t) {
        let e = n[J];
        (3 & e) === t && ((e &= 2047), (e += 1), (n[J] = e));
      }
      function Km(n, t, e, i) {
        const o = i ?? -1,
          s = t.length - 1;
        let a = 0;
        for (let l = void 0 !== i ? 65535 & n[lr] : 0; l < s; l++)
          if ("number" == typeof t[l + 1]) {
            if (((a = t[l]), null != i && a >= i)) break;
          } else
            t[l] < 0 && (n[lr] += 65536),
              (a < o || -1 == o) &&
                (GS(n, e, t, l), (n[lr] = (4294901760 & n[lr]) + l + 2)),
              l++;
      }
      function GS(n, t, e, i) {
        const r = e[i] < 0,
          o = e[i + 1],
          a = n[r ? -e[i] : e[i]];
        if (r) {
          if (n[J] >> 11 < n[lr] >> 16 && (3 & n[J]) === t) {
            (n[J] += 2048), Qt(4, a, o);
            try {
              o.call(a);
            } finally {
              Qt(5, a, o);
            }
          }
        } else {
          Qt(4, a, o);
          try {
            o.call(a);
          } finally {
            Qt(5, a, o);
          }
        }
      }
      const hr = -1;
      class xo {
        constructor(t, e, i) {
          (this.factory = t),
            (this.resolving = !1),
            (this.canSeeViewProviders = e),
            (this.injectImpl = i);
        }
      }
      function dd(n, t, e) {
        let i = 0;
        for (; i < e.length; ) {
          const r = e[i];
          if ("number" == typeof r) {
            if (0 !== r) break;
            i++;
            const o = e[i++],
              s = e[i++],
              a = e[i++];
            n.setAttribute(t, s, a, o);
          } else {
            const o = r,
              s = e[++i];
            Xm(o) ? n.setProperty(t, o, s) : n.setAttribute(t, o, s), i++;
          }
        }
        return i;
      }
      function Zm(n) {
        return 3 === n || 4 === n || 6 === n;
      }
      function Xm(n) {
        return 64 === n.charCodeAt(0);
      }
      function Co(n, t) {
        if (null !== t && 0 !== t.length)
          if (null === n || 0 === n.length) n = t.slice();
          else {
            let e = -1;
            for (let i = 0; i < t.length; i++) {
              const r = t[i];
              "number" == typeof r
                ? (e = r)
                : 0 === e ||
                  Qm(n, e, r, null, -1 === e || 2 === e ? t[++i] : null);
            }
          }
        return n;
      }
      function Qm(n, t, e, i, r) {
        let o = 0,
          s = n.length;
        if (-1 === t) s = -1;
        else
          for (; o < n.length; ) {
            const a = n[o++];
            if ("number" == typeof a) {
              if (a === t) {
                s = -1;
                break;
              }
              if (a > t) {
                s = o - 1;
                break;
              }
            }
          }
        for (; o < n.length; ) {
          const a = n[o];
          if ("number" == typeof a) break;
          if (a === e) {
            if (null === i) return void (null !== r && (n[o + 1] = r));
            if (i === n[o + 1]) return void (n[o + 2] = r);
          }
          o++, null !== i && o++, null !== r && o++;
        }
        -1 !== s && (n.splice(s, 0, t), (o = s + 1)),
          n.splice(o++, 0, e),
          null !== i && n.splice(o++, 0, i),
          null !== r && n.splice(o++, 0, r);
      }
      function Jm(n) {
        return n !== hr;
      }
      function ca(n) {
        return 32767 & n;
      }
      function da(n, t) {
        let e = (function KS(n) {
            return n >> 16;
          })(n),
          i = t;
        for (; e > 0; ) (i = i[ar]), e--;
        return i;
      }
      let ud = !0;
      function ua(n) {
        const t = ud;
        return (ud = n), t;
      }
      const eg = 255,
        tg = 5;
      let ZS = 0;
      const Cn = {};
      function ha(n, t) {
        const e = ng(n, t);
        if (-1 !== e) return e;
        const i = t[R];
        i.firstCreatePass &&
          ((n.injectorIndex = t.length),
          hd(i.data, n),
          hd(t, null),
          hd(i.blueprint, null));
        const r = fd(n, t),
          o = n.injectorIndex;
        if (Jm(r)) {
          const s = ca(r),
            a = da(r, t),
            l = a[R].data;
          for (let c = 0; c < 8; c++) t[o + c] = a[s + c] | l[s + c];
        }
        return (t[o + 8] = r), o;
      }
      function hd(n, t) {
        n.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function ng(n, t) {
        return -1 === n.injectorIndex ||
          (n.parent && n.parent.injectorIndex === n.injectorIndex) ||
          null === t[n.injectorIndex + 8]
          ? -1
          : n.injectorIndex;
      }
      function fd(n, t) {
        if (n.parent && -1 !== n.parent.injectorIndex)
          return n.parent.injectorIndex;
        let e = 0,
          i = null,
          r = t;
        for (; null !== r; ) {
          if (((i = cg(r)), null === i)) return hr;
          if ((e++, (r = r[ar]), -1 !== i.injectorIndex))
            return i.injectorIndex | (e << 16);
        }
        return hr;
      }
      function pd(n, t, e) {
        !(function XS(n, t, e) {
          let i;
          "string" == typeof e
            ? (i = e.charCodeAt(0) || 0)
            : e.hasOwnProperty(go) && (i = e[go]),
            null == i && (i = e[go] = ZS++);
          const r = i & eg;
          t.data[n + (r >> tg)] |= 1 << r;
        })(n, t, e);
      }
      function ig(n, t, e) {
        if (e & G.Optional || void 0 !== n) return n;
        Gs();
      }
      function rg(n, t, e, i) {
        if (
          (e & G.Optional && void 0 === i && (i = null),
          !(e & (G.Self | G.Host)))
        ) {
          const r = n[Qs],
            o = Xt(void 0);
          try {
            return r ? r.get(t, i, e & G.Optional) : bm(t, i, e & G.Optional);
          } finally {
            Xt(o);
          }
        }
        return ig(i, 0, e);
      }
      function og(n, t, e, i = G.Default, r) {
        if (null !== n) {
          if (1024 & t[J]) {
            const s = (function nM(n, t, e, i, r) {
              let o = n,
                s = t;
              for (
                ;
                null !== o && null !== s && 1024 & s[J] && !(256 & s[J]);

              ) {
                const a = sg(o, s, e, i | G.Self, Cn);
                if (a !== Cn) return a;
                let l = o.parent;
                if (!l) {
                  const c = s[Sm];
                  if (c) {
                    const d = c.get(e, Cn, i);
                    if (d !== Cn) return d;
                  }
                  (l = cg(s)), (s = s[ar]);
                }
                o = l;
              }
              return r;
            })(n, t, e, i, Cn);
            if (s !== Cn) return s;
          }
          const o = sg(n, t, e, i, Cn);
          if (o !== Cn) return o;
        }
        return rg(t, e, i, r);
      }
      function sg(n, t, e, i, r) {
        const o = (function eM(n) {
          if ("string" == typeof n) return n.charCodeAt(0) || 0;
          const t = n.hasOwnProperty(go) ? n[go] : void 0;
          return "number" == typeof t ? (t >= 0 ? t & eg : tM) : t;
        })(e);
        if ("function" == typeof o) {
          if (!Um(t, n, i)) return i & G.Host ? ig(r, 0, i) : rg(t, e, i, r);
          try {
            const s = o(i);
            if (null != s || i & G.Optional) return s;
            Gs();
          } finally {
            Ym();
          }
        } else if ("number" == typeof o) {
          let s = null,
            a = ng(n, t),
            l = hr,
            c = i & G.Host ? t[ft][ht] : null;
          for (
            (-1 === a || i & G.SkipSelf) &&
            ((l = -1 === a ? fd(n, t) : t[a + 8]),
            l !== hr && lg(i, !1)
              ? ((s = t[R]), (a = ca(l)), (t = da(l, t)))
              : (a = -1));
            -1 !== a;

          ) {
            const d = t[R];
            if (ag(o, a, d.data)) {
              const u = JS(a, t, e, s, i, c);
              if (u !== Cn) return u;
            }
            (l = t[a + 8]),
              l !== hr && lg(i, t[R].data[a + 8] === c) && ag(o, a, t)
                ? ((s = d), (a = ca(l)), (t = da(l, t)))
                : (a = -1);
          }
        }
        return r;
      }
      function JS(n, t, e, i, r, o) {
        const s = t[R],
          a = s.data[n + 8],
          d = fa(
            a,
            s,
            e,
            null == i ? Do(a) && ud : i != s && 0 != (3 & a.type),
            r & G.Host && o === a
          );
        return null !== d ? Oi(t, s, d, a) : Cn;
      }
      function fa(n, t, e, i, r) {
        const o = n.providerIndexes,
          s = t.data,
          a = 1048575 & o,
          l = n.directiveStart,
          d = o >> 20,
          h = r ? a + d : n.directiveEnd;
        for (let f = i ? a : a + d; f < h; f++) {
          const m = s[f];
          if ((f < l && e === m) || (f >= l && m.type === e)) return f;
        }
        if (r) {
          const f = s[l];
          if (f && un(f) && f.type === e) return l;
        }
        return null;
      }
      function Oi(n, t, e, i) {
        let r = n[e];
        const o = t.data;
        if (
          (function WS(n) {
            return n instanceof xo;
          })(r)
        ) {
          const s = r;
          s.resolving &&
            (function XE(n, t) {
              const e = t ? `. Dependency path: ${t.join(" > ")} > ${n}` : "";
              throw new w(
                -200,
                `Circular dependency in DI detected for ${n}${e}`
              );
            })(
              (function _e(n) {
                return "function" == typeof n
                  ? n.name || n.toString()
                  : "object" == typeof n &&
                    null != n &&
                    "function" == typeof n.type
                  ? n.type.name || n.type.toString()
                  : K(n);
              })(o[e])
            );
          const a = ua(s.canSeeViewProviders);
          s.resolving = !0;
          const l = s.injectImpl ? Xt(s.injectImpl) : null;
          Um(n, i, G.Default);
          try {
            (r = n[e] = s.factory(void 0, o, n, i)),
              t.firstCreatePass &&
                e >= i.directiveStart &&
                (function US(n, t, e) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: r,
                    ngDoCheck: o,
                  } = t.type.prototype;
                  if (i) {
                    const s = Im(t);
                    (e.preOrderHooks ?? (e.preOrderHooks = [])).push(n, s),
                      (
                        e.preOrderCheckHooks ?? (e.preOrderCheckHooks = [])
                      ).push(n, s);
                  }
                  r &&
                    (e.preOrderHooks ?? (e.preOrderHooks = [])).push(0 - n, r),
                    o &&
                      ((e.preOrderHooks ?? (e.preOrderHooks = [])).push(n, o),
                      (
                        e.preOrderCheckHooks ?? (e.preOrderCheckHooks = [])
                      ).push(n, o));
                })(e, o[e], t);
          } finally {
            null !== l && Xt(l), ua(a), (s.resolving = !1), Ym();
          }
        }
        return r;
      }
      function ag(n, t, e) {
        return !!(e[t + (n >> tg)] & (1 << n));
      }
      function lg(n, t) {
        return !(n & G.Self || (n & G.Host && t));
      }
      class fr {
        constructor(t, e) {
          (this._tNode = t), (this._lView = e);
        }
        get(t, e, i) {
          return og(this._tNode, this._lView, t, Ks(i), e);
        }
      }
      function tM() {
        return new fr(ct(), D());
      }
      function ue(n) {
        return Hn(() => {
          const t = n.prototype.constructor,
            e = t[zn] || md(t),
            i = Object.prototype;
          let r = Object.getPrototypeOf(n.prototype).constructor;
          for (; r && r !== i; ) {
            const o = r[zn] || md(r);
            if (o && o !== e) return o;
            r = Object.getPrototypeOf(r);
          }
          return (o) => new o();
        });
      }
      function md(n) {
        return zc(n)
          ? () => {
              const t = md(H(n));
              return t && t();
            }
          : Ri(n);
      }
      function cg(n) {
        const t = n[R],
          e = t.type;
        return 2 === e ? t.declTNode : 1 === e ? n[ht] : null;
      }
      function Eo(n) {
        return (function QS(n, t) {
          if ("class" === t) return n.classes;
          if ("style" === t) return n.styles;
          const e = n.attrs;
          if (e) {
            const i = e.length;
            let r = 0;
            for (; r < i; ) {
              const o = e[r];
              if (Zm(o)) break;
              if (0 === o) r += 2;
              else if ("number" == typeof o)
                for (r++; r < i && "string" == typeof e[r]; ) r++;
              else {
                if (o === t) return e[r + 1];
                r += 2;
              }
            }
          }
          return null;
        })(ct(), n);
      }
      const mr = "__parameters__";
      function _r(n, t, e) {
        return Hn(() => {
          const i = (function gd(n) {
            return function (...e) {
              if (n) {
                const i = n(...e);
                for (const r in i) this[r] = i[r];
              }
            };
          })(t);
          function r(...o) {
            if (this instanceof r) return i.apply(this, o), this;
            const s = new r(...o);
            return (a.annotation = s), a;
            function a(l, c, d) {
              const u = l.hasOwnProperty(mr)
                ? l[mr]
                : Object.defineProperty(l, mr, { value: [] })[mr];
              for (; u.length <= d; ) u.push(null);
              return (u[d] = u[d] || []).push(s), l;
            }
          }
          return (
            e && (r.prototype = Object.create(e.prototype)),
            (r.prototype.ngMetadataName = n),
            (r.annotationCls = r),
            r
          );
        });
      }
      class C {
        constructor(t, e) {
          (this._desc = t),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = I({
                  token: this,
                  providedIn: e.providedIn || "root",
                  factory: e.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      function Fi(n, t) {
        n.forEach((e) => (Array.isArray(e) ? Fi(e, t) : t(e)));
      }
      function ug(n, t, e) {
        t >= n.length ? n.push(e) : n.splice(t, 0, e);
      }
      function pa(n, t) {
        return t >= n.length - 1 ? n.pop() : n.splice(t, 1)[0];
      }
      function To(n, t) {
        const e = [];
        for (let i = 0; i < n; i++) e.push(t);
        return e;
      }
      function Ht(n, t, e) {
        let i = br(n, t);
        return (
          i >= 0
            ? (n[1 | i] = e)
            : ((i = ~i),
              (function sM(n, t, e, i) {
                let r = n.length;
                if (r == t) n.push(e, i);
                else if (1 === r) n.push(i, n[0]), (n[0] = e);
                else {
                  for (r--, n.push(n[r - 1], n[r]); r > t; )
                    (n[r] = n[r - 2]), r--;
                  (n[t] = e), (n[t + 1] = i);
                }
              })(n, i, t, e)),
          i
        );
      }
      function bd(n, t) {
        const e = br(n, t);
        if (e >= 0) return n[1 | e];
      }
      function br(n, t) {
        return (function hg(n, t, e) {
          let i = 0,
            r = n.length >> e;
          for (; r !== i; ) {
            const o = i + ((r - i) >> 1),
              s = n[o << e];
            if (t === s) return o << e;
            s > t ? (r = o) : (i = o + 1);
          }
          return ~(r << e);
        })(n, t, 1);
      }
      const ga = mo(
          _r("Inject", (n) => ({ token: n })),
          -1
        ),
        Pi = mo(_r("Optional"), 8),
        yr = mo(_r("SkipSelf"), 4);
      var It = (() => (
        ((It = It || {})[(It.Important = 1)] = "Important"),
        (It[(It.DashCase = 2)] = "DashCase"),
        It
      ))();
      const xd = new Map();
      let TM = 0;
      const Ed = "__ngContext__";
      function pt(n, t) {
        Vt(t)
          ? ((n[Ed] = t[vo]),
            (function IM(n) {
              xd.set(n[vo], n);
            })(t))
          : (n[Ed] = t);
      }
      let Sd;
      function Md(n, t) {
        return Sd(n, t);
      }
      function ko(n) {
        const t = n[Le];
        return dn(t) ? t[Le] : t;
      }
      function Td(n) {
        return kg(n[bo]);
      }
      function Ad(n) {
        return kg(n[cn]);
      }
      function kg(n) {
        for (; null !== n && !dn(n); ) n = n[cn];
        return n;
      }
      function Dr(n, t, e, i, r) {
        if (null != i) {
          let o,
            s = !1;
          dn(i) ? (o = i) : Vt(i) && ((s = !0), (i = i[$n]));
          const a = lt(i);
          0 === n && null !== e
            ? null == r
              ? Vg(t, e, a)
              : Ni(t, e, a, r || null, !0)
            : 1 === n && null !== e
            ? Ni(t, e, a, r || null, !0)
            : 2 === n
            ? (function Nd(n, t, e) {
                const i = ya(n, t);
                i &&
                  (function ZM(n, t, e, i) {
                    n.removeChild(t, e, i);
                  })(n, i, t, e);
              })(t, a, s)
            : 3 === n && t.destroyNode(a),
            null != o &&
              (function JM(n, t, e, i, r) {
                const o = e[ea];
                o !== lt(e) && Dr(t, n, i, o, r);
                for (let a = vt; a < e.length; a++) {
                  const l = e[a];
                  Oo(l[R], l, n, t, i, o);
                }
              })(t, n, o, e, r);
        }
      }
      function Rd(n, t, e) {
        return n.createElement(t, e);
      }
      function Fg(n, t) {
        const e = n[cr],
          i = e.indexOf(t),
          r = t[Le];
        512 & t[J] && ((t[J] &= -513), ed(r, -1)), e.splice(i, 1);
      }
      function kd(n, t) {
        if (n.length <= vt) return;
        const e = vt + t,
          i = n[e];
        if (i) {
          const r = i[yo];
          null !== r && r !== n && Fg(r, i), t > 0 && (n[e - 1][cn] = i[cn]);
          const o = pa(n, vt + t);
          !(function zM(n, t) {
            Oo(n, t, t[te], 2, null, null), (t[$n] = null), (t[ht] = null);
          })(i[R], i);
          const s = o[wn];
          null !== s && s.detachView(o[R]),
            (i[Le] = null),
            (i[cn] = null),
            (i[J] &= -65);
        }
        return i;
      }
      function Pg(n, t) {
        if (!(128 & t[J])) {
          const e = t[te];
          e.destroyNode && Oo(n, t, e, 3, null, null),
            (function GM(n) {
              let t = n[bo];
              if (!t) return Od(n[R], n);
              for (; t; ) {
                let e = null;
                if (Vt(t)) e = t[bo];
                else {
                  const i = t[vt];
                  i && (e = i);
                }
                if (!e) {
                  for (; t && !t[cn] && t !== n; )
                    Vt(t) && Od(t[R], t), (t = t[Le]);
                  null === t && (t = n), Vt(t) && Od(t[R], t), (e = t && t[cn]);
                }
                t = e;
              }
            })(t);
        }
      }
      function Od(n, t) {
        if (!(128 & t[J])) {
          (t[J] &= -65),
            (t[J] |= 128),
            (function KM(n, t) {
              let e;
              if (null != n && null != (e = n.destroyHooks))
                for (let i = 0; i < e.length; i += 2) {
                  const r = t[e[i]];
                  if (!(r instanceof xo)) {
                    const o = e[i + 1];
                    if (Array.isArray(o))
                      for (let s = 0; s < o.length; s += 2) {
                        const a = r[o[s]],
                          l = o[s + 1];
                        Qt(4, a, l);
                        try {
                          l.call(a);
                        } finally {
                          Qt(5, a, l);
                        }
                      }
                    else {
                      Qt(4, r, o);
                      try {
                        o.call(r);
                      } finally {
                        Qt(5, r, o);
                      }
                    }
                  }
                }
            })(n, t),
            (function YM(n, t) {
              const e = n.cleanup,
                i = t[sr];
              let r = -1;
              if (null !== e)
                for (let o = 0; o < e.length - 1; o += 2)
                  if ("string" == typeof e[o]) {
                    const s = e[o + 3];
                    s >= 0 ? i[(r = s)]() : i[(r = -s)].unsubscribe(), (o += 2);
                  } else {
                    const s = i[(r = e[o + 1])];
                    e[o].call(s);
                  }
              if (null !== i) {
                for (let o = r + 1; o < i.length; o++) (0, i[o])();
                t[sr] = null;
              }
            })(n, t),
            1 === t[R].type && t[te].destroy();
          const e = t[yo];
          if (null !== e && dn(t[Le])) {
            e !== t[Le] && Fg(e, t);
            const i = t[wn];
            null !== i && i.detachView(n);
          }
          !(function RM(n) {
            xd.delete(n[vo]);
          })(t);
        }
      }
      function Ng(n, t, e) {
        return (function Lg(n, t, e) {
          let i = t;
          for (; null !== i && 40 & i.type; ) i = (t = i).parent;
          if (null === i) return e[$n];
          {
            const { componentOffset: r } = i;
            if (r > -1) {
              const { encapsulation: o } = n.data[i.directiveStart + r];
              if (o === ln.None || o === ln.Emulated) return null;
            }
            return Bt(i, e);
          }
        })(n, t.parent, e);
      }
      function Ni(n, t, e, i, r) {
        n.insertBefore(t, e, i, r);
      }
      function Vg(n, t, e) {
        n.appendChild(t, e);
      }
      function Bg(n, t, e, i, r) {
        null !== i ? Ni(n, t, e, i, r) : Vg(n, t, e);
      }
      function ya(n, t) {
        return n.parentNode(t);
      }
      function Hg(n, t, e) {
        return zg(n, t, e);
      }
      let Fd,
        Bd,
        zg = function jg(n, t, e) {
          return 40 & n.type ? Bt(n, e) : null;
        };
      function va(n, t, e, i) {
        const r = Ng(n, i, t),
          o = t[te],
          a = Hg(i.parent || t[ht], i, t);
        if (null != r)
          if (Array.isArray(e))
            for (let l = 0; l < e.length; l++) Bg(o, r, e[l], a, !1);
          else Bg(o, r, e, a, !1);
        void 0 !== Fd && Fd(o, i, t, e, r);
      }
      function Da(n, t) {
        if (null !== t) {
          const e = t.type;
          if (3 & e) return Bt(t, n);
          if (4 & e) return Pd(-1, n[t.index]);
          if (8 & e) {
            const i = t.child;
            if (null !== i) return Da(n, i);
            {
              const r = n[t.index];
              return dn(r) ? Pd(-1, r) : lt(r);
            }
          }
          if (32 & e) return Md(t, n)() || lt(n[t.index]);
          {
            const i = Ug(n, t);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : Da(ko(n[ft]), i)
              : Da(n, t.next);
          }
        }
        return null;
      }
      function Ug(n, t) {
        return null !== t ? n[ft][ht].projection[t.projection] : null;
      }
      function Pd(n, t) {
        const e = vt + n + 1;
        if (e < t.length) {
          const i = t[e],
            r = i[R].firstChild;
          if (null !== r) return Da(i, r);
        }
        return t[ea];
      }
      function Ld(n, t, e, i, r, o, s) {
        for (; null != e; ) {
          const a = i[e.index],
            l = e.type;
          if (
            (s && 0 === t && (a && pt(lt(a), i), (e.flags |= 2)),
            32 != (32 & e.flags))
          )
            if (8 & l) Ld(n, t, e.child, i, r, o, !1), Dr(t, n, r, a, o);
            else if (32 & l) {
              const c = Md(e, i);
              let d;
              for (; (d = c()); ) Dr(t, n, r, d, o);
              Dr(t, n, r, a, o);
            } else 16 & l ? Gg(n, t, i, e, r, o) : Dr(t, n, r, a, o);
          e = s ? e.projectionNext : e.next;
        }
      }
      function Oo(n, t, e, i, r, o) {
        Ld(e, i, n.firstChild, t, r, o, !1);
      }
      function Gg(n, t, e, i, r, o) {
        const s = e[ft],
          l = s[ht].projection[i.projection];
        if (Array.isArray(l))
          for (let c = 0; c < l.length; c++) Dr(t, n, r, l[c], o);
        else Ld(n, t, l, s[Le], r, o, !0);
      }
      function Wg(n, t, e) {
        "" === e
          ? n.removeAttribute(t, "class")
          : n.setAttribute(t, "class", e);
      }
      function qg(n, t, e) {
        const { mergedAttrs: i, classes: r, styles: o } = e;
        null !== i && dd(n, t, i),
          null !== r && Wg(n, t, r),
          null !== o &&
            (function tT(n, t, e) {
              n.setAttribute(t, "style", e);
            })(n, t, o);
      }
      class Qg {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
        }
      }
      function mi(n) {
        return n instanceof Qg ? n.changingThisBreaksApplicationSecurity : n;
      }
      const a_ = new C("ENVIRONMENT_INITIALIZER"),
        l_ = new C("INJECTOR", -1),
        c_ = new C("INJECTOR_DEF_TYPES");
      class d_ {
        get(t, e = fo) {
          if (e === fo) {
            const i = new Error(`NullInjectorError: No provider for ${Me(t)}!`);
            throw ((i.name = "NullInjectorError"), i);
          }
          return e;
        }
      }
      function AT(...n) {
        return { ɵproviders: u_(0, n), ɵfromNgModule: !0 };
      }
      function u_(n, ...t) {
        const e = [],
          i = new Set();
        let r;
        return (
          Fi(t, (o) => {
            const s = o;
            Gd(s, e, [], i) && (r || (r = []), r.push(s));
          }),
          void 0 !== r && h_(r, e),
          e
        );
      }
      function h_(n, t) {
        for (let e = 0; e < n.length; e++) {
          const { providers: r } = n[e];
          Wd(r, (o) => {
            t.push(o);
          });
        }
      }
      function Gd(n, t, e, i) {
        if (!(n = H(n))) return !1;
        let r = null,
          o = gm(n);
        const s = !o && ye(n);
        if (o || s) {
          if (s && !s.standalone) return !1;
          r = n;
        } else {
          const l = n.ngModule;
          if (((o = gm(l)), !o)) return !1;
          r = l;
        }
        const a = i.has(r);
        if (s) {
          if (a) return !1;
          if ((i.add(r), s.dependencies)) {
            const l =
              "function" == typeof s.dependencies
                ? s.dependencies()
                : s.dependencies;
            for (const c of l) Gd(c, t, e, i);
          }
        } else {
          if (!o) return !1;
          {
            if (null != o.imports && !a) {
              let c;
              i.add(r);
              try {
                Fi(o.imports, (d) => {
                  Gd(d, t, e, i) && (c || (c = []), c.push(d));
                });
              } finally {
              }
              void 0 !== c && h_(c, t);
            }
            if (!a) {
              const c = Ri(r) || (() => new r());
              t.push(
                { provide: r, useFactory: c, deps: me },
                { provide: c_, useValue: r, multi: !0 },
                { provide: a_, useValue: () => b(r), multi: !0 }
              );
            }
            const l = o.providers;
            null == l ||
              a ||
              Wd(l, (d) => {
                t.push(d);
              });
          }
        }
        return r !== n && void 0 !== n.providers;
      }
      function Wd(n, t) {
        for (let e of n)
          $c(e) && (e = e.ɵproviders), Array.isArray(e) ? Wd(e, t) : t(e);
      }
      const IT = Ce({ provide: String, useValue: Ce });
      function qd(n) {
        return null !== n && "object" == typeof n && IT in n;
      }
      function Li(n) {
        return "function" == typeof n;
      }
      const Yd = new C("Set Injector scope."),
        Ea = {},
        kT = {};
      let Kd;
      function Sa() {
        return void 0 === Kd && (Kd = new d_()), Kd;
      }
      class xr {}
      class m_ extends xr {
        get destroyed() {
          return this._destroyed;
        }
        constructor(t, e, i, r) {
          super(),
            (this.parent = e),
            (this.source = i),
            (this.scopes = r),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            Xd(t, (s) => this.processProvider(s)),
            this.records.set(l_, Cr(void 0, this)),
            r.has("environment") && this.records.set(xr, Cr(void 0, this));
          const o = this.records.get(Yd);
          null != o && "string" == typeof o.value && this.scopes.add(o.value),
            (this.injectorDefTypes = new Set(this.get(c_.multi, me, G.Self)));
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const t of this._ngOnDestroyHooks) t.ngOnDestroy();
            for (const t of this._onDestroyHooks) t();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear(),
              (this._onDestroyHooks.length = 0);
          }
        }
        onDestroy(t) {
          this._onDestroyHooks.push(t);
        }
        runInContext(t) {
          this.assertNotDestroyed();
          const e = or(this),
            i = Xt(void 0);
          try {
            return t();
          } finally {
            or(e), Xt(i);
          }
        }
        get(t, e = fo, i = G.Default) {
          this.assertNotDestroyed(), (i = Ks(i));
          const r = or(this),
            o = Xt(void 0);
          try {
            if (!(i & G.SkipSelf)) {
              let a = this.records.get(t);
              if (void 0 === a) {
                const l =
                  (function LT(n) {
                    return (
                      "function" == typeof n ||
                      ("object" == typeof n && n instanceof C)
                    );
                  })(t) && Ws(t);
                (a = l && this.injectableDefInScope(l) ? Cr(Zd(t), Ea) : null),
                  this.records.set(t, a);
              }
              if (null != a) return this.hydrate(t, a);
            }
            return (i & G.Self ? Sa() : this.parent).get(
              t,
              (e = i & G.Optional && e === fo ? null : e)
            );
          } catch (s) {
            if ("NullInjectorError" === s.name) {
              if (((s[Ys] = s[Ys] || []).unshift(Me(t)), r)) throw s;
              return (function dS(n, t, e, i) {
                const r = n[Ys];
                throw (
                  (t[ym] && r.unshift(t[ym]),
                  (n.message = (function uS(n, t, e, i = null) {
                    n =
                      n && "\n" === n.charAt(0) && n.charAt(1) == aS
                        ? n.slice(2)
                        : n;
                    let r = Me(t);
                    if (Array.isArray(t)) r = t.map(Me).join(" -> ");
                    else if ("object" == typeof t) {
                      let o = [];
                      for (let s in t)
                        if (t.hasOwnProperty(s)) {
                          let a = t[s];
                          o.push(
                            s +
                              ":" +
                              ("string" == typeof a ? JSON.stringify(a) : Me(a))
                          );
                        }
                      r = `{${o.join(", ")}}`;
                    }
                    return `${e}${i ? "(" + i + ")" : ""}[${r}]: ${n.replace(
                      sS,
                      "\n  "
                    )}`;
                  })("\n" + n.message, r, e, i)),
                  (n[oS] = r),
                  (n[Ys] = null),
                  n)
                );
              })(s, t, "R3InjectorError", this.source);
            }
            throw s;
          } finally {
            Xt(o), or(r);
          }
        }
        resolveInjectorInitializers() {
          const t = or(this),
            e = Xt(void 0);
          try {
            const i = this.get(a_.multi, me, G.Self);
            for (const r of i) r();
          } finally {
            or(t), Xt(e);
          }
        }
        toString() {
          const t = [],
            e = this.records;
          for (const i of e.keys()) t.push(Me(i));
          return `R3Injector[${t.join(", ")}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new w(205, !1);
        }
        processProvider(t) {
          let e = Li((t = H(t))) ? t : H(t && t.provide);
          const i = (function FT(n) {
            return qd(n) ? Cr(void 0, n.useValue) : Cr(g_(n), Ea);
          })(t);
          if (Li(t) || !0 !== t.multi) this.records.get(e);
          else {
            let r = this.records.get(e);
            r ||
              ((r = Cr(void 0, Ea, !0)),
              (r.factory = () => qc(r.multi)),
              this.records.set(e, r)),
              (e = t),
              r.multi.push(t);
          }
          this.records.set(e, i);
        }
        hydrate(t, e) {
          return (
            e.value === Ea && ((e.value = kT), (e.value = e.factory())),
            "object" == typeof e.value &&
              e.value &&
              (function NT(n) {
                return (
                  null !== n &&
                  "object" == typeof n &&
                  "function" == typeof n.ngOnDestroy
                );
              })(e.value) &&
              this._ngOnDestroyHooks.add(e.value),
            e.value
          );
        }
        injectableDefInScope(t) {
          if (!t.providedIn) return !1;
          const e = H(t.providedIn);
          return "string" == typeof e
            ? "any" === e || this.scopes.has(e)
            : this.injectorDefTypes.has(e);
        }
      }
      function Zd(n) {
        const t = Ws(n),
          e = null !== t ? t.factory : Ri(n);
        if (null !== e) return e;
        if (n instanceof C) throw new w(204, !1);
        if (n instanceof Function)
          return (function OT(n) {
            const t = n.length;
            if (t > 0) throw (To(t, "?"), new w(204, !1));
            const e = (function nS(n) {
              return (n && (n[qs] || n[_m])) || null;
            })(n);
            return null !== e ? () => e.factory(n) : () => new n();
          })(n);
        throw new w(204, !1);
      }
      function g_(n, t, e) {
        let i;
        if (Li(n)) {
          const r = H(n);
          return Ri(r) || Zd(r);
        }
        if (qd(n)) i = () => H(n.useValue);
        else if (
          (function p_(n) {
            return !(!n || !n.useFactory);
          })(n)
        )
          i = () => n.useFactory(...qc(n.deps || []));
        else if (
          (function f_(n) {
            return !(!n || !n.useExisting);
          })(n)
        )
          i = () => b(H(n.useExisting));
        else {
          const r = H(n && (n.useClass || n.provide));
          if (
            !(function PT(n) {
              return !!n.deps;
            })(n)
          )
            return Ri(r) || Zd(r);
          i = () => new r(...qc(n.deps));
        }
        return i;
      }
      function Cr(n, t, e = !1) {
        return { factory: n, value: t, multi: e ? [] : void 0 };
      }
      function Xd(n, t) {
        for (const e of n)
          Array.isArray(e) ? Xd(e, t) : e && $c(e) ? Xd(e.ɵproviders, t) : t(e);
      }
      class VT {}
      class __ {}
      class HT {
        resolveComponentFactory(t) {
          throw (function BT(n) {
            const t = Error(
              `No component factory found for ${Me(
                n
              )}. Did you add it to @NgModule.entryComponents?`
            );
            return (t.ngComponent = n), t;
          })(t);
        }
      }
      let Er = (() => {
        class n {}
        return (n.NULL = new HT()), n;
      })();
      function jT() {
        return Sr(ct(), D());
      }
      function Sr(n, t) {
        return new U(Bt(n, t));
      }
      let U = (() => {
        class n {
          constructor(e) {
            this.nativeElement = e;
          }
        }
        return (n.__NG_ELEMENT_ID__ = jT), n;
      })();
      function zT(n) {
        return n instanceof U ? n.nativeElement : n;
      }
      class Lo {}
      let gi = (() => {
          class n {}
          return (
            (n.__NG_ELEMENT_ID__ = () =>
              (function $T() {
                const n = D(),
                  e = At(ct().index, n);
                return (Vt(e) ? e : n)[te];
              })()),
            n
          );
        })(),
        UT = (() => {
          class n {}
          return (
            (n.ɵprov = I({
              token: n,
              providedIn: "root",
              factory: () => null,
            })),
            n
          );
        })();
      class Mr {
        constructor(t) {
          (this.full = t),
            (this.major = t.split(".")[0]),
            (this.minor = t.split(".")[1]),
            (this.patch = t.split(".").slice(2).join("."));
        }
      }
      const GT = new Mr("15.2.9"),
        Qd = {},
        Jd = "ngOriginalError";
      function eu(n) {
        return n[Jd];
      }
      class Tr {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const e = this._findOriginalError(t);
          this._console.error("ERROR", t),
            e && this._console.error("ORIGINAL ERROR", e);
        }
        _findOriginalError(t) {
          let e = t && eu(t);
          for (; e && eu(e); ) e = eu(e);
          return e || null;
        }
      }
      function tu(n) {
        return n.ownerDocument;
      }
      function v_(n, t, e) {
        let i = n.length;
        for (;;) {
          const r = n.indexOf(t, e);
          if (-1 === r) return r;
          if (0 === r || n.charCodeAt(r - 1) <= 32) {
            const o = t.length;
            if (r + o === i || n.charCodeAt(r + o) <= 32) return r;
          }
          e = r + 1;
        }
      }
      const D_ = "ng-template";
      function tA(n, t, e) {
        let i = 0,
          r = !0;
        for (; i < n.length; ) {
          let o = n[i++];
          if ("string" == typeof o && r) {
            const s = n[i++];
            if (e && "class" === o && -1 !== v_(s.toLowerCase(), t, 0))
              return !0;
          } else {
            if (1 === o) {
              for (; i < n.length && "string" == typeof (o = n[i++]); )
                if (o.toLowerCase() === t) return !0;
              return !1;
            }
            "number" == typeof o && (r = !1);
          }
        }
        return !1;
      }
      function w_(n) {
        return 4 === n.type && n.value !== D_;
      }
      function nA(n, t, e) {
        return t === (4 !== n.type || e ? n.value : D_);
      }
      function iA(n, t, e) {
        let i = 4;
        const r = n.attrs || [],
          o = (function sA(n) {
            for (let t = 0; t < n.length; t++) if (Zm(n[t])) return t;
            return n.length;
          })(r);
        let s = !1;
        for (let a = 0; a < t.length; a++) {
          const l = t[a];
          if ("number" != typeof l) {
            if (!s)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ("" !== l && !nA(n, l, e)) || ("" === l && 1 === t.length))
                ) {
                  if (hn(i)) return !1;
                  s = !0;
                }
              } else {
                const c = 8 & i ? l : t[++a];
                if (8 & i && null !== n.attrs) {
                  if (!tA(n.attrs, c, e)) {
                    if (hn(i)) return !1;
                    s = !0;
                  }
                  continue;
                }
                const u = rA(8 & i ? "class" : l, r, w_(n), e);
                if (-1 === u) {
                  if (hn(i)) return !1;
                  s = !0;
                  continue;
                }
                if ("" !== c) {
                  let h;
                  h = u > o ? "" : r[u + 1].toLowerCase();
                  const f = 8 & i ? h : null;
                  if ((f && -1 !== v_(f, c, 0)) || (2 & i && c !== h)) {
                    if (hn(i)) return !1;
                    s = !0;
                  }
                }
              }
          } else {
            if (!s && !hn(i) && !hn(l)) return !1;
            if (s && hn(l)) continue;
            (s = !1), (i = l | (1 & i));
          }
        }
        return hn(i) || s;
      }
      function hn(n) {
        return 0 == (1 & n);
      }
      function rA(n, t, e, i) {
        if (null === t) return -1;
        let r = 0;
        if (i || !e) {
          let o = !1;
          for (; r < t.length; ) {
            const s = t[r];
            if (s === n) return r;
            if (3 === s || 6 === s) o = !0;
            else {
              if (1 === s || 2 === s) {
                let a = t[++r];
                for (; "string" == typeof a; ) a = t[++r];
                continue;
              }
              if (4 === s) break;
              if (0 === s) {
                r += 4;
                continue;
              }
            }
            r += o ? 1 : 2;
          }
          return -1;
        }
        return (function aA(n, t) {
          let e = n.indexOf(4);
          if (e > -1)
            for (e++; e < n.length; ) {
              const i = n[e];
              if ("number" == typeof i) return -1;
              if (i === t) return e;
              e++;
            }
          return -1;
        })(t, n);
      }
      function x_(n, t, e = !1) {
        for (let i = 0; i < t.length; i++) if (iA(n, t[i], e)) return !0;
        return !1;
      }
      function lA(n, t) {
        e: for (let e = 0; e < t.length; e++) {
          const i = t[e];
          if (n.length === i.length) {
            for (let r = 0; r < n.length; r++) if (n[r] !== i[r]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function C_(n, t) {
        return n ? ":not(" + t.trim() + ")" : t;
      }
      function cA(n) {
        let t = n[0],
          e = 1,
          i = 2,
          r = "",
          o = !1;
        for (; e < n.length; ) {
          let s = n[e];
          if ("string" == typeof s)
            if (2 & i) {
              const a = n[++e];
              r += "[" + s + (a.length > 0 ? '="' + a + '"' : "") + "]";
            } else 8 & i ? (r += "." + s) : 4 & i && (r += " " + s);
          else
            "" !== r && !hn(s) && ((t += C_(o, r)), (r = "")),
              (i = s),
              (o = o || !hn(i));
          e++;
        }
        return "" !== r && (t += C_(o, r)), t;
      }
      const X = {};
      function O(n) {
        E_(ce(), D(), wt() + n, !1);
      }
      function E_(n, t, e, i) {
        if (!i)
          if (3 == (3 & t[J])) {
            const o = n.preOrderCheckHooks;
            null !== o && aa(t, o, e);
          } else {
            const o = n.preOrderHooks;
            null !== o && la(t, o, 0, e);
          }
        ki(e);
      }
      function A_(n, t = null, e = null, i) {
        const r = I_(n, t, e, i);
        return r.resolveInjectorInitializers(), r;
      }
      function I_(n, t = null, e = null, i, r = new Set()) {
        const o = [e || me, AT(n)];
        return (
          (i = i || ("object" == typeof n ? void 0 : Me(n))),
          new m_(o, t || Sa(), i || null, r)
        );
      }
      let kt = (() => {
        class n {
          static create(e, i) {
            if (Array.isArray(e)) return A_({ name: "" }, i, e, "");
            {
              const r = e.name ?? "";
              return A_({ name: r }, e.parent, e.providers, r);
            }
          }
        }
        return (
          (n.THROW_IF_NOT_FOUND = fo),
          (n.NULL = new d_()),
          (n.ɵprov = I({ token: n, providedIn: "any", factory: () => b(l_) })),
          (n.__NG_ELEMENT_ID__ = -1),
          n
        );
      })();
      function p(n, t = G.Default) {
        const e = D();
        return null === e ? b(n, t) : og(ct(), e, H(n), t);
      }
      function Rr() {
        throw new Error("invalid");
      }
      function L_(n, t) {
        const e = n.contentQueries;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) {
            const o = e[i + 1];
            if (-1 !== o) {
              const s = n.data[o];
              od(e[i]), s.contentQueries(2, t[o], o);
            }
          }
      }
      function Ta(n, t, e, i, r, o, s, a, l, c, d) {
        const u = t.blueprint.slice();
        return (
          (u[$n] = r),
          (u[J] = 76 | i),
          (null !== d || (n && 1024 & n[J])) && (u[J] |= 1024),
          Nm(u),
          (u[Le] = u[ar] = n),
          (u[ze] = e),
          (u[Js] = s || (n && n[Js])),
          (u[te] = a || (n && n[te])),
          (u[Zc] = l || (n && n[Zc]) || null),
          (u[Qs] = c || (n && n[Qs]) || null),
          (u[ht] = o),
          (u[vo] = (function AM() {
            return TM++;
          })()),
          (u[Sm] = d),
          (u[ft] = 2 == t.type ? n[ft] : u),
          u
        );
      }
      function kr(n, t, e, i, r) {
        let o = n.data[t];
        if (null === o)
          (o = (function su(n, t, e, i, r) {
            const o = Bm(),
              s = td(),
              l = (n.data[t] = (function PA(n, t, e, i, r, o) {
                return {
                  type: e,
                  index: i,
                  insertBeforeIndex: null,
                  injectorIndex: t ? t.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  componentOffset: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: r,
                  attrs: o,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tView: null,
                  next: null,
                  prev: null,
                  projectionNext: null,
                  child: null,
                  parent: t,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, s ? o : o && o.parent, e, t, i, r));
            return (
              null === n.firstChild && (n.firstChild = l),
              null !== o &&
                (s
                  ? null == o.child && null !== l.parent && (o.child = l)
                  : null === o.next && ((o.next = l), (l.prev = o))),
              l
            );
          })(n, t, e, i, r)),
            (function PS() {
              return Z.lFrame.inI18n;
            })() && (o.flags |= 32);
        else if (64 & o.type) {
          (o.type = e), (o.value = i), (o.attrs = r);
          const s = (function wo() {
            const n = Z.lFrame,
              t = n.currentTNode;
            return n.isParent ? t : t.parent;
          })();
          o.injectorIndex = null === s ? -1 : s.injectorIndex;
        }
        return xn(o, !0), o;
      }
      function Vo(n, t, e, i) {
        if (0 === e) return -1;
        const r = t.length;
        for (let o = 0; o < e; o++)
          t.push(i), n.blueprint.push(i), n.data.push(null);
        return r;
      }
      function au(n, t, e) {
        sd(t);
        try {
          const i = n.viewQuery;
          null !== i && gu(1, i, e);
          const r = n.template;
          null !== r && V_(n, t, r, 1, e),
            n.firstCreatePass && (n.firstCreatePass = !1),
            n.staticContentQueries && L_(n, t),
            n.staticViewQueries && gu(2, n.viewQuery, e);
          const o = n.components;
          null !== o &&
            (function kA(n, t) {
              for (let e = 0; e < t.length; e++) tI(n, t[e]);
            })(t, o);
        } catch (i) {
          throw (
            (n.firstCreatePass &&
              ((n.incompleteFirstPass = !0), (n.firstCreatePass = !1)),
            i)
          );
        } finally {
          (t[J] &= -5), ad();
        }
      }
      function Aa(n, t, e, i) {
        const r = t[J];
        if (128 != (128 & r)) {
          sd(t);
          try {
            Nm(t),
              (function jm(n) {
                return (Z.lFrame.bindingIndex = n);
              })(n.bindingStartIndex),
              null !== e && V_(n, t, e, 2, i);
            const s = 3 == (3 & r);
            if (s) {
              const c = n.preOrderCheckHooks;
              null !== c && aa(t, c, null);
            } else {
              const c = n.preOrderHooks;
              null !== c && la(t, c, 0, null), ld(t, 0);
            }
            if (
              ((function JA(n) {
                for (let t = Td(n); null !== t; t = Ad(t)) {
                  if (!t[Mm]) continue;
                  const e = t[cr];
                  for (let i = 0; i < e.length; i++) {
                    const r = e[i];
                    512 & r[J] || ed(r[Le], 1), (r[J] |= 512);
                  }
                }
              })(t),
              (function QA(n) {
                for (let t = Td(n); null !== t; t = Ad(t))
                  for (let e = vt; e < t.length; e++) {
                    const i = t[e],
                      r = i[R];
                    ra(i) && Aa(r, i, r.template, i[ze]);
                  }
              })(t),
              null !== n.contentQueries && L_(n, t),
              s)
            ) {
              const c = n.contentCheckHooks;
              null !== c && aa(t, c);
            } else {
              const c = n.contentHooks;
              null !== c && la(t, c, 1), ld(t, 1);
            }
            !(function IA(n, t) {
              const e = n.hostBindingOpCodes;
              if (null !== e)
                try {
                  for (let i = 0; i < e.length; i++) {
                    const r = e[i];
                    if (r < 0) ki(~r);
                    else {
                      const o = r,
                        s = e[++i],
                        a = e[++i];
                      NS(s, o), a(2, t[o]);
                    }
                  }
                } finally {
                  ki(-1);
                }
            })(n, t);
            const a = n.components;
            null !== a &&
              (function RA(n, t) {
                for (let e = 0; e < t.length; e++) eI(n, t[e]);
              })(t, a);
            const l = n.viewQuery;
            if ((null !== l && gu(2, l, i), s)) {
              const c = n.viewCheckHooks;
              null !== c && aa(t, c);
            } else {
              const c = n.viewHooks;
              null !== c && la(t, c, 2), ld(t, 2);
            }
            !0 === n.firstUpdatePass && (n.firstUpdatePass = !1),
              (t[J] &= -41),
              512 & t[J] && ((t[J] &= -513), ed(t[Le], -1));
          } finally {
            ad();
          }
        }
      }
      function V_(n, t, e, i, r) {
        const o = wt(),
          s = 2 & i;
        try {
          ki(-1),
            s && t.length > Re && E_(n, t, Re, !1),
            Qt(s ? 2 : 0, r),
            e(i, r);
        } finally {
          ki(o), Qt(s ? 3 : 1, r);
        }
      }
      function lu(n, t, e) {
        if (Qc(t)) {
          const r = t.directiveEnd;
          for (let o = t.directiveStart; o < r; o++) {
            const s = n.data[o];
            s.contentQueries && s.contentQueries(1, e[o], o);
          }
        }
      }
      function cu(n, t, e) {
        Vm() &&
          ((function zA(n, t, e, i) {
            const r = e.directiveStart,
              o = e.directiveEnd;
            Do(e) &&
              (function KA(n, t, e) {
                const i = Bt(t, n),
                  r = B_(e),
                  o = n[Js],
                  s = Ia(
                    n,
                    Ta(
                      n,
                      r,
                      null,
                      e.onPush ? 32 : 16,
                      i,
                      t,
                      o,
                      o.createRenderer(i, e),
                      null,
                      null,
                      null
                    )
                  );
                n[t.index] = s;
              })(t, e, n.data[r + e.componentOffset]),
              n.firstCreatePass || ha(e, t),
              pt(i, t);
            const s = e.initialInputs;
            for (let a = r; a < o; a++) {
              const l = n.data[a],
                c = Oi(t, n, a, e);
              pt(c, t),
                null !== s && ZA(0, a - r, c, l, 0, s),
                un(l) && (At(e.index, t)[ze] = Oi(t, n, a, e));
            }
          })(n, t, e, Bt(e, t)),
          64 == (64 & e.flags) && U_(n, t, e));
      }
      function du(n, t, e = Bt) {
        const i = t.localNames;
        if (null !== i) {
          let r = t.index + 1;
          for (let o = 0; o < i.length; o += 2) {
            const s = i[o + 1],
              a = -1 === s ? e(t, n) : n[s];
            n[r++] = a;
          }
        }
      }
      function B_(n) {
        const t = n.tView;
        return null === t || t.incompleteFirstPass
          ? (n.tView = uu(
              1,
              null,
              n.template,
              n.decls,
              n.vars,
              n.directiveDefs,
              n.pipeDefs,
              n.viewQuery,
              n.schemas,
              n.consts
            ))
          : t;
      }
      function uu(n, t, e, i, r, o, s, a, l, c) {
        const d = Re + i,
          u = d + r,
          h = (function OA(n, t) {
            const e = [];
            for (let i = 0; i < t; i++) e.push(i < n ? null : X);
            return e;
          })(d, u),
          f = "function" == typeof c ? c() : c;
        return (h[R] = {
          type: n,
          blueprint: h,
          template: e,
          queries: null,
          viewQuery: a,
          declTNode: t,
          data: h.slice().fill(null, d),
          bindingStartIndex: d,
          expandoStartIndex: u,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof o ? o() : o,
          pipeRegistry: "function" == typeof s ? s() : s,
          firstChild: null,
          schemas: l,
          consts: f,
          incompleteFirstPass: !1,
        });
      }
      function H_(n, t, e, i) {
        const r = W_(t);
        null === e
          ? r.push(i)
          : (r.push(e), n.firstCreatePass && q_(n).push(i, r.length - 1));
      }
      function j_(n, t, e, i) {
        for (let r in n)
          if (n.hasOwnProperty(r)) {
            e = null === e ? {} : e;
            const o = n[r];
            null === i
              ? z_(e, t, r, o)
              : i.hasOwnProperty(r) && z_(e, t, i[r], o);
          }
        return e;
      }
      function z_(n, t, e, i) {
        n.hasOwnProperty(e) ? n[e].push(t, i) : (n[e] = [t, i]);
      }
      function jt(n, t, e, i, r, o, s, a) {
        const l = Bt(t, e);
        let d,
          c = t.inputs;
        !a && null != c && (d = c[i])
          ? (_u(n, e, d, i, r),
            Do(t) &&
              (function VA(n, t) {
                const e = At(t, n);
                16 & e[J] || (e[J] |= 32);
              })(e, t.index))
          : 3 & t.type &&
            ((i = (function LA(n) {
              return "class" === n
                ? "className"
                : "for" === n
                ? "htmlFor"
                : "formaction" === n
                ? "formAction"
                : "innerHtml" === n
                ? "innerHTML"
                : "readonly" === n
                ? "readOnly"
                : "tabindex" === n
                ? "tabIndex"
                : n;
            })(i)),
            (r = null != s ? s(r, t.value || "", i) : r),
            o.setProperty(l, i, r));
      }
      function hu(n, t, e, i) {
        if (Vm()) {
          const r = null === i ? null : { "": -1 },
            o = (function UA(n, t) {
              const e = n.directiveRegistry;
              let i = null,
                r = null;
              if (e)
                for (let o = 0; o < e.length; o++) {
                  const s = e[o];
                  if (x_(t, s.selectors, !1))
                    if ((i || (i = []), un(s)))
                      if (null !== s.findHostDirectiveDefs) {
                        const a = [];
                        (r = r || new Map()),
                          s.findHostDirectiveDefs(s, a, r),
                          i.unshift(...a, s),
                          fu(n, t, a.length);
                      } else i.unshift(s), fu(n, t, 0);
                    else
                      (r = r || new Map()),
                        s.findHostDirectiveDefs?.(s, i, r),
                        i.push(s);
                }
              return null === i ? null : [i, r];
            })(n, e);
          let s, a;
          null === o ? (s = a = null) : ([s, a] = o),
            null !== s && $_(n, t, e, s, r, a),
            r &&
              (function GA(n, t, e) {
                if (t) {
                  const i = (n.localNames = []);
                  for (let r = 0; r < t.length; r += 2) {
                    const o = e[t[r + 1]];
                    if (null == o) throw new w(-301, !1);
                    i.push(t[r], o);
                  }
                }
              })(e, i, r);
        }
        e.mergedAttrs = Co(e.mergedAttrs, e.attrs);
      }
      function $_(n, t, e, i, r, o) {
        for (let c = 0; c < i.length; c++) pd(ha(e, t), n, i[c].type);
        !(function qA(n, t, e) {
          (n.flags |= 1),
            (n.directiveStart = t),
            (n.directiveEnd = t + e),
            (n.providerIndexes = t);
        })(e, n.data.length, i.length);
        for (let c = 0; c < i.length; c++) {
          const d = i[c];
          d.providersResolver && d.providersResolver(d);
        }
        let s = !1,
          a = !1,
          l = Vo(n, t, i.length, null);
        for (let c = 0; c < i.length; c++) {
          const d = i[c];
          (e.mergedAttrs = Co(e.mergedAttrs, d.hostAttrs)),
            YA(n, e, t, l, d),
            WA(l, d, r),
            null !== d.contentQueries && (e.flags |= 4),
            (null !== d.hostBindings ||
              null !== d.hostAttrs ||
              0 !== d.hostVars) &&
              (e.flags |= 64);
          const u = d.type.prototype;
          !s &&
            (u.ngOnChanges || u.ngOnInit || u.ngDoCheck) &&
            ((n.preOrderHooks ?? (n.preOrderHooks = [])).push(e.index),
            (s = !0)),
            !a &&
              (u.ngOnChanges || u.ngDoCheck) &&
              ((n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])).push(
                e.index
              ),
              (a = !0)),
            l++;
        }
        !(function NA(n, t, e) {
          const r = t.directiveEnd,
            o = n.data,
            s = t.attrs,
            a = [];
          let l = null,
            c = null;
          for (let d = t.directiveStart; d < r; d++) {
            const u = o[d],
              h = e ? e.get(u) : null,
              m = h ? h.outputs : null;
            (l = j_(u.inputs, d, l, h ? h.inputs : null)),
              (c = j_(u.outputs, d, c, m));
            const g = null === l || null === s || w_(t) ? null : XA(l, d, s);
            a.push(g);
          }
          null !== l &&
            (l.hasOwnProperty("class") && (t.flags |= 8),
            l.hasOwnProperty("style") && (t.flags |= 16)),
            (t.initialInputs = a),
            (t.inputs = l),
            (t.outputs = c);
        })(n, e, o);
      }
      function U_(n, t, e) {
        const i = e.directiveStart,
          r = e.directiveEnd,
          o = e.index,
          s = (function LS() {
            return Z.lFrame.currentDirectiveIndex;
          })();
        try {
          ki(o);
          for (let a = i; a < r; a++) {
            const l = n.data[a],
              c = t[a];
            id(a),
              (null !== l.hostBindings ||
                0 !== l.hostVars ||
                null !== l.hostAttrs) &&
                $A(l, c);
          }
        } finally {
          ki(-1), id(s);
        }
      }
      function $A(n, t) {
        null !== n.hostBindings && n.hostBindings(1, t);
      }
      function fu(n, t, e) {
        (t.componentOffset = e),
          (n.components ?? (n.components = [])).push(t.index);
      }
      function WA(n, t, e) {
        if (e) {
          if (t.exportAs)
            for (let i = 0; i < t.exportAs.length; i++) e[t.exportAs[i]] = n;
          un(t) && (e[""] = n);
        }
      }
      function YA(n, t, e, i, r) {
        n.data[i] = r;
        const o = r.factory || (r.factory = Ri(r.type)),
          s = new xo(o, un(r), p);
        (n.blueprint[i] = s),
          (e[i] = s),
          (function HA(n, t, e, i, r) {
            const o = r.hostBindings;
            if (o) {
              let s = n.hostBindingOpCodes;
              null === s && (s = n.hostBindingOpCodes = []);
              const a = ~t.index;
              (function jA(n) {
                let t = n.length;
                for (; t > 0; ) {
                  const e = n[--t];
                  if ("number" == typeof e && e < 0) return e;
                }
                return 0;
              })(s) != a && s.push(a),
                s.push(e, i, o);
            }
          })(n, t, i, Vo(n, e, r.hostVars, X), r);
      }
      function En(n, t, e, i, r, o) {
        const s = Bt(n, t);
        !(function pu(n, t, e, i, r, o, s) {
          if (null == o) n.removeAttribute(t, r, e);
          else {
            const a = null == s ? K(o) : s(o, i || "", r);
            n.setAttribute(t, r, a, e);
          }
        })(t[te], s, o, n.value, e, i, r);
      }
      function ZA(n, t, e, i, r, o) {
        const s = o[t];
        if (null !== s) {
          const a = i.setInput;
          for (let l = 0; l < s.length; ) {
            const c = s[l++],
              d = s[l++],
              u = s[l++];
            null !== a ? i.setInput(e, u, c, d) : (e[d] = u);
          }
        }
      }
      function XA(n, t, e) {
        let i = null,
          r = 0;
        for (; r < e.length; ) {
          const o = e[r];
          if (0 !== o)
            if (5 !== o) {
              if ("number" == typeof o) break;
              if (n.hasOwnProperty(o)) {
                null === i && (i = []);
                const s = n[o];
                for (let a = 0; a < s.length; a += 2)
                  if (s[a] === t) {
                    i.push(o, s[a + 1], e[r + 1]);
                    break;
                  }
              }
              r += 2;
            } else r += 2;
          else r += 4;
        }
        return i;
      }
      function G_(n, t, e, i) {
        return [n, !0, !1, t, null, 0, i, e, null, null];
      }
      function eI(n, t) {
        const e = At(t, n);
        if (ra(e)) {
          const i = e[R];
          48 & e[J] ? Aa(i, e, i.template, e[ze]) : e[Ii] > 0 && mu(e);
        }
      }
      function mu(n) {
        for (let i = Td(n); null !== i; i = Ad(i))
          for (let r = vt; r < i.length; r++) {
            const o = i[r];
            if (ra(o))
              if (512 & o[J]) {
                const s = o[R];
                Aa(s, o, s.template, o[ze]);
              } else o[Ii] > 0 && mu(o);
          }
        const e = n[R].components;
        if (null !== e)
          for (let i = 0; i < e.length; i++) {
            const r = At(e[i], n);
            ra(r) && r[Ii] > 0 && mu(r);
          }
      }
      function tI(n, t) {
        const e = At(t, n),
          i = e[R];
        (function nI(n, t) {
          for (let e = t.length; e < n.blueprint.length; e++)
            t.push(n.blueprint[e]);
        })(i, e),
          au(i, e, e[ze]);
      }
      function Ia(n, t) {
        return n[bo] ? (n[Em][cn] = t) : (n[bo] = t), (n[Em] = t), t;
      }
      function Ra(n) {
        for (; n; ) {
          n[J] |= 32;
          const t = ko(n);
          if (_S(n) && !t) return n;
          n = t;
        }
        return null;
      }
      function ka(n, t, e, i = !0) {
        const r = t[Js];
        r.begin && r.begin();
        try {
          Aa(n, t, n.template, e);
        } catch (s) {
          throw (i && K_(t, s), s);
        } finally {
          r.end && r.end();
        }
      }
      function gu(n, t, e) {
        od(0), t(n, e);
      }
      function W_(n) {
        return n[sr] || (n[sr] = []);
      }
      function q_(n) {
        return n.cleanup || (n.cleanup = []);
      }
      function K_(n, t) {
        const e = n[Qs],
          i = e ? e.get(Tr, null) : null;
        i && i.handleError(t);
      }
      function _u(n, t, e, i, r) {
        for (let o = 0; o < e.length; ) {
          const s = e[o++],
            a = e[o++],
            l = t[s],
            c = n.data[s];
          null !== c.setInput ? c.setInput(l, r, i, a) : (l[a] = r);
        }
      }
      function Oa(n, t, e) {
        let i = e ? n.styles : null,
          r = e ? n.classes : null,
          o = 0;
        if (null !== t)
          for (let s = 0; s < t.length; s++) {
            const a = t[s];
            "number" == typeof a
              ? (o = a)
              : 1 == o
              ? (r = jc(r, a))
              : 2 == o && (i = jc(i, a + ": " + t[++s] + ";"));
          }
        e ? (n.styles = i) : (n.stylesWithoutHost = i),
          e ? (n.classes = r) : (n.classesWithoutHost = r);
      }
      function Fa(n, t, e, i, r = !1) {
        for (; null !== e; ) {
          const o = t[e.index];
          if ((null !== o && i.push(lt(o)), dn(o)))
            for (let a = vt; a < o.length; a++) {
              const l = o[a],
                c = l[R].firstChild;
              null !== c && Fa(l[R], l, c, i);
            }
          const s = e.type;
          if (8 & s) Fa(n, t, e.child, i);
          else if (32 & s) {
            const a = Md(e, t);
            let l;
            for (; (l = a()); ) i.push(l);
          } else if (16 & s) {
            const a = Ug(t, e);
            if (Array.isArray(a)) i.push(...a);
            else {
              const l = ko(t[ft]);
              Fa(l[R], l, a, i, !0);
            }
          }
          e = r ? e.projectionNext : e.next;
        }
        return i;
      }
      class Bo {
        get rootNodes() {
          const t = this._lView,
            e = t[R];
          return Fa(e, t, e.firstChild, []);
        }
        constructor(t, e) {
          (this._lView = t),
            (this._cdRefInjectingView = e),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get context() {
          return this._lView[ze];
        }
        set context(t) {
          this._lView[ze] = t;
        }
        get destroyed() {
          return 128 == (128 & this._lView[J]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[Le];
            if (dn(t)) {
              const e = t[ta],
                i = e ? e.indexOf(this) : -1;
              i > -1 && (kd(t, i), pa(e, i));
            }
            this._attachedToViewContainer = !1;
          }
          Pg(this._lView[R], this._lView);
        }
        onDestroy(t) {
          H_(this._lView[R], this._lView, null, t);
        }
        markForCheck() {
          Ra(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[J] &= -65;
        }
        reattach() {
          this._lView[J] |= 64;
        }
        detectChanges() {
          ka(this._lView[R], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new w(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function UM(n, t) {
              Oo(n, t, t[te], 2, null, null);
            })(this._lView[R], this._lView);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer) throw new w(902, !1);
          this._appRef = t;
        }
      }
      class iI extends Bo {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          const t = this._view;
          ka(t[R], t, t[ze], !1);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class Z_ extends Er {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const e = ye(t);
          return new Ho(e, this.ngModule);
        }
      }
      function X_(n) {
        const t = [];
        for (let e in n)
          n.hasOwnProperty(e) && t.push({ propName: n[e], templateName: e });
        return t;
      }
      class oI {
        constructor(t, e) {
          (this.injector = t), (this.parentInjector = e);
        }
        get(t, e, i) {
          i = Ks(i);
          const r = this.injector.get(t, Qd, i);
          return r !== Qd || e === Qd ? r : this.parentInjector.get(t, e, i);
        }
      }
      class Ho extends __ {
        get inputs() {
          return X_(this.componentDef.inputs);
        }
        get outputs() {
          return X_(this.componentDef.outputs);
        }
        constructor(t, e) {
          super(),
            (this.componentDef = t),
            (this.ngModule = e),
            (this.componentType = t.type),
            (this.selector = (function dA(n) {
              return n.map(cA).join(",");
            })(t.selectors)),
            (this.ngContentSelectors = t.ngContentSelectors
              ? t.ngContentSelectors
              : []),
            (this.isBoundToModule = !!e);
        }
        create(t, e, i, r) {
          let o = (r = r || this.ngModule) instanceof xr ? r : r?.injector;
          o &&
            null !== this.componentDef.getStandaloneInjector &&
            (o = this.componentDef.getStandaloneInjector(o) || o);
          const s = o ? new oI(t, o) : t,
            a = s.get(Lo, null);
          if (null === a) throw new w(407, !1);
          const l = s.get(UT, null),
            c = a.createRenderer(null, this.componentDef),
            d = this.componentDef.selectors[0][0] || "div",
            u = i
              ? (function FA(n, t, e) {
                  return n.selectRootElement(t, e === ln.ShadowDom);
                })(c, i, this.componentDef.encapsulation)
              : Rd(
                  c,
                  d,
                  (function rI(n) {
                    const t = n.toLowerCase();
                    return "svg" === t ? Om : "math" === t ? "math" : null;
                  })(d)
                ),
            h = this.componentDef.onPush ? 288 : 272,
            f = uu(0, null, null, 1, 0, null, null, null, null, null),
            m = Ta(null, f, null, h, null, null, a, c, l, s, null);
          let g, _;
          sd(m);
          try {
            const v = this.componentDef;
            let E,
              y = null;
            v.findHostDirectiveDefs
              ? ((E = []),
                (y = new Map()),
                v.findHostDirectiveDefs(v, E, y),
                E.push(v))
              : (E = [v]);
            const S = (function aI(n, t) {
                const e = n[R],
                  i = Re;
                return (n[i] = t), kr(e, i, 2, "#host", null);
              })(m, u),
              ie = (function lI(n, t, e, i, r, o, s, a) {
                const l = r[R];
                !(function cI(n, t, e, i) {
                  for (const r of n)
                    t.mergedAttrs = Co(t.mergedAttrs, r.hostAttrs);
                  null !== t.mergedAttrs &&
                    (Oa(t, t.mergedAttrs, !0), null !== e && qg(i, e, t));
                })(i, n, t, s);
                const c = o.createRenderer(t, e),
                  d = Ta(
                    r,
                    B_(e),
                    null,
                    e.onPush ? 32 : 16,
                    r[n.index],
                    n,
                    o,
                    c,
                    a || null,
                    null,
                    null
                  );
                return (
                  l.firstCreatePass && fu(l, n, i.length - 1),
                  Ia(r, d),
                  (r[n.index] = d)
                );
              })(S, u, v, E, m, a, c);
            (_ = Pm(f, Re)),
              u &&
                (function uI(n, t, e, i) {
                  if (i) dd(n, e, ["ng-version", GT.full]);
                  else {
                    const { attrs: r, classes: o } = (function uA(n) {
                      const t = [],
                        e = [];
                      let i = 1,
                        r = 2;
                      for (; i < n.length; ) {
                        let o = n[i];
                        if ("string" == typeof o)
                          2 === r
                            ? "" !== o && t.push(o, n[++i])
                            : 8 === r && e.push(o);
                        else {
                          if (!hn(r)) break;
                          r = o;
                        }
                        i++;
                      }
                      return { attrs: t, classes: e };
                    })(t.selectors[0]);
                    r && dd(n, e, r),
                      o && o.length > 0 && Wg(n, e, o.join(" "));
                  }
                })(c, v, u, i),
              void 0 !== e &&
                (function hI(n, t, e) {
                  const i = (n.projection = []);
                  for (let r = 0; r < t.length; r++) {
                    const o = e[r];
                    i.push(null != o ? Array.from(o) : null);
                  }
                })(_, this.ngContentSelectors, e),
              (g = (function dI(n, t, e, i, r, o) {
                const s = ct(),
                  a = r[R],
                  l = Bt(s, r);
                $_(a, r, s, e, null, i);
                for (let d = 0; d < e.length; d++)
                  pt(Oi(r, a, s.directiveStart + d, s), r);
                U_(a, r, s), l && pt(l, r);
                const c = Oi(r, a, s.directiveStart + s.componentOffset, s);
                if (((n[ze] = r[ze] = c), null !== o))
                  for (const d of o) d(c, t);
                return lu(a, s, n), c;
              })(ie, v, E, y, m, [fI])),
              au(f, m, null);
          } finally {
            ad();
          }
          return new sI(this.componentType, g, Sr(_, m), m, _);
        }
      }
      class sI extends VT {
        constructor(t, e, i, r, o) {
          super(),
            (this.location = i),
            (this._rootLView = r),
            (this._tNode = o),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new iI(r)),
            (this.componentType = t);
        }
        setInput(t, e) {
          const i = this._tNode.inputs;
          let r;
          if (null !== i && (r = i[t])) {
            const o = this._rootLView;
            _u(o[R], o, r, t, e), Ra(At(this._tNode.index, o));
          }
        }
        get injector() {
          return new fr(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      function fI() {
        const n = ct();
        sa(D()[R], n);
      }
      function T(n) {
        let t = (function Q_(n) {
            return Object.getPrototypeOf(n.prototype).constructor;
          })(n.type),
          e = !0;
        const i = [n];
        for (; t; ) {
          let r;
          if (un(n)) r = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new w(903, !1);
            r = t.ɵdir;
          }
          if (r) {
            if (e) {
              i.push(r);
              const s = n;
              (s.inputs = bu(n.inputs)),
                (s.declaredInputs = bu(n.declaredInputs)),
                (s.outputs = bu(n.outputs));
              const a = r.hostBindings;
              a && _I(n, a);
              const l = r.viewQuery,
                c = r.contentQueries;
              if (
                (l && mI(n, l),
                c && gI(n, c),
                Hc(n.inputs, r.inputs),
                Hc(n.declaredInputs, r.declaredInputs),
                Hc(n.outputs, r.outputs),
                un(r) && r.data.animation)
              ) {
                const d = n.data;
                d.animation = (d.animation || []).concat(r.data.animation);
              }
            }
            const o = r.features;
            if (o)
              for (let s = 0; s < o.length; s++) {
                const a = o[s];
                a && a.ngInherit && a(n), a === T && (e = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function pI(n) {
          let t = 0,
            e = null;
          for (let i = n.length - 1; i >= 0; i--) {
            const r = n[i];
            (r.hostVars = t += r.hostVars),
              (r.hostAttrs = Co(r.hostAttrs, (e = Co(e, r.hostAttrs))));
          }
        })(i);
      }
      function bu(n) {
        return n === jn ? {} : n === me ? [] : n;
      }
      function mI(n, t) {
        const e = n.viewQuery;
        n.viewQuery = e
          ? (i, r) => {
              t(i, r), e(i, r);
            }
          : t;
      }
      function gI(n, t) {
        const e = n.contentQueries;
        n.contentQueries = e
          ? (i, r, o) => {
              t(i, r, o), e(i, r, o);
            }
          : t;
      }
      function _I(n, t) {
        const e = n.hostBindings;
        n.hostBindings = e
          ? (i, r) => {
              t(i, r), e(i, r);
            }
          : t;
      }
      function Pa(n) {
        return (
          !!yu(n) &&
          (Array.isArray(n) || (!(n instanceof Map) && Symbol.iterator in n))
        );
      }
      function yu(n) {
        return null !== n && ("function" == typeof n || "object" == typeof n);
      }
      function mt(n, t, e) {
        return !Object.is(n[t], e) && ((n[t] = e), !0);
      }
      function Se(n, t, e, i) {
        const r = D();
        return mt(r, ur(), t) && (ce(), En(Fe(), r, n, t, e, i)), Se;
      }
      function Fr(n, t, e, i) {
        return mt(n, ur(), e) ? t + K(e) + i : X;
      }
      function W(n, t, e, i, r, o, s, a) {
        const l = D(),
          c = ce(),
          d = n + Re,
          u = c.firstCreatePass
            ? (function MI(n, t, e, i, r, o, s, a, l) {
                const c = t.consts,
                  d = kr(t, n, 4, s || null, fi(c, a));
                hu(t, e, d, fi(c, l)), sa(t, d);
                const u = (d.tView = uu(
                  2,
                  d,
                  i,
                  r,
                  o,
                  t.directiveRegistry,
                  t.pipeRegistry,
                  null,
                  t.schemas,
                  c
                ));
                return (
                  null !== t.queries &&
                    (t.queries.template(t, d),
                    (u.queries = t.queries.embeddedTView(d))),
                  d
                );
              })(d, c, l, t, e, i, r, o, s)
            : c.data[d];
        xn(u, !1);
        const h = l[te].createComment("");
        va(c, l, h, u),
          pt(h, l),
          Ia(l, (l[d] = G_(h, l, h, u))),
          na(u) && cu(c, l, u),
          null != s && du(l, u, a);
      }
      function La(n) {
        return (function dr(n, t) {
          return n[t];
        })(
          (function FS() {
            return Z.lFrame.contextLView;
          })(),
          Re + n
        );
      }
      function k(n, t, e) {
        const i = D();
        return mt(i, ur(), t) && jt(ce(), Fe(), i, n, t, i[te], e, !1), k;
      }
      function vu(n, t, e, i, r) {
        const s = r ? "class" : "style";
        _u(n, e, t.inputs[s], s, i);
      }
      function F(n, t, e, i) {
        const r = D(),
          o = ce(),
          s = Re + n,
          a = r[te],
          l = o.firstCreatePass
            ? (function AI(n, t, e, i, r, o) {
                const s = t.consts,
                  l = kr(t, n, 2, i, fi(s, r));
                return (
                  hu(t, e, l, fi(s, o)),
                  null !== l.attrs && Oa(l, l.attrs, !1),
                  null !== l.mergedAttrs && Oa(l, l.mergedAttrs, !0),
                  null !== t.queries && t.queries.elementStart(t, l),
                  l
                );
              })(s, o, r, t, e, i)
            : o.data[s],
          c = (r[s] = Rd(
            a,
            t,
            (function $S() {
              return Z.lFrame.currentNamespace;
            })()
          )),
          d = na(l);
        return (
          xn(l, !0),
          qg(a, c, l),
          32 != (32 & l.flags) && va(o, r, c, l),
          0 ===
            (function AS() {
              return Z.lFrame.elementDepthCount;
            })() && pt(c, r),
          (function IS() {
            Z.lFrame.elementDepthCount++;
          })(),
          d && (cu(o, r, l), lu(o, l, r)),
          null !== i && du(r, l),
          F
        );
      }
      function N() {
        let n = ct();
        td() ? nd() : ((n = n.parent), xn(n, !1));
        const t = n;
        !(function RS() {
          Z.lFrame.elementDepthCount--;
        })();
        const e = ce();
        return (
          e.firstCreatePass && (sa(e, n), Qc(n) && e.queries.elementEnd(n)),
          null != t.classesWithoutHost &&
            (function qS(n) {
              return 0 != (8 & n.flags);
            })(t) &&
            vu(e, t, D(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function YS(n) {
              return 0 != (16 & n.flags);
            })(t) &&
            vu(e, t, D(), t.stylesWithoutHost, !1),
          N
        );
      }
      function we(n, t, e, i) {
        return F(n, t, e, i), N(), we;
      }
      function Bi(n, t, e) {
        const i = D(),
          r = ce(),
          o = n + Re,
          s = r.firstCreatePass
            ? (function II(n, t, e, i, r) {
                const o = t.consts,
                  s = fi(o, i),
                  a = kr(t, n, 8, "ng-container", s);
                return (
                  null !== s && Oa(a, s, !0),
                  hu(t, e, a, fi(o, r)),
                  null !== t.queries && t.queries.elementStart(t, a),
                  a
                );
              })(o, r, i, t, e)
            : r.data[o];
        xn(s, !0);
        const a = (i[o] = i[te].createComment(""));
        return (
          va(r, i, a, s),
          pt(a, i),
          na(s) && (cu(r, i, s), lu(r, s, i)),
          null != e && du(i, s),
          Bi
        );
      }
      function Hi() {
        let n = ct();
        const t = ce();
        return (
          td() ? nd() : ((n = n.parent), xn(n, !1)),
          t.firstCreatePass && (sa(t, n), Qc(n) && t.queries.elementEnd(n)),
          Hi
        );
      }
      function Mn(n, t, e) {
        return Bi(n, t, e), Hi(), Mn;
      }
      function ji() {
        return D();
      }
      function Va(n) {
        return !!n && "function" == typeof n.then;
      }
      const hb = function ub(n) {
        return !!n && "function" == typeof n.subscribe;
      };
      function ve(n, t, e, i) {
        const r = D(),
          o = ce(),
          s = ct();
        return (
          (function pb(n, t, e, i, r, o, s) {
            const a = na(i),
              c = n.firstCreatePass && q_(n),
              d = t[ze],
              u = W_(t);
            let h = !0;
            if (3 & i.type || s) {
              const g = Bt(i, t),
                _ = s ? s(g) : g,
                v = u.length,
                E = s ? (S) => s(lt(S[i.index])) : i.index;
              let y = null;
              if (
                (!s &&
                  a &&
                  (y = (function RI(n, t, e, i) {
                    const r = n.cleanup;
                    if (null != r)
                      for (let o = 0; o < r.length - 1; o += 2) {
                        const s = r[o];
                        if (s === e && r[o + 1] === i) {
                          const a = t[sr],
                            l = r[o + 2];
                          return a.length > l ? a[l] : null;
                        }
                        "string" == typeof s && (o += 2);
                      }
                    return null;
                  })(n, t, r, i.index)),
                null !== y)
              )
                ((y.__ngLastListenerFn__ || y).__ngNextListenerFn__ = o),
                  (y.__ngLastListenerFn__ = o),
                  (h = !1);
              else {
                o = gb(i, t, d, o, !1);
                const S = e.listen(_, r, o);
                u.push(o, S), c && c.push(r, E, v, v + 1);
              }
            } else o = gb(i, t, d, o, !1);
            const f = i.outputs;
            let m;
            if (h && null !== f && (m = f[r])) {
              const g = m.length;
              if (g)
                for (let _ = 0; _ < g; _ += 2) {
                  const ie = t[m[_]][m[_ + 1]].subscribe(o),
                    pe = u.length;
                  u.push(o, ie), c && c.push(r, i.index, pe, -(pe + 1));
                }
            }
          })(o, r, r[te], s, n, t, i),
          ve
        );
      }
      function mb(n, t, e, i) {
        try {
          return Qt(6, t, e), !1 !== e(i);
        } catch (r) {
          return K_(n, r), !1;
        } finally {
          Qt(7, t, e);
        }
      }
      function gb(n, t, e, i, r) {
        return function o(s) {
          if (s === Function) return i;
          Ra(n.componentOffset > -1 ? At(n.index, t) : t);
          let l = mb(t, e, i, s),
            c = o.__ngNextListenerFn__;
          for (; c; ) (l = mb(t, e, c, s) && l), (c = c.__ngNextListenerFn__);
          return r && !1 === l && (s.preventDefault(), (s.returnValue = !1)), l;
        };
      }
      function se(n = 1) {
        return (function BS(n) {
          return (Z.lFrame.contextLView = (function HS(n, t) {
            for (; n > 0; ) (t = t[ar]), n--;
            return t;
          })(n, Z.lFrame.contextLView))[ze];
        })(n);
      }
      function kI(n, t) {
        let e = null;
        const i = (function oA(n) {
          const t = n.attrs;
          if (null != t) {
            const e = t.indexOf(5);
            if (!(1 & e)) return t[e + 1];
          }
          return null;
        })(n);
        for (let r = 0; r < t.length; r++) {
          const o = t[r];
          if ("*" !== o) {
            if (null === i ? x_(n, o, !0) : lA(i, o)) return r;
          } else e = r;
        }
        return e;
      }
      function Tn(n) {
        const t = D()[ft][ht];
        if (!t.projection) {
          const i = (t.projection = To(n ? n.length : 1, null)),
            r = i.slice();
          let o = t.child;
          for (; null !== o; ) {
            const s = n ? kI(o, n) : 0;
            null !== s &&
              (r[s] ? (r[s].projectionNext = o) : (i[s] = o), (r[s] = o)),
              (o = o.next);
          }
        }
      }
      function Ve(n, t = 0, e) {
        const i = D(),
          r = ce(),
          o = kr(r, Re + n, 16, null, e || null);
        null === o.projection && (o.projection = t),
          nd(),
          32 != (32 & o.flags) &&
            (function QM(n, t, e) {
              Gg(t[te], 0, t, e, Ng(n, e, t), Hg(e.parent || t[ht], e, t));
            })(r, i, o);
      }
      function Du(n, t, e) {
        return wu(n, "", t, "", e), Du;
      }
      function wu(n, t, e, i, r) {
        const o = D(),
          s = Fr(o, t, e, i);
        return s !== X && jt(ce(), Fe(), o, n, s, o[te], r, !1), wu;
      }
      function Ba(n, t) {
        return (n << 17) | (t << 2);
      }
      function _i(n) {
        return (n >> 17) & 32767;
      }
      function xu(n) {
        return 2 | n;
      }
      function zi(n) {
        return (131068 & n) >> 2;
      }
      function Cu(n, t) {
        return (-131069 & n) | (t << 2);
      }
      function Eu(n) {
        return 1 | n;
      }
      function Eb(n, t, e, i, r) {
        const o = n[e + 1],
          s = null === t;
        let a = i ? _i(o) : zi(o),
          l = !1;
        for (; 0 !== a && (!1 === l || s); ) {
          const d = n[a + 1];
          VI(n[a], t) && ((l = !0), (n[a + 1] = i ? Eu(d) : xu(d))),
            (a = i ? _i(d) : zi(d));
        }
        l && (n[e + 1] = i ? xu(o) : Eu(o));
      }
      function VI(n, t) {
        return (
          null === n ||
          null == t ||
          (Array.isArray(n) ? n[1] : n) === t ||
          (!(!Array.isArray(n) || "string" != typeof t) && br(n, t) >= 0)
        );
      }
      const et = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function Sb(n) {
        return n.substring(et.key, et.keyEnd);
      }
      function Mb(n, t) {
        const e = et.textEnd;
        return e === t
          ? -1
          : ((t = et.keyEnd =
              (function zI(n, t, e) {
                for (; t < e && n.charCodeAt(t) > 32; ) t++;
                return t;
              })(n, (et.key = t), e)),
            zr(n, t, e));
      }
      function zr(n, t, e) {
        for (; t < e && n.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function Xn(n, t, e) {
        return fn(n, t, e, !1), Xn;
      }
      function ke(n, t) {
        return fn(n, t, null, !0), ke;
      }
      function In(n, t) {
        for (
          let e = (function HI(n) {
            return (
              (function Ab(n) {
                (et.key = 0),
                  (et.keyEnd = 0),
                  (et.value = 0),
                  (et.valueEnd = 0),
                  (et.textEnd = n.length);
              })(n),
              Mb(n, zr(n, 0, et.textEnd))
            );
          })(t);
          e >= 0;
          e = Mb(t, e)
        )
          Ht(n, Sb(t), !0);
      }
      function fn(n, t, e, i) {
        const r = D(),
          o = ce(),
          s = qn(2);
        o.firstUpdatePass && Ob(o, n, s, i),
          t !== X &&
            mt(r, s, t) &&
            Pb(
              o,
              o.data[wt()],
              r,
              r[te],
              n,
              (r[s + 1] = (function e1(n, t) {
                return (
                  null == n ||
                    "" === n ||
                    ("string" == typeof t
                      ? (n += t)
                      : "object" == typeof n && (n = Me(mi(n)))),
                  n
                );
              })(t, e)),
              i,
              s
            );
      }
      function kb(n, t) {
        return t >= n.expandoStartIndex;
      }
      function Ob(n, t, e, i) {
        const r = n.data;
        if (null === r[e + 1]) {
          const o = r[wt()],
            s = kb(n, e);
          Lb(o, i) && null === t && !s && (t = !1),
            (t = (function qI(n, t, e, i) {
              const r = (function rd(n) {
                const t = Z.lFrame.currentDirectiveIndex;
                return -1 === t ? null : n[t];
              })(n);
              let o = i ? t.residualClasses : t.residualStyles;
              if (null === r)
                0 === (i ? t.classBindings : t.styleBindings) &&
                  ((e = zo((e = Su(null, n, t, e, i)), t.attrs, i)),
                  (o = null));
              else {
                const s = t.directiveStylingLast;
                if (-1 === s || n[s] !== r)
                  if (((e = Su(r, n, t, e, i)), null === o)) {
                    let l = (function YI(n, t, e) {
                      const i = e ? t.classBindings : t.styleBindings;
                      if (0 !== zi(i)) return n[_i(i)];
                    })(n, t, i);
                    void 0 !== l &&
                      Array.isArray(l) &&
                      ((l = Su(null, n, t, l[1], i)),
                      (l = zo(l, t.attrs, i)),
                      (function KI(n, t, e, i) {
                        n[_i(e ? t.classBindings : t.styleBindings)] = i;
                      })(n, t, i, l));
                  } else
                    o = (function ZI(n, t, e) {
                      let i;
                      const r = t.directiveEnd;
                      for (let o = 1 + t.directiveStylingLast; o < r; o++)
                        i = zo(i, n[o].hostAttrs, e);
                      return zo(i, t.attrs, e);
                    })(n, t, i);
              }
              return (
                void 0 !== o &&
                  (i ? (t.residualClasses = o) : (t.residualStyles = o)),
                e
              );
            })(r, o, t, i)),
            (function NI(n, t, e, i, r, o) {
              let s = o ? t.classBindings : t.styleBindings,
                a = _i(s),
                l = zi(s);
              n[i] = e;
              let d,
                c = !1;
              if (
                (Array.isArray(e)
                  ? ((d = e[1]), (null === d || br(e, d) > 0) && (c = !0))
                  : (d = e),
                r)
              )
                if (0 !== l) {
                  const h = _i(n[a + 1]);
                  (n[i + 1] = Ba(h, a)),
                    0 !== h && (n[h + 1] = Cu(n[h + 1], i)),
                    (n[a + 1] = (function FI(n, t) {
                      return (131071 & n) | (t << 17);
                    })(n[a + 1], i));
                } else
                  (n[i + 1] = Ba(a, 0)),
                    0 !== a && (n[a + 1] = Cu(n[a + 1], i)),
                    (a = i);
              else
                (n[i + 1] = Ba(l, 0)),
                  0 === a ? (a = i) : (n[l + 1] = Cu(n[l + 1], i)),
                  (l = i);
              c && (n[i + 1] = xu(n[i + 1])),
                Eb(n, d, i, !0),
                Eb(n, d, i, !1),
                (function LI(n, t, e, i, r) {
                  const o = r ? n.residualClasses : n.residualStyles;
                  null != o &&
                    "string" == typeof t &&
                    br(o, t) >= 0 &&
                    (e[i + 1] = Eu(e[i + 1]));
                })(t, d, n, i, o),
                (s = Ba(a, l)),
                o ? (t.classBindings = s) : (t.styleBindings = s);
            })(r, o, t, e, s, i);
        }
      }
      function Su(n, t, e, i, r) {
        let o = null;
        const s = e.directiveEnd;
        let a = e.directiveStylingLast;
        for (
          -1 === a ? (a = e.directiveStart) : a++;
          a < s && ((o = t[a]), (i = zo(i, o.hostAttrs, r)), o !== n);

        )
          a++;
        return null !== n && (e.directiveStylingLast = a), i;
      }
      function zo(n, t, e) {
        const i = e ? 1 : 2;
        let r = -1;
        if (null !== t)
          for (let o = 0; o < t.length; o++) {
            const s = t[o];
            "number" == typeof s
              ? (r = s)
              : r === i &&
                (Array.isArray(n) || (n = void 0 === n ? [] : ["", n]),
                Ht(n, s, !!e || t[++o]));
          }
        return void 0 === n ? null : n;
      }
      function Pb(n, t, e, i, r, o, s, a) {
        if (!(3 & t.type)) return;
        const l = n.data,
          c = l[a + 1],
          d = (function PI(n) {
            return 1 == (1 & n);
          })(c)
            ? Nb(l, t, e, r, zi(c), s)
            : void 0;
        Ha(d) ||
          (Ha(o) ||
            ((function OI(n) {
              return 2 == (2 & n);
            })(c) &&
              (o = Nb(l, null, e, r, a, s))),
          (function eT(n, t, e, i, r) {
            if (t) r ? n.addClass(e, i) : n.removeClass(e, i);
            else {
              let o = -1 === i.indexOf("-") ? void 0 : It.DashCase;
              null == r
                ? n.removeStyle(e, i, o)
                : ("string" == typeof r &&
                    r.endsWith("!important") &&
                    ((r = r.slice(0, -10)), (o |= It.Important)),
                  n.setStyle(e, i, r, o));
            }
          })(i, s, ia(wt(), e), r, o));
      }
      function Nb(n, t, e, i, r, o) {
        const s = null === t;
        let a;
        for (; r > 0; ) {
          const l = n[r],
            c = Array.isArray(l),
            d = c ? l[1] : l,
            u = null === d;
          let h = e[r + 1];
          h === X && (h = u ? me : void 0);
          let f = u ? bd(h, i) : d === i ? h : void 0;
          if ((c && !Ha(f) && (f = bd(l, i)), Ha(f) && ((a = f), s))) return a;
          const m = n[r + 1];
          r = s ? _i(m) : zi(m);
        }
        if (null !== t) {
          let l = o ? t.residualClasses : t.residualStyles;
          null != l && (a = bd(l, i));
        }
        return a;
      }
      function Ha(n) {
        return void 0 !== n;
      }
      function Lb(n, t) {
        return 0 != (n.flags & (t ? 8 : 16));
      }
      function qe(n, t = "") {
        const e = D(),
          i = ce(),
          r = n + Re,
          o = i.firstCreatePass ? kr(i, r, 1, t, null) : i.data[r],
          s = (e[r] = (function Id(n, t) {
            return n.createText(t);
          })(e[te], t));
        va(i, e, s, o), xn(o, !1);
      }
      function $i(n) {
        return Ot("", n, ""), $i;
      }
      function Ot(n, t, e) {
        const i = D(),
          r = Fr(i, n, t, e);
        return (
          r !== X &&
            (function Zn(n, t, e) {
              const i = ia(t, n);
              !(function Og(n, t, e) {
                n.setValue(t, e);
              })(n[te], i, e);
            })(i, wt(), r),
          Ot
        );
      }
      function Wb(n, t, e) {
        !(function pn(n, t, e, i) {
          const r = ce(),
            o = qn(2);
          r.firstUpdatePass && Ob(r, null, o, i);
          const s = D();
          if (e !== X && mt(s, o, e)) {
            const a = r.data[wt()];
            if (Lb(a, i) && !kb(r, o)) {
              let l = i ? a.classesWithoutHost : a.stylesWithoutHost;
              null !== l && (e = jc(l, e || "")), vu(r, a, s, e, i);
            } else
              !(function JI(n, t, e, i, r, o, s, a) {
                r === X && (r = me);
                let l = 0,
                  c = 0,
                  d = 0 < r.length ? r[0] : null,
                  u = 0 < o.length ? o[0] : null;
                for (; null !== d || null !== u; ) {
                  const h = l < r.length ? r[l + 1] : void 0,
                    f = c < o.length ? o[c + 1] : void 0;
                  let g,
                    m = null;
                  d === u
                    ? ((l += 2), (c += 2), h !== f && ((m = u), (g = f)))
                    : null === u || (null !== d && d < u)
                    ? ((l += 2), (m = d))
                    : ((c += 2), (m = u), (g = f)),
                    null !== m && Pb(n, t, e, i, m, g, s, a),
                    (d = l < r.length ? r[l] : null),
                    (u = c < o.length ? o[c] : null);
                }
              })(
                r,
                a,
                s,
                s[te],
                s[o + 1],
                (s[o + 1] = (function XI(n, t, e) {
                  if (null == e || "" === e) return me;
                  const i = [],
                    r = mi(e);
                  if (Array.isArray(r))
                    for (let o = 0; o < r.length; o++) n(i, r[o], !0);
                  else if ("object" == typeof r)
                    for (const o in r) r.hasOwnProperty(o) && n(i, o, r[o]);
                  else "string" == typeof r && t(i, r);
                  return i;
                })(n, t, e)),
                i,
                o
              );
          }
        })(Ht, In, Fr(D(), n, t, e), !0);
      }
      function $r(n, t, e) {
        const i = D();
        return mt(i, ur(), t) && jt(ce(), Fe(), i, n, t, i[te], e, !0), $r;
      }
      const Gr = "en-US";
      let oy = Gr;
      function Au(n, t, e, i, r) {
        if (((n = H(n)), Array.isArray(n)))
          for (let o = 0; o < n.length; o++) Au(n[o], t, e, i, r);
        else {
          const o = ce(),
            s = D();
          let a = Li(n) ? n : H(n.provide),
            l = g_(n);
          const c = ct(),
            d = 1048575 & c.providerIndexes,
            u = c.directiveStart,
            h = c.providerIndexes >> 20;
          if (Li(n) || !n.multi) {
            const f = new xo(l, r, p),
              m = Ru(a, t, r ? d : d + h, u);
            -1 === m
              ? (pd(ha(c, s), o, a),
                Iu(o, n, t.length),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(f),
                s.push(f))
              : ((e[m] = f), (s[m] = f));
          } else {
            const f = Ru(a, t, d + h, u),
              m = Ru(a, t, d, d + h),
              _ = m >= 0 && e[m];
            if ((r && !_) || (!r && !(f >= 0 && e[f]))) {
              pd(ha(c, s), o, a);
              const v = (function bR(n, t, e, i, r) {
                const o = new xo(n, e, p);
                return (
                  (o.multi = []),
                  (o.index = t),
                  (o.componentProviders = 0),
                  Iy(o, r, i && !e),
                  o
                );
              })(r ? _R : gR, e.length, r, i, l);
              !r && _ && (e[m].providerFactory = v),
                Iu(o, n, t.length, 0),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(v),
                s.push(v);
            } else Iu(o, n, f > -1 ? f : m, Iy(e[r ? m : f], l, !r && i));
            !r && i && _ && e[m].componentProviders++;
          }
        }
      }
      function Iu(n, t, e, i) {
        const r = Li(t),
          o = (function RT(n) {
            return !!n.useClass;
          })(t);
        if (r || o) {
          const l = (o ? H(t.useClass) : t).prototype.ngOnDestroy;
          if (l) {
            const c = n.destroyHooks || (n.destroyHooks = []);
            if (!r && t.multi) {
              const d = c.indexOf(e);
              -1 === d ? c.push(e, [i, l]) : c[d + 1].push(i, l);
            } else c.push(e, l);
          }
        }
      }
      function Iy(n, t, e) {
        return e && n.componentProviders++, n.multi.push(t) - 1;
      }
      function Ru(n, t, e, i) {
        for (let r = e; r < i; r++) if (t[r] === n) return r;
        return -1;
      }
      function gR(n, t, e, i) {
        return ku(this.multi, []);
      }
      function _R(n, t, e, i) {
        const r = this.multi;
        let o;
        if (this.providerFactory) {
          const s = this.providerFactory.componentProviders,
            a = Oi(e, e[R], this.providerFactory.index, i);
          (o = a.slice(0, s)), ku(r, o);
          for (let l = s; l < a.length; l++) o.push(a[l]);
        } else (o = []), ku(r, o);
        return o;
      }
      function ku(n, t) {
        for (let e = 0; e < n.length; e++) t.push((0, n[e])());
        return t;
      }
      function j(n, t = []) {
        return (e) => {
          e.providersResolver = (i, r) =>
            (function mR(n, t, e) {
              const i = ce();
              if (i.firstCreatePass) {
                const r = un(n);
                Au(e, i.data, i.blueprint, r, !0),
                  Au(t, i.data, i.blueprint, r, !1);
              }
            })(i, r ? r(n) : n, t);
        };
      }
      class Wr {}
      class yR {}
      class Ry extends Wr {
        constructor(t, e) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Z_(this));
          const i = (function Lt(n, t) {
            const e = n[Dm] || null;
            if (!e && !0 === t)
              throw new Error(
                `Type ${Me(n)} does not have '\u0275mod' property.`
              );
            return e;
          })(t);
          (this._bootstrapComponents = (function Kn(n) {
            return n instanceof Function ? n() : n;
          })(i.bootstrap)),
            (this._r3Injector = I_(
              t,
              e,
              [
                { provide: Wr, useValue: this },
                { provide: Er, useValue: this.componentFactoryResolver },
              ],
              Me(t),
              new Set(["environment"])
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(t));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(),
            this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class Ou extends yR {
        constructor(t) {
          super(), (this.moduleType = t);
        }
        create(t) {
          return new Ry(this.moduleType, t);
        }
      }
      class DR extends Wr {
        constructor(t, e, i) {
          super(),
            (this.componentFactoryResolver = new Z_(this)),
            (this.instance = null);
          const r = new m_(
            [
              ...t,
              { provide: Wr, useValue: this },
              { provide: Er, useValue: this.componentFactoryResolver },
            ],
            e || Sa(),
            i,
            new Set(["environment"])
          );
          (this.injector = r), r.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(t) {
          this.injector.onDestroy(t);
        }
      }
      let wR = (() => {
        class n {
          constructor(e) {
            (this._injector = e), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(e) {
            if (!e.standalone) return null;
            if (!this.cachedInjectors.has(e.id)) {
              const i = u_(0, e.type),
                r =
                  i.length > 0
                    ? (function ky(n, t, e = null) {
                        return new DR(n, t, e).injector;
                      })([i], this._injector, `Standalone[${e.type.name}]`)
                    : null;
              this.cachedInjectors.set(e.id, r);
            }
            return this.cachedInjectors.get(e.id);
          }
          ngOnDestroy() {
            try {
              for (const e of this.cachedInjectors.values())
                null !== e && e.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
        }
        return (
          (n.ɵprov = I({
            token: n,
            providedIn: "environment",
            factory: () => new n(b(xr)),
          })),
          n
        );
      })();
      function Oy(n) {
        n.getStandaloneInjector = (t) =>
          t.get(wR).getOrCreateStandaloneInjector(n);
      }
      function Hy(n, t, e) {
        const i =
            (function Dt() {
              const n = Z.lFrame;
              let t = n.bindingRootIndex;
              return (
                -1 === t &&
                  (t = n.bindingRootIndex = n.tView.bindingStartIndex),
                t
              );
            })() + n,
          r = D();
        return r[i] === X
          ? (function Sn(n, t, e) {
              return (n[t] = e);
            })(r, i, e ? t.call(e) : t())
          : (function jo(n, t) {
              return n[t];
            })(r, i);
      }
      function Pu(n) {
        return (t) => {
          setTimeout(n, void 0, t);
        };
      }
      const Q = class qR extends A {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, e, i) {
          let r = t,
            o = e || (() => null),
            s = i;
          if (t && "object" == typeof t) {
            const l = t;
            (r = l.next?.bind(l)),
              (o = l.error?.bind(l)),
              (s = l.complete?.bind(l));
          }
          this.__isAsync && ((o = Pu(o)), r && (r = Pu(r)), s && (s = Pu(s)));
          const a = super.subscribe({ next: r, error: o, complete: s });
          return t instanceof xe && t.add(a), a;
        }
      };
      function YR() {
        return this._results[Symbol.iterator]();
      }
      class Zo {
        get changes() {
          return this._changes || (this._changes = new Q());
        }
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const e = Zo.prototype;
          e[Symbol.iterator] || (e[Symbol.iterator] = YR);
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, e) {
          return this._results.reduce(t, e);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, e) {
          const i = this;
          i.dirty = !1;
          const r = (function Jt(n) {
            return n.flat(Number.POSITIVE_INFINITY);
          })(t);
          (this._changesDetected = !(function rM(n, t, e) {
            if (n.length !== t.length) return !1;
            for (let i = 0; i < n.length; i++) {
              let r = n[i],
                o = t[i];
              if ((e && ((r = e(r)), (o = e(o))), o !== r)) return !1;
            }
            return !0;
          })(i._results, r, e)) &&
            ((i._results = r),
            (i.length = r.length),
            (i.last = r[this.length - 1]),
            (i.first = r[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      let $e = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = XR), n;
      })();
      const KR = $e,
        ZR = class extends KR {
          constructor(t, e, i) {
            super(),
              (this._declarationLView = t),
              (this._declarationTContainer = e),
              (this.elementRef = i);
          }
          createEmbeddedView(t, e) {
            const i = this._declarationTContainer.tView,
              r = Ta(
                this._declarationLView,
                i,
                t,
                16,
                null,
                i.declTNode,
                null,
                null,
                null,
                null,
                e || null
              );
            r[yo] = this._declarationLView[this._declarationTContainer.index];
            const s = this._declarationLView[wn];
            return (
              null !== s && (r[wn] = s.createEmbeddedView(i)),
              au(i, r, t),
              new Bo(r)
            );
          }
        };
      function XR() {
        return Ga(ct(), D());
      }
      function Ga(n, t) {
        return 4 & n.type ? new ZR(t, n, Sr(n, t)) : null;
      }
      let tt = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = QR), n;
      })();
      function QR() {
        return Yy(ct(), D());
      }
      const JR = tt,
        Wy = class extends JR {
          constructor(t, e, i) {
            super(),
              (this._lContainer = t),
              (this._hostTNode = e),
              (this._hostLView = i);
          }
          get element() {
            return Sr(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new fr(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = fd(this._hostTNode, this._hostLView);
            if (Jm(t)) {
              const e = da(t, this._hostLView),
                i = ca(t);
              return new fr(e[R].data[i + 8], e);
            }
            return new fr(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const e = qy(this._lContainer);
            return (null !== e && e[t]) || null;
          }
          get length() {
            return this._lContainer.length - vt;
          }
          createEmbeddedView(t, e, i) {
            let r, o;
            "number" == typeof i
              ? (r = i)
              : null != i && ((r = i.index), (o = i.injector));
            const s = t.createEmbeddedView(e || {}, o);
            return this.insert(s, r), s;
          }
          createComponent(t, e, i, r, o) {
            const s =
              t &&
              !(function Mo(n) {
                return "function" == typeof n;
              })(t);
            let a;
            if (s) a = e;
            else {
              const u = e || {};
              (a = u.index),
                (i = u.injector),
                (r = u.projectableNodes),
                (o = u.environmentInjector || u.ngModuleRef);
            }
            const l = s ? t : new Ho(ye(t)),
              c = i || this.parentInjector;
            if (!o && null == l.ngModule) {
              const h = (s ? c : this.parentInjector).get(xr, null);
              h && (o = h);
            }
            const d = l.create(c, r, void 0, o);
            return this.insert(d.hostView, a), d;
          }
          insert(t, e) {
            const i = t._lView,
              r = i[R];
            if (
              (function TS(n) {
                return dn(n[Le]);
              })(i)
            ) {
              const d = this.indexOf(t);
              if (-1 !== d) this.detach(d);
              else {
                const u = i[Le],
                  h = new Wy(u, u[ht], u[Le]);
                h.detach(h.indexOf(t));
              }
            }
            const o = this._adjustIndex(e),
              s = this._lContainer;
            !(function WM(n, t, e, i) {
              const r = vt + i,
                o = e.length;
              i > 0 && (e[r - 1][cn] = t),
                i < o - vt
                  ? ((t[cn] = e[r]), ug(e, vt + i, t))
                  : (e.push(t), (t[cn] = null)),
                (t[Le] = e);
              const s = t[yo];
              null !== s &&
                e !== s &&
                (function qM(n, t) {
                  const e = n[cr];
                  t[ft] !== t[Le][Le][ft] && (n[Mm] = !0),
                    null === e ? (n[cr] = [t]) : e.push(t);
                })(s, t);
              const a = t[wn];
              null !== a && a.insertView(n), (t[J] |= 64);
            })(r, i, s, o);
            const a = Pd(o, s),
              l = i[te],
              c = ya(l, s[ea]);
            return (
              null !== c &&
                (function $M(n, t, e, i, r, o) {
                  (i[$n] = r), (i[ht] = t), Oo(n, i, e, 1, r, o);
                })(r, s[ht], l, i, c, a),
              t.attachToViewContainerRef(),
              ug(Nu(s), o, t),
              t
            );
          }
          move(t, e) {
            return this.insert(t, e);
          }
          indexOf(t) {
            const e = qy(this._lContainer);
            return null !== e ? e.indexOf(t) : -1;
          }
          remove(t) {
            const e = this._adjustIndex(t, -1),
              i = kd(this._lContainer, e);
            i && (pa(Nu(this._lContainer), e), Pg(i[R], i));
          }
          detach(t) {
            const e = this._adjustIndex(t, -1),
              i = kd(this._lContainer, e);
            return i && null != pa(Nu(this._lContainer), e) ? new Bo(i) : null;
          }
          _adjustIndex(t, e = 0) {
            return t ?? this.length + e;
          }
        };
      function qy(n) {
        return n[ta];
      }
      function Nu(n) {
        return n[ta] || (n[ta] = []);
      }
      function Yy(n, t) {
        let e;
        const i = t[n.index];
        if (dn(i)) e = i;
        else {
          let r;
          if (8 & n.type) r = lt(i);
          else {
            const o = t[te];
            r = o.createComment("");
            const s = Bt(n, t);
            Ni(
              o,
              ya(o, s),
              r,
              (function XM(n, t) {
                return n.nextSibling(t);
              })(o, s),
              !1
            );
          }
          (t[n.index] = e = G_(i, t, r, n)), Ia(t, e);
        }
        return new Wy(e, n, t);
      }
      class Lu {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new Lu(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Vu {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const e = t.queries;
          if (null !== e) {
            const i =
                null !== t.contentQueries ? t.contentQueries[0] : e.length,
              r = [];
            for (let o = 0; o < i; o++) {
              const s = e.getByIndex(o);
              r.push(this.queries[s.indexInDeclarationView].clone());
            }
            return new Vu(r);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let e = 0; e < this.queries.length; e++)
            null !== Jy(t, e).matches && this.queries[e].setDirty();
        }
      }
      class Ky {
        constructor(t, e, i = null) {
          (this.predicate = t), (this.flags = e), (this.read = i);
        }
      }
      class Bu {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(t, e);
        }
        elementEnd(t) {
          for (let e = 0; e < this.queries.length; e++)
            this.queries[e].elementEnd(t);
        }
        embeddedTView(t) {
          let e = null;
          for (let i = 0; i < this.length; i++) {
            const r = null !== e ? e.length : 0,
              o = this.getByIndex(i).embeddedTView(t, r);
            o &&
              ((o.indexInDeclarationView = i),
              null !== e ? e.push(o) : (e = [o]));
          }
          return null !== e ? new Bu(e) : null;
        }
        template(t, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(t, e);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class Hu {
        constructor(t, e = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(t, e) {
          this.isApplyingToNode(e) && this.matchTNode(t, e);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index &&
            (this._appliesToNextNode = !1);
        }
        template(t, e) {
          this.elementStart(t, e);
        }
        embeddedTView(t, e) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-t.index, e),
              new Hu(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const e = this._declarationNodeIndex;
            let i = t.parent;
            for (; null !== i && 8 & i.type && i.index !== e; ) i = i.parent;
            return e === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, e) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let r = 0; r < i.length; r++) {
              const o = i[r];
              this.matchTNodeWithReadOption(t, e, ek(e, o)),
                this.matchTNodeWithReadOption(t, e, fa(e, t, o, !1, !1));
            }
          else
            i === $e
              ? 4 & e.type && this.matchTNodeWithReadOption(t, e, -1)
              : this.matchTNodeWithReadOption(t, e, fa(e, t, i, !1, !1));
        }
        matchTNodeWithReadOption(t, e, i) {
          if (null !== i) {
            const r = this.metadata.read;
            if (null !== r)
              if (r === U || r === tt || (r === $e && 4 & e.type))
                this.addMatch(e.index, -2);
              else {
                const o = fa(e, t, r, !1, !1);
                null !== o && this.addMatch(e.index, o);
              }
            else this.addMatch(e.index, i);
          }
        }
        addMatch(t, e) {
          null === this.matches
            ? (this.matches = [t, e])
            : this.matches.push(t, e);
        }
      }
      function ek(n, t) {
        const e = n.localNames;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) if (e[i] === t) return e[i + 1];
        return null;
      }
      function nk(n, t, e, i) {
        return -1 === e
          ? (function tk(n, t) {
              return 11 & n.type ? Sr(n, t) : 4 & n.type ? Ga(n, t) : null;
            })(t, n)
          : -2 === e
          ? (function ik(n, t, e) {
              return e === U
                ? Sr(t, n)
                : e === $e
                ? Ga(t, n)
                : e === tt
                ? Yy(t, n)
                : void 0;
            })(n, t, i)
          : Oi(n, n[R], e, t);
      }
      function Zy(n, t, e, i) {
        const r = t[wn].queries[i];
        if (null === r.matches) {
          const o = n.data,
            s = e.matches,
            a = [];
          for (let l = 0; l < s.length; l += 2) {
            const c = s[l];
            a.push(c < 0 ? null : nk(t, o[c], s[l + 1], e.metadata.read));
          }
          r.matches = a;
        }
        return r.matches;
      }
      function ju(n, t, e, i) {
        const r = n.queries.getByIndex(e),
          o = r.matches;
        if (null !== o) {
          const s = Zy(n, t, r, e);
          for (let a = 0; a < o.length; a += 2) {
            const l = o[a];
            if (l > 0) i.push(s[a / 2]);
            else {
              const c = o[a + 1],
                d = t[-l];
              for (let u = vt; u < d.length; u++) {
                const h = d[u];
                h[yo] === h[Le] && ju(h[R], h, c, i);
              }
              if (null !== d[cr]) {
                const u = d[cr];
                for (let h = 0; h < u.length; h++) {
                  const f = u[h];
                  ju(f[R], f, c, i);
                }
              }
            }
          }
        }
        return i;
      }
      function q(n) {
        const t = D(),
          e = ce(),
          i = $m();
        od(i + 1);
        const r = Jy(e, i);
        if (
          n.dirty &&
          (function MS(n) {
            return 4 == (4 & n[J]);
          })(t) ===
            (2 == (2 & r.metadata.flags))
        ) {
          if (null === r.matches) n.reset([]);
          else {
            const o = r.crossesNgTemplate ? ju(e, t, i, []) : Zy(e, t, r, i);
            n.reset(o, zT), n.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function Oe(n, t, e) {
        const i = ce();
        i.firstCreatePass &&
          (Qy(i, new Ky(n, t, e), -1),
          2 == (2 & t) && (i.staticViewQueries = !0)),
          Xy(i, D(), t);
      }
      function He(n, t, e, i) {
        const r = ce();
        if (r.firstCreatePass) {
          const o = ct();
          Qy(r, new Ky(t, e, i), o.index),
            (function ok(n, t) {
              const e = n.contentQueries || (n.contentQueries = []);
              t !== (e.length ? e[e.length - 1] : -1) &&
                e.push(n.queries.length - 1, t);
            })(r, n),
            2 == (2 & e) && (r.staticContentQueries = !0);
        }
        Xy(r, D(), e);
      }
      function Y() {
        return (function rk(n, t) {
          return n[wn].queries[t].queryList;
        })(D(), $m());
      }
      function Xy(n, t, e) {
        const i = new Zo(4 == (4 & e));
        H_(n, t, i, i.destroy),
          null === t[wn] && (t[wn] = new Vu()),
          t[wn].queries.push(new Lu(i));
      }
      function Qy(n, t, e) {
        null === n.queries && (n.queries = new Bu()),
          n.queries.track(new Hu(t, e));
      }
      function Jy(n, t) {
        return n.queries.getByIndex(t);
      }
      function ev(n, t) {
        return Ga(n, t);
      }
      function qa(...n) {}
      const yv = new C("Application Initializer");
      let Ya = (() => {
        class n {
          constructor(e) {
            (this.appInits = e),
              (this.resolve = qa),
              (this.reject = qa),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((i, r) => {
                (this.resolve = i), (this.reject = r);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const e = [],
              i = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let r = 0; r < this.appInits.length; r++) {
                const o = this.appInits[r]();
                if (Va(o)) e.push(o);
                else if (hb(o)) {
                  const s = new Promise((a, l) => {
                    o.subscribe({ complete: a, error: l });
                  });
                  e.push(s);
                }
              }
            Promise.all(e)
              .then(() => {
                i();
              })
              .catch((r) => {
                this.reject(r);
              }),
              0 === e.length && i(),
              (this.initialized = !0);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(yv, 8));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const Kr = new C("AppId", {
        providedIn: "root",
        factory: function vv() {
          return `${Wu()}${Wu()}${Wu()}`;
        },
      });
      function Wu() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const Dv = new C("Platform Initializer"),
        qu = new C("Platform ID", {
          providedIn: "platform",
          factory: () => "unknown",
        }),
        mn = new C("AnimationModuleType"),
        Rn = new C("LocaleId", {
          providedIn: "root",
          factory: () =>
            vn(Rn, G.Optional | G.SkipSelf) ||
            (function Ek() {
              return (typeof $localize < "u" && $localize.locale) || Gr;
            })(),
        }),
        Ik = (() => Promise.resolve(0))();
      function Yu(n) {
        typeof Zone > "u"
          ? Ik.then(() => {
              n && n.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", n);
      }
      class V {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: e = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Q(!1)),
            (this.onMicrotaskEmpty = new Q(!1)),
            (this.onStable = new Q(!1)),
            (this.onError = new Q(!1)),
            typeof Zone > "u")
          )
            throw new w(908, !1);
          Zone.assertZonePatched();
          const r = this;
          (r._nesting = 0),
            (r._outer = r._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t &&
              Zone.longStackTraceZoneSpec &&
              (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)),
            (r.shouldCoalesceEventChangeDetection = !i && e),
            (r.shouldCoalesceRunChangeDetection = i),
            (r.lastRequestAnimationFrameId = -1),
            (r.nativeRequestAnimationFrame = (function Rk() {
              let n = Ie.requestAnimationFrame,
                t = Ie.cancelAnimationFrame;
              if (typeof Zone < "u" && n && t) {
                const e = n[Zone.__symbol__("OriginalDelegate")];
                e && (n = e);
                const i = t[Zone.__symbol__("OriginalDelegate")];
                i && (t = i);
              }
              return {
                nativeRequestAnimationFrame: n,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function Fk(n) {
              const t = () => {
                !(function Ok(n) {
                  n.isCheckStableRunning ||
                    -1 !== n.lastRequestAnimationFrameId ||
                    ((n.lastRequestAnimationFrameId =
                      n.nativeRequestAnimationFrame.call(Ie, () => {
                        n.fakeTopEventTask ||
                          (n.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (n.lastRequestAnimationFrameId = -1),
                                Zu(n),
                                (n.isCheckStableRunning = !0),
                                Ku(n),
                                (n.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          n.fakeTopEventTask.invoke();
                      })),
                    Zu(n));
                })(n);
              };
              n._inner = n._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (e, i, r, o, s, a) => {
                  try {
                    return Cv(n), e.invokeTask(r, o, s, a);
                  } finally {
                    ((n.shouldCoalesceEventChangeDetection &&
                      "eventTask" === o.type) ||
                      n.shouldCoalesceRunChangeDetection) &&
                      t(),
                      Ev(n);
                  }
                },
                onInvoke: (e, i, r, o, s, a, l) => {
                  try {
                    return Cv(n), e.invoke(r, o, s, a, l);
                  } finally {
                    n.shouldCoalesceRunChangeDetection && t(), Ev(n);
                  }
                },
                onHasTask: (e, i, r, o) => {
                  e.hasTask(r, o),
                    i === r &&
                      ("microTask" == o.change
                        ? ((n._hasPendingMicrotasks = o.microTask),
                          Zu(n),
                          Ku(n))
                        : "macroTask" == o.change &&
                          (n.hasPendingMacrotasks = o.macroTask));
                },
                onHandleError: (e, i, r, o) => (
                  e.handleError(r, o),
                  n.runOutsideAngular(() => n.onError.emit(o)),
                  !1
                ),
              });
            })(r);
        }
        static isInAngularZone() {
          return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!V.isInAngularZone()) throw new w(909, !1);
        }
        static assertNotInAngularZone() {
          if (V.isInAngularZone()) throw new w(909, !1);
        }
        run(t, e, i) {
          return this._inner.run(t, e, i);
        }
        runTask(t, e, i, r) {
          const o = this._inner,
            s = o.scheduleEventTask("NgZoneEvent: " + r, t, kk, qa, qa);
          try {
            return o.runTask(s, e, i);
          } finally {
            o.cancelTask(s);
          }
        }
        runGuarded(t, e, i) {
          return this._inner.runGuarded(t, e, i);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const kk = {};
      function Ku(n) {
        if (0 == n._nesting && !n.hasPendingMicrotasks && !n.isStable)
          try {
            n._nesting++, n.onMicrotaskEmpty.emit(null);
          } finally {
            if ((n._nesting--, !n.hasPendingMicrotasks))
              try {
                n.runOutsideAngular(() => n.onStable.emit(null));
              } finally {
                n.isStable = !0;
              }
          }
      }
      function Zu(n) {
        n.hasPendingMicrotasks = !!(
          n._hasPendingMicrotasks ||
          ((n.shouldCoalesceEventChangeDetection ||
            n.shouldCoalesceRunChangeDetection) &&
            -1 !== n.lastRequestAnimationFrameId)
        );
      }
      function Cv(n) {
        n._nesting++,
          n.isStable && ((n.isStable = !1), n.onUnstable.emit(null));
      }
      function Ev(n) {
        n._nesting--, Ku(n);
      }
      class Pk {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Q()),
            (this.onMicrotaskEmpty = new Q()),
            (this.onStable = new Q()),
            (this.onError = new Q());
        }
        run(t, e, i) {
          return t.apply(e, i);
        }
        runGuarded(t, e, i) {
          return t.apply(e, i);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, e, i, r) {
          return t.apply(e, i);
        }
      }
      const Sv = new C(""),
        Ka = new C("");
      let Ju,
        Xu = (() => {
          class n {
            constructor(e, i, r) {
              (this._ngZone = e),
                (this.registry = i),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                Ju ||
                  ((function Nk(n) {
                    Ju = n;
                  })(r),
                  r.addToWindow(i)),
                this._watchAngularEvents(),
                e.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > "u"
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      V.assertNotInAngularZone(),
                        Yu(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                Yu(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let e = this._callbacks.pop();
                    clearTimeout(e.timeoutId), e.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let e = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (i) =>
                    !i.updateCb ||
                    !i.updateCb(e) ||
                    (clearTimeout(i.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((e) => ({
                    source: e.source,
                    creationLocation: e.creationLocation,
                    data: e.data,
                  }))
                : [];
            }
            addCallback(e, i, r) {
              let o = -1;
              i &&
                i > 0 &&
                (o = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (s) => s.timeoutId !== o
                  )),
                    e(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: e, timeoutId: o, updateCb: r });
            }
            whenStable(e, i, r) {
              if (r && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(e, i, r), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(e) {
              this.registry.registerApplication(e, this);
            }
            unregisterApplication(e) {
              this.registry.unregisterApplication(e);
            }
            findProviders(e, i, r) {
              return [];
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(V), b(Qu), b(Ka));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Qu = (() => {
          class n {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(e, i) {
              this._applications.set(e, i);
            }
            unregisterApplication(e) {
              this._applications.delete(e);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(e) {
              return this._applications.get(e) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(e, i = !0) {
              return Ju?.findTestabilityInTree(this, e, i) ?? null;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({
              token: n,
              factory: n.ɵfac,
              providedIn: "platform",
            })),
            n
          );
        })();
      const Qn = !1;
      let bi = null;
      const Mv = new C("AllowMultipleToken"),
        eh = new C("PlatformDestroyListeners"),
        Lk = new C("appBootstrapListener");
      function Av(n, t, e = []) {
        const i = `Platform: ${t}`,
          r = new C(i);
        return (o = []) => {
          let s = th();
          if (!s || s.injector.get(Mv, !1)) {
            const a = [...e, ...o, { provide: r, useValue: !0 }];
            n
              ? n(a)
              : (function Hk(n) {
                  if (bi && !bi.get(Mv, !1)) throw new w(400, !1);
                  bi = n;
                  const t = n.get(Rv);
                  (function Tv(n) {
                    const t = n.get(Dv, null);
                    t && t.forEach((e) => e());
                  })(n);
                })(
                  (function Iv(n = [], t) {
                    return kt.create({
                      name: t,
                      providers: [
                        { provide: Yd, useValue: "platform" },
                        { provide: eh, useValue: new Set([() => (bi = null)]) },
                        ...n,
                      ],
                    });
                  })(a, i)
                );
          }
          return (function zk(n) {
            const t = th();
            if (!t) throw new w(401, !1);
            return t;
          })();
        };
      }
      function th() {
        return bi?.get(Rv) ?? null;
      }
      let Rv = (() => {
        class n {
          constructor(e) {
            (this._injector = e),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(e, i) {
            const r = (function Ov(n, t) {
                let e;
                return (
                  (e =
                    "noop" === n
                      ? new Pk()
                      : ("zone.js" === n ? void 0 : n) || new V(t)),
                  e
                );
              })(
                i?.ngZone,
                (function kv(n) {
                  return {
                    enableLongStackTrace: !1,
                    shouldCoalesceEventChangeDetection:
                      !(!n || !n.ngZoneEventCoalescing) || !1,
                    shouldCoalesceRunChangeDetection:
                      !(!n || !n.ngZoneRunCoalescing) || !1,
                  };
                })(i)
              ),
              o = [{ provide: V, useValue: r }];
            return r.run(() => {
              const s = kt.create({
                  providers: o,
                  parent: this.injector,
                  name: e.moduleType.name,
                }),
                a = e.create(s),
                l = a.injector.get(Tr, null);
              if (!l) throw new w(402, !1);
              return (
                r.runOutsideAngular(() => {
                  const c = r.onError.subscribe({
                    next: (d) => {
                      l.handleError(d);
                    },
                  });
                  a.onDestroy(() => {
                    Za(this._modules, a), c.unsubscribe();
                  });
                }),
                (function Fv(n, t, e) {
                  try {
                    const i = e();
                    return Va(i)
                      ? i.catch((r) => {
                          throw (
                            (t.runOutsideAngular(() => n.handleError(r)), r)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (t.runOutsideAngular(() => n.handleError(i)), i);
                  }
                })(l, r, () => {
                  const c = a.injector.get(Ya);
                  return (
                    c.runInitializers(),
                    c.donePromise.then(
                      () => (
                        (function sy(n) {
                          Zt(n, "Expected localeId to be defined"),
                            "string" == typeof n &&
                              (oy = n.toLowerCase().replace(/_/g, "-"));
                        })(a.injector.get(Rn, Gr) || Gr),
                        this._moduleDoBootstrap(a),
                        a
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(e, i = []) {
            const r = Pv({}, i);
            return (function Vk(n, t, e) {
              const i = new Ou(e);
              return Promise.resolve(i);
            })(0, 0, e).then((o) => this.bootstrapModuleFactory(o, r));
          }
          _moduleDoBootstrap(e) {
            const i = e.injector.get(Qo);
            if (e._bootstrapComponents.length > 0)
              e._bootstrapComponents.forEach((r) => i.bootstrap(r));
            else {
              if (!e.instance.ngDoBootstrap) throw new w(-403, !1);
              e.instance.ngDoBootstrap(i);
            }
            this._modules.push(e);
          }
          onDestroy(e) {
            this._destroyListeners.push(e);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new w(404, !1);
            this._modules.slice().forEach((i) => i.destroy()),
              this._destroyListeners.forEach((i) => i());
            const e = this._injector.get(eh, null);
            e && (e.forEach((i) => i()), e.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(kt));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "platform" })),
          n
        );
      })();
      function Pv(n, t) {
        return Array.isArray(t) ? t.reduce(Pv, n) : { ...n, ...t };
      }
      let Qo = (() => {
        class n {
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          constructor(e, i, r) {
            (this._zone = e),
              (this._injector = i),
              (this._exceptionHandler = r),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const o = new De((a) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    a.next(this._stable), a.complete();
                  });
              }),
              s = new De((a) => {
                let l;
                this._zone.runOutsideAngular(() => {
                  l = this._zone.onStable.subscribe(() => {
                    V.assertNotInAngularZone(),
                      Yu(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), a.next(!0));
                      });
                  });
                });
                const c = this._zone.onUnstable.subscribe(() => {
                  V.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        a.next(!1);
                      }));
                });
                return () => {
                  l.unsubscribe(), c.unsubscribe();
                };
              });
            this.isStable = Pt(
              o,
              s.pipe(
                (function KE(n = {}) {
                  const {
                    connector: t = () => new A(),
                    resetOnError: e = !0,
                    resetOnComplete: i = !0,
                    resetOnRefCountZero: r = !0,
                  } = n;
                  return (o) => {
                    let s,
                      a,
                      l,
                      c = 0,
                      d = !1,
                      u = !1;
                    const h = () => {
                        a?.unsubscribe(), (a = void 0);
                      },
                      f = () => {
                        h(), (s = l = void 0), (d = u = !1);
                      },
                      m = () => {
                        const g = s;
                        f(), g?.unsubscribe();
                      };
                    return dt((g, _) => {
                      c++, !u && !d && h();
                      const v = (l = l ?? t());
                      _.add(() => {
                        c--, 0 === c && !u && !d && (a = Bc(m, r));
                      }),
                        v.subscribe(_),
                        !s &&
                          c > 0 &&
                          ((s = new uo({
                            next: (E) => v.next(E),
                            error: (E) => {
                              (u = !0), h(), (a = Bc(f, e, E)), v.error(E);
                            },
                            complete: () => {
                              (d = !0), h(), (a = Bc(f, i)), v.complete();
                            },
                          })),
                          St(g).subscribe(s));
                    })(o);
                  };
                })()
              )
            );
          }
          bootstrap(e, i) {
            const r = e instanceof __;
            if (!this._injector.get(Ya).done) {
              !r &&
                (function _o(n) {
                  const t = ye(n) || ut(n) || Tt(n);
                  return null !== t && t.standalone;
                })(e);
              throw new w(405, Qn);
            }
            let s;
            (s = r ? e : this._injector.get(Er).resolveComponentFactory(e)),
              this.componentTypes.push(s.componentType);
            const a = (function Bk(n) {
                return n.isBoundToModule;
              })(s)
                ? void 0
                : this._injector.get(Wr),
              c = s.create(kt.NULL, [], i || s.selector, a),
              d = c.location.nativeElement,
              u = c.injector.get(Sv, null);
            return (
              u?.registerApplication(d),
              c.onDestroy(() => {
                this.detachView(c.hostView),
                  Za(this.components, c),
                  u?.unregisterApplication(d);
              }),
              this._loadComponent(c),
              c
            );
          }
          tick() {
            if (this._runningTick) throw new w(101, !1);
            try {
              this._runningTick = !0;
              for (let e of this._views) e.detectChanges();
            } catch (e) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(e)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(e) {
            const i = e;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(e) {
            const i = e;
            Za(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(e) {
            this.attachView(e.hostView), this.tick(), this.components.push(e);
            const i = this._injector.get(Lk, []);
            i.push(...this._bootstrapListeners), i.forEach((r) => r(e));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((e) => e()),
                  this._views.slice().forEach((e) => e.destroy()),
                  this._onMicrotaskEmptySubscription.unsubscribe();
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(e) {
            return (
              this._destroyListeners.push(e),
              () => Za(this._destroyListeners, e)
            );
          }
          destroy() {
            if (this._destroyed) throw new w(406, !1);
            const e = this._injector;
            e.destroy && !e.destroyed && e.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(V), b(xr), b(Tr));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function Za(n, t) {
        const e = n.indexOf(t);
        e > -1 && n.splice(e, 1);
      }
      let zt = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = Uk), n;
      })();
      function Uk(n) {
        return (function Gk(n, t, e) {
          if (Do(n) && !e) {
            const i = At(n.index, t);
            return new Bo(i, i);
          }
          return 47 & n.type ? new Bo(t[ft], t) : null;
        })(ct(), D(), 16 == (16 & n));
      }
      class Hv {
        constructor() {}
        supports(t) {
          return Pa(t);
        }
        create(t) {
          return new Xk(t);
        }
      }
      const Zk = (n, t) => t;
      class Xk {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || Zk);
        }
        forEachItem(t) {
          let e;
          for (e = this._itHead; null !== e; e = e._next) t(e);
        }
        forEachOperation(t) {
          let e = this._itHead,
            i = this._removalsHead,
            r = 0,
            o = null;
          for (; e || i; ) {
            const s = !i || (e && e.currentIndex < zv(i, r, o)) ? e : i,
              a = zv(s, r, o),
              l = s.currentIndex;
            if (s === i) r--, (i = i._nextRemoved);
            else if (((e = e._next), null == s.previousIndex)) r++;
            else {
              o || (o = []);
              const c = a - r,
                d = l - r;
              if (c != d) {
                for (let h = 0; h < c; h++) {
                  const f = h < o.length ? o[h] : (o[h] = 0),
                    m = f + h;
                  d <= m && m < c && (o[h] = f + 1);
                }
                o[s.previousIndex] = d - c;
              }
            }
            a !== l && t(s, a, l);
          }
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousItHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachMovedItem(t) {
          let e;
          for (e = this._movesHead; null !== e; e = e._nextMoved) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        forEachIdentityChange(t) {
          let e;
          for (
            e = this._identityChangesHead;
            null !== e;
            e = e._nextIdentityChange
          )
            t(e);
        }
        diff(t) {
          if ((null == t && (t = []), !Pa(t))) throw new w(900, !1);
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let r,
            o,
            s,
            e = this._itHead,
            i = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let a = 0; a < this.length; a++)
              (o = t[a]),
                (s = this._trackByFn(a, o)),
                null !== e && Object.is(e.trackById, s)
                  ? (i && (e = this._verifyReinsertion(e, o, s, a)),
                    Object.is(e.item, o) || this._addIdentityChange(e, o))
                  : ((e = this._mismatch(e, o, s, a)), (i = !0)),
                (e = e._next);
          } else
            (r = 0),
              (function CI(n, t) {
                if (Array.isArray(n))
                  for (let e = 0; e < n.length; e++) t(n[e]);
                else {
                  const e = n[Symbol.iterator]();
                  let i;
                  for (; !(i = e.next()).done; ) t(i.value);
                }
              })(t, (a) => {
                (s = this._trackByFn(r, a)),
                  null !== e && Object.is(e.trackById, s)
                    ? (i && (e = this._verifyReinsertion(e, a, s, r)),
                      Object.is(e.item, a) || this._addIdentityChange(e, a))
                    : ((e = this._mismatch(e, a, s, r)), (i = !0)),
                  (e = e._next),
                  r++;
              }),
              (this.length = r);
          return this._truncate(e), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              t = this._previousItHead = this._itHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded)
              t.previousIndex = t.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                t = this._movesHead;
              null !== t;
              t = t._nextMoved
            )
              t.previousIndex = t.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, e, i, r) {
          let o;
          return (
            null === t ? (o = this._itTail) : ((o = t._prev), this._remove(t)),
            null !==
            (t =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e),
                this._reinsertAfter(t, o, r))
              : null !==
                (t =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, r))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e),
                this._moveAfter(t, o, r))
              : (t = this._addAfter(new Qk(e, i), o, r)),
            t
          );
        }
        _verifyReinsertion(t, e, i, r) {
          let o =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== o
              ? (t = this._reinsertAfter(o, t._prev, r))
              : t.currentIndex != r &&
                ((t.currentIndex = r), this._addToMoves(t, r)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const e = t._next;
            this._addToRemovals(this._unlink(t)), (t = e);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, e, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const r = t._prevRemoved,
            o = t._nextRemoved;
          return (
            null === r ? (this._removalsHead = o) : (r._nextRemoved = o),
            null === o ? (this._removalsTail = r) : (o._prevRemoved = r),
            this._insertAfter(t, e, i),
            this._addToMoves(t, i),
            t
          );
        }
        _moveAfter(t, e, i) {
          return (
            this._unlink(t),
            this._insertAfter(t, e, i),
            this._addToMoves(t, i),
            t
          );
        }
        _addAfter(t, e, i) {
          return (
            this._insertAfter(t, e, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = t)
                : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, e, i) {
          const r = null === e ? this._itHead : e._next;
          return (
            (t._next = r),
            (t._prev = e),
            null === r ? (this._itTail = t) : (r._prev = t),
            null === e ? (this._itHead = t) : (e._next = t),
            null === this._linkedRecords && (this._linkedRecords = new jv()),
            this._linkedRecords.put(t),
            (t.currentIndex = i),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const e = t._prev,
            i = t._next;
          return (
            null === e ? (this._itHead = i) : (e._next = i),
            null === i ? (this._itTail = e) : (i._prev = e),
            t
          );
        }
        _addToMoves(t, e) {
          return (
            t.previousIndex === e ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = t)
                  : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new jv()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t),
                (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, e) {
          return (
            (t.item = e),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class Qk {
        constructor(t, e) {
          (this.item = t),
            (this.trackById = e),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class Jk {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t),
              (t._nextDup = null),
              (t._prevDup = null))
            : ((this._tail._nextDup = t),
              (t._prevDup = this._tail),
              (t._nextDup = null),
              (this._tail = t));
        }
        get(t, e) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === e || e <= i.currentIndex) &&
              Object.is(i.trackById, t)
            )
              return i;
          return null;
        }
        remove(t) {
          const e = t._prevDup,
            i = t._nextDup;
          return (
            null === e ? (this._head = i) : (e._nextDup = i),
            null === i ? (this._tail = e) : (i._prevDup = e),
            null === this._head
          );
        }
      }
      class jv {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const e = t.trackById;
          let i = this.map.get(e);
          i || ((i = new Jk()), this.map.set(e, i)), i.add(t);
        }
        get(t, e) {
          const r = this.map.get(t);
          return r ? r.get(t, e) : null;
        }
        remove(t) {
          const e = t.trackById;
          return this.map.get(e).remove(t) && this.map.delete(e), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function zv(n, t, e) {
        const i = n.previousIndex;
        if (null === i) return i;
        let r = 0;
        return e && i < e.length && (r = e[i]), i + t + r;
      }
      class $v {
        constructor() {}
        supports(t) {
          return t instanceof Map || yu(t);
        }
        create() {
          return new eO();
        }
      }
      class eO {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(t) {
          let e;
          for (e = this._mapHead; null !== e; e = e._next) t(e);
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousMapHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachChangedItem(t) {
          let e;
          for (e = this._changesHead; null !== e; e = e._nextChanged) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || yu(t))) throw new w(900, !1);
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (i, r) => {
              if (e && e.key === r)
                this._maybeAddToChanges(e, i),
                  (this._appendAfter = e),
                  (e = e._next);
              else {
                const o = this._getOrCreateRecordForKey(r, i);
                e = this._insertBeforeOrAppend(e, o);
              }
            }),
            e)
          ) {
            e._prev && (e._prev._next = null), (this._removalsHead = e);
            for (let i = e; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, e) {
          if (t) {
            const i = t._prev;
            return (
              (e._next = t),
              (e._prev = i),
              (t._prev = e),
              i && (i._next = e),
              t === this._mapHead && (this._mapHead = e),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = e), (e._prev = this._appendAfter))
              : (this._mapHead = e),
            (this._appendAfter = e),
            null
          );
        }
        _getOrCreateRecordForKey(t, e) {
          if (this._records.has(t)) {
            const r = this._records.get(t);
            this._maybeAddToChanges(r, e);
            const o = r._prev,
              s = r._next;
            return (
              o && (o._next = s),
              s && (s._prev = o),
              (r._next = null),
              (r._prev = null),
              r
            );
          }
          const i = new tO(t);
          return (
            this._records.set(t, i),
            (i.currentValue = e),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              this._previousMapHead = this._mapHead, t = this._previousMapHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged)
              t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded)
              t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, e) {
          Object.is(e, t.currentValue) ||
            ((t.previousValue = t.currentValue),
            (t.currentValue = e),
            this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, e) {
          t instanceof Map
            ? t.forEach(e)
            : Object.keys(t).forEach((i) => e(t[i], i));
        }
      }
      class tO {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function Uv() {
        return new Jn([new Hv()]);
      }
      let Jn = (() => {
        class n {
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (null != i) {
              const r = i.factories.slice();
              e = e.concat(r);
            }
            return new n(e);
          }
          static extend(e) {
            return {
              provide: n,
              useFactory: (i) => n.create(e, i || Uv()),
              deps: [[n, new yr(), new Pi()]],
            };
          }
          find(e) {
            const i = this.factories.find((r) => r.supports(e));
            if (null != i) return i;
            throw new w(901, !1);
          }
        }
        return (n.ɵprov = I({ token: n, providedIn: "root", factory: Uv })), n;
      })();
      function Gv() {
        return new Jo([new $v()]);
      }
      let Jo = (() => {
        class n {
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (i) {
              const r = i.factories.slice();
              e = e.concat(r);
            }
            return new n(e);
          }
          static extend(e) {
            return {
              provide: n,
              useFactory: (i) => n.create(e, i || Gv()),
              deps: [[n, new yr(), new Pi()]],
            };
          }
          find(e) {
            const i = this.factories.find((r) => r.supports(e));
            if (i) return i;
            throw new w(901, !1);
          }
        }
        return (n.ɵprov = I({ token: n, providedIn: "root", factory: Gv })), n;
      })();
      const rO = Av(null, "core", []);
      let oO = (() => {
          class n {
            constructor(e) {}
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(Qo));
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({})),
            n
          );
        })(),
        ah = null;
      function ei() {
        return ah;
      }
      class lO {}
      const ne = new C("DocumentToken");
      let Wv = (() => {
          class n {
            historyGo(e) {
              throw new Error("Not implemented");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({
              token: n,
              factory: function () {
                return (function cO() {
                  return b(qv);
                })();
              },
              providedIn: "platform",
            })),
            n
          );
        })(),
        qv = (() => {
          class n extends Wv {
            constructor(e) {
              super(),
                (this._doc = e),
                (this._location = window.location),
                (this._history = window.history);
            }
            getBaseHrefFromDOM() {
              return ei().getBaseHref(this._doc);
            }
            onPopState(e) {
              const i = ei().getGlobalEventTarget(this._doc, "window");
              return (
                i.addEventListener("popstate", e, !1),
                () => i.removeEventListener("popstate", e)
              );
            }
            onHashChange(e) {
              const i = ei().getGlobalEventTarget(this._doc, "window");
              return (
                i.addEventListener("hashchange", e, !1),
                () => i.removeEventListener("hashchange", e)
              );
            }
            get href() {
              return this._location.href;
            }
            get protocol() {
              return this._location.protocol;
            }
            get hostname() {
              return this._location.hostname;
            }
            get port() {
              return this._location.port;
            }
            get pathname() {
              return this._location.pathname;
            }
            get search() {
              return this._location.search;
            }
            get hash() {
              return this._location.hash;
            }
            set pathname(e) {
              this._location.pathname = e;
            }
            pushState(e, i, r) {
              Yv()
                ? this._history.pushState(e, i, r)
                : (this._location.hash = r);
            }
            replaceState(e, i, r) {
              Yv()
                ? this._history.replaceState(e, i, r)
                : (this._location.hash = r);
            }
            forward() {
              this._history.forward();
            }
            back() {
              this._history.back();
            }
            historyGo(e = 0) {
              this._history.go(e);
            }
            getState() {
              return this._history.state;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ne));
            }),
            (n.ɵprov = I({
              token: n,
              factory: function () {
                return (function dO() {
                  return new qv(b(ne));
                })();
              },
              providedIn: "platform",
            })),
            n
          );
        })();
      function Yv() {
        return !!window.history.pushState;
      }
      function Kv(n, t) {
        if (0 == n.length) return t;
        if (0 == t.length) return n;
        let e = 0;
        return (
          n.endsWith("/") && e++,
          t.startsWith("/") && e++,
          2 == e ? n + t.substring(1) : 1 == e ? n + t : n + "/" + t
        );
      }
      function Zv(n) {
        const t = n.match(/#|\?|$/),
          e = (t && t.index) || n.length;
        return n.slice(0, e - ("/" === n[e - 1] ? 1 : 0)) + n.slice(e);
      }
      function Wi(n) {
        return n && "?" !== n[0] ? "?" + n : n;
      }
      let lh = (() => {
        class n {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({
            token: n,
            factory: function () {
              return vn(hO);
            },
            providedIn: "root",
          })),
          n
        );
      })();
      const uO = new C("appBaseHref");
      let hO = (() => {
          class n extends lh {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._removeListenerFns = []),
                (this._baseHref =
                  i ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  vn(ne).location?.origin ??
                  "");
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(e) {
              return Kv(this._baseHref, e);
            }
            path(e = !1) {
              const i =
                  this._platformLocation.pathname +
                  Wi(this._platformLocation.search),
                r = this._platformLocation.hash;
              return r && e ? `${i}${r}` : i;
            }
            pushState(e, i, r, o) {
              const s = this.prepareExternalUrl(r + Wi(o));
              this._platformLocation.pushState(e, i, s);
            }
            replaceState(e, i, r, o) {
              const s = this.prepareExternalUrl(r + Wi(o));
              this._platformLocation.replaceState(e, i, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(Wv), b(uO, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        ch = (() => {
          class n {
            constructor(e) {
              (this._subject = new Q()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = e);
              const i = this._locationStrategy.getBaseHref();
              (this._basePath = (function mO(n) {
                if (new RegExp("^(https?:)?//").test(n)) {
                  const [, e] = n.split(/\/\/[^\/]+/);
                  return e;
                }
                return n;
              })(Zv(Xv(i)))),
                this._locationStrategy.onPopState((r) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: r.state,
                    type: r.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(e = !1) {
              return this.normalize(this._locationStrategy.path(e));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(e, i = "") {
              return this.path() == this.normalize(e + Wi(i));
            }
            normalize(e) {
              return n.stripTrailingSlash(
                (function pO(n, t) {
                  if (!n || !t.startsWith(n)) return t;
                  const e = t.substring(n.length);
                  return "" === e || ["/", ";", "?", "#"].includes(e[0])
                    ? e
                    : t;
                })(this._basePath, Xv(e))
              );
            }
            prepareExternalUrl(e) {
              return (
                e && "/" !== e[0] && (e = "/" + e),
                this._locationStrategy.prepareExternalUrl(e)
              );
            }
            go(e, i = "", r = null) {
              this._locationStrategy.pushState(r, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + Wi(i)),
                  r
                );
            }
            replaceState(e, i = "", r = null) {
              this._locationStrategy.replaceState(r, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + Wi(i)),
                  r
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(e = 0) {
              this._locationStrategy.historyGo?.(e);
            }
            onUrlChange(e) {
              return (
                this._urlChangeListeners.push(e),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((i) => {
                    this._notifyUrlChangeListeners(i.url, i.state);
                  })),
                () => {
                  const i = this._urlChangeListeners.indexOf(e);
                  this._urlChangeListeners.splice(i, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(e = "", i) {
              this._urlChangeListeners.forEach((r) => r(e, i));
            }
            subscribe(e, i, r) {
              return this._subject.subscribe({
                next: e,
                error: i,
                complete: r,
              });
            }
          }
          return (
            (n.normalizeQueryParams = Wi),
            (n.joinWithSlash = Kv),
            (n.stripTrailingSlash = Zv),
            (n.ɵfac = function (e) {
              return new (e || n)(b(lh));
            }),
            (n.ɵprov = I({
              token: n,
              factory: function () {
                return (function fO() {
                  return new ch(b(lh));
                })();
              },
              providedIn: "root",
            })),
            n
          );
        })();
      function Xv(n) {
        return n.replace(/\/index.html$/, "");
      }
      const yh = /\s+/,
        sD = [];
      let vh = (() => {
        class n {
          constructor(e, i, r, o) {
            (this._iterableDiffers = e),
              (this._keyValueDiffers = i),
              (this._ngEl = r),
              (this._renderer = o),
              (this.initialClasses = sD),
              (this.stateMap = new Map());
          }
          set klass(e) {
            this.initialClasses = null != e ? e.trim().split(yh) : sD;
          }
          set ngClass(e) {
            this.rawClass = "string" == typeof e ? e.trim().split(yh) : e;
          }
          ngDoCheck() {
            for (const i of this.initialClasses) this._updateState(i, !0);
            const e = this.rawClass;
            if (Array.isArray(e) || e instanceof Set)
              for (const i of e) this._updateState(i, !0);
            else if (null != e)
              for (const i of Object.keys(e))
                this._updateState(i, Boolean(e[i]));
            this._applyStateDiff();
          }
          _updateState(e, i) {
            const r = this.stateMap.get(e);
            void 0 !== r
              ? (r.enabled !== i && ((r.changed = !0), (r.enabled = i)),
                (r.touched = !0))
              : this.stateMap.set(e, { enabled: i, changed: !0, touched: !0 });
          }
          _applyStateDiff() {
            for (const e of this.stateMap) {
              const i = e[0],
                r = e[1];
              r.changed
                ? (this._toggleClass(i, r.enabled), (r.changed = !1))
                : r.touched ||
                  (r.enabled && this._toggleClass(i, !1),
                  this.stateMap.delete(i)),
                (r.touched = !1);
            }
          }
          _toggleClass(e, i) {
            (e = e.trim()).length > 0 &&
              e.split(yh).forEach((r) => {
                i
                  ? this._renderer.addClass(this._ngEl.nativeElement, r)
                  : this._renderer.removeClass(this._ngEl.nativeElement, r);
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(p(Jn), p(Jo), p(U), p(gi));
          }),
          (n.ɵdir = x({
            type: n,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
            standalone: !0,
          })),
          n
        );
      })();
      class eF {
        constructor(t, e, i, r) {
          (this.$implicit = t),
            (this.ngForOf = e),
            (this.index = i),
            (this.count = r);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let Dh = (() => {
        class n {
          set ngForOf(e) {
            (this._ngForOf = e), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(e) {
            this._trackByFn = e;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          constructor(e, i, r) {
            (this._viewContainer = e),
              (this._template = i),
              (this._differs = r),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForTemplate(e) {
            e && (this._template = e);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const e = this._ngForOf;
              !this._differ &&
                e &&
                (this._differ = this._differs
                  .find(e)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const e = this._differ.diff(this._ngForOf);
              e && this._applyChanges(e);
            }
          }
          _applyChanges(e) {
            const i = this._viewContainer;
            e.forEachOperation((r, o, s) => {
              if (null == r.previousIndex)
                i.createEmbeddedView(
                  this._template,
                  new eF(r.item, this._ngForOf, -1, -1),
                  null === s ? void 0 : s
                );
              else if (null == s) i.remove(null === o ? void 0 : o);
              else if (null !== o) {
                const a = i.get(o);
                i.move(a, s), cD(a, r);
              }
            });
            for (let r = 0, o = i.length; r < o; r++) {
              const a = i.get(r).context;
              (a.index = r), (a.count = o), (a.ngForOf = this._ngForOf);
            }
            e.forEachIdentityChange((r) => {
              cD(i.get(r.currentIndex), r);
            });
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(p(tt), p($e), p(Jn));
          }),
          (n.ɵdir = x({
            type: n,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
            standalone: !0,
          })),
          n
        );
      })();
      function cD(n, t) {
        n.context.$implicit = t.item;
      }
      let ns = (() => {
        class n {
          constructor(e, i) {
            (this._viewContainer = e),
              (this._context = new nF()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = i);
          }
          set ngIf(e) {
            (this._context.$implicit = this._context.ngIf = e),
              this._updateView();
          }
          set ngIfThen(e) {
            dD("ngIfThen", e),
              (this._thenTemplateRef = e),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(e) {
            dD("ngIfElse", e),
              (this._elseTemplateRef = e),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(p(tt), p($e));
          }),
          (n.ɵdir = x({
            type: n,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
            standalone: !0,
          })),
          n
        );
      })();
      class nF {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function dD(n, t) {
        if (t && !t.createEmbeddedView)
          throw new Error(
            `${n} must be a TemplateRef, but received '${Me(t)}'.`
          );
      }
      class wh {
        constructor(t, e) {
          (this._viewContainerRef = t),
            (this._templateRef = e),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(t) {
          t && !this._created
            ? this.create()
            : !t && this._created && this.destroy();
        }
      }
      let is = (() => {
          class n {
            constructor() {
              (this._defaultViews = []),
                (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(e) {
              (this._ngSwitch = e),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(e) {
              this._defaultViews.push(e);
            }
            _matchCase(e) {
              const i = e == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || i),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                i
              );
            }
            _updateDefaultCases(e) {
              if (this._defaultViews.length > 0 && e !== this._defaultUsed) {
                this._defaultUsed = e;
                for (const i of this._defaultViews) i.enforceState(e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "ngSwitch", ""]],
              inputs: { ngSwitch: "ngSwitch" },
              standalone: !0,
            })),
            n
          );
        })(),
        xh = (() => {
          class n {
            constructor(e, i, r) {
              (this.ngSwitch = r), r._addCase(), (this._view = new wh(e, i));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(tt), p($e), p(is, 9));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "ngSwitchCase", ""]],
              inputs: { ngSwitchCase: "ngSwitchCase" },
              standalone: !0,
            })),
            n
          );
        })(),
        uD = (() => {
          class n {
            constructor(e, i, r) {
              r._addDefault(new wh(e, i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(tt), p($e), p(is, 9));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "ngSwitchDefault", ""]],
              standalone: !0,
            })),
            n
          );
        })(),
        fD = (() => {
          class n {
            constructor(e) {
              (this._viewContainerRef = e),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null),
                (this.ngTemplateOutletInjector = null);
            }
            ngOnChanges(e) {
              if (e.ngTemplateOutlet || e.ngTemplateOutletInjector) {
                const i = this._viewContainerRef;
                if (
                  (this._viewRef && i.remove(i.indexOf(this._viewRef)),
                  this.ngTemplateOutlet)
                ) {
                  const {
                    ngTemplateOutlet: r,
                    ngTemplateOutletContext: o,
                    ngTemplateOutletInjector: s,
                  } = this;
                  this._viewRef = i.createEmbeddedView(
                    r,
                    o,
                    s ? { injector: s } : void 0
                  );
                } else this._viewRef = null;
              } else
                this._viewRef &&
                  e.ngTemplateOutletContext &&
                  this.ngTemplateOutletContext &&
                  (this._viewRef.context = this.ngTemplateOutletContext);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(tt));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "ngTemplateOutlet", ""]],
              inputs: {
                ngTemplateOutletContext: "ngTemplateOutletContext",
                ngTemplateOutlet: "ngTemplateOutlet",
                ngTemplateOutletInjector: "ngTemplateOutletInjector",
              },
              standalone: !0,
              features: [at],
            })),
            n
          );
        })(),
        kn = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({})),
            n
          );
        })();
      const mD = "browser";
      class oP extends lO {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class Th extends oP {
        static makeCurrent() {
          !(function aO(n) {
            ah || (ah = n);
          })(new Th());
        }
        onAndCancel(t, e, i) {
          return (
            t.addEventListener(e, i, !1),
            () => {
              t.removeEventListener(e, i, !1);
            }
          );
        }
        dispatchEvent(t, e) {
          t.dispatchEvent(e);
        }
        remove(t) {
          t.parentNode && t.parentNode.removeChild(t);
        }
        createElement(t, e) {
          return (e = e || this.getDefaultDocument()).createElement(t);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(t) {
          return t.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(t) {
          return t instanceof DocumentFragment;
        }
        getGlobalEventTarget(t, e) {
          return "window" === e
            ? window
            : "document" === e
            ? t
            : "body" === e
            ? t.body
            : null;
        }
        getBaseHref(t) {
          const e = (function sP() {
            return (
              (os = os || document.querySelector("base")),
              os ? os.getAttribute("href") : null
            );
          })();
          return null == e
            ? null
            : (function aP(n) {
                (dl = dl || document.createElement("a")),
                  dl.setAttribute("href", n);
                const t = dl.pathname;
                return "/" === t.charAt(0) ? t : `/${t}`;
              })(e);
        }
        resetBaseElement() {
          os = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(t) {
          return (function QO(n, t) {
            t = encodeURIComponent(t);
            for (const e of n.split(";")) {
              const i = e.indexOf("="),
                [r, o] = -1 == i ? [e, ""] : [e.slice(0, i), e.slice(i + 1)];
              if (r.trim() === t) return decodeURIComponent(o);
            }
            return null;
          })(document.cookie, t);
        }
      }
      let dl,
        os = null;
      const DD = new C("TRANSITION_ID"),
        cP = [
          {
            provide: yv,
            useFactory: function lP(n, t, e) {
              return () => {
                e.get(Ya).donePromise.then(() => {
                  const i = ei(),
                    r = t.querySelectorAll(`style[ng-transition="${n}"]`);
                  for (let o = 0; o < r.length; o++) i.remove(r[o]);
                });
              };
            },
            deps: [DD, ne, kt],
            multi: !0,
          },
        ];
      let uP = (() => {
        class n {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const ul = new C("EventManagerPlugins");
      let hl = (() => {
        class n {
          constructor(e, i) {
            (this._zone = i),
              (this._eventNameToPlugin = new Map()),
              e.forEach((r) => {
                r.manager = this;
              }),
              (this._plugins = e.slice().reverse());
          }
          addEventListener(e, i, r) {
            return this._findPluginFor(i).addEventListener(e, i, r);
          }
          addGlobalEventListener(e, i, r) {
            return this._findPluginFor(i).addGlobalEventListener(e, i, r);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(e) {
            const i = this._eventNameToPlugin.get(e);
            if (i) return i;
            const r = this._plugins;
            for (let o = 0; o < r.length; o++) {
              const s = r[o];
              if (s.supports(e)) return this._eventNameToPlugin.set(e, s), s;
            }
            throw new Error(`No event manager plugin found for event ${e}`);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(ul), b(V));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class wD {
        constructor(t) {
          this._doc = t;
        }
        addGlobalEventListener(t, e, i) {
          const r = ei().getGlobalEventTarget(this._doc, t);
          if (!r)
            throw new Error(`Unsupported event target ${r} for event ${e}`);
          return this.addEventListener(r, e, i);
        }
      }
      let xD = (() => {
          class n {
            constructor() {
              this.usageCount = new Map();
            }
            addStyles(e) {
              for (const i of e)
                1 === this.changeUsageCount(i, 1) && this.onStyleAdded(i);
            }
            removeStyles(e) {
              for (const i of e)
                0 === this.changeUsageCount(i, -1) && this.onStyleRemoved(i);
            }
            onStyleRemoved(e) {}
            onStyleAdded(e) {}
            getAllStyles() {
              return this.usageCount.keys();
            }
            changeUsageCount(e, i) {
              const r = this.usageCount;
              let o = r.get(e) ?? 0;
              return (o += i), o > 0 ? r.set(e, o) : r.delete(e), o;
            }
            ngOnDestroy() {
              for (const e of this.getAllStyles()) this.onStyleRemoved(e);
              this.usageCount.clear();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        ss = (() => {
          class n extends xD {
            constructor(e) {
              super(),
                (this.doc = e),
                (this.styleRef = new Map()),
                (this.hostNodes = new Set()),
                this.resetHostNodes();
            }
            onStyleAdded(e) {
              for (const i of this.hostNodes) this.addStyleToHost(i, e);
            }
            onStyleRemoved(e) {
              const i = this.styleRef;
              i.get(e)?.forEach((o) => o.remove()), i.delete(e);
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this.styleRef.clear(), this.resetHostNodes();
            }
            addHost(e) {
              this.hostNodes.add(e);
              for (const i of this.getAllStyles()) this.addStyleToHost(e, i);
            }
            removeHost(e) {
              this.hostNodes.delete(e);
            }
            addStyleToHost(e, i) {
              const r = this.doc.createElement("style");
              (r.textContent = i), e.appendChild(r);
              const o = this.styleRef.get(i);
              o ? o.push(r) : this.styleRef.set(i, [r]);
            }
            resetHostNodes() {
              const e = this.hostNodes;
              e.clear(), e.add(this.doc.head);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ne));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      const Ah = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
          math: "http://www.w3.org/1998/MathML/",
        },
        Ih = /%COMP%/g,
        SD = new C("RemoveStylesOnCompDestory", {
          providedIn: "root",
          factory: () => !1,
        });
      function MD(n, t) {
        return t.flat(100).map((e) => e.replace(Ih, n));
      }
      function TD(n) {
        return (t) => {
          if ("__ngUnwrap__" === t) return n;
          !1 === n(t) && (t.preventDefault(), (t.returnValue = !1));
        };
      }
      let fl = (() => {
        class n {
          constructor(e, i, r, o) {
            (this.eventManager = e),
              (this.sharedStylesHost = i),
              (this.appId = r),
              (this.removeStylesOnCompDestory = o),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new Rh(e));
          }
          createRenderer(e, i) {
            if (!e || !i) return this.defaultRenderer;
            const r = this.getOrCreateRenderer(e, i);
            return (
              r instanceof RD
                ? r.applyToHost(e)
                : r instanceof kh && r.applyStyles(),
              r
            );
          }
          getOrCreateRenderer(e, i) {
            const r = this.rendererByCompId;
            let o = r.get(i.id);
            if (!o) {
              const s = this.eventManager,
                a = this.sharedStylesHost,
                l = this.removeStylesOnCompDestory;
              switch (i.encapsulation) {
                case ln.Emulated:
                  o = new RD(s, a, i, this.appId, l);
                  break;
                case ln.ShadowDom:
                  return new bP(s, a, e, i);
                default:
                  o = new kh(s, a, i, l);
              }
              (o.onDestroy = () => r.delete(i.id)), r.set(i.id, o);
            }
            return o;
          }
          ngOnDestroy() {
            this.rendererByCompId.clear();
          }
          begin() {}
          end() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(hl), b(ss), b(Kr), b(SD));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class Rh {
        constructor(t) {
          (this.eventManager = t),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(t, e) {
          return e
            ? document.createElementNS(Ah[e] || e, t)
            : document.createElement(t);
        }
        createComment(t) {
          return document.createComment(t);
        }
        createText(t) {
          return document.createTextNode(t);
        }
        appendChild(t, e) {
          (ID(t) ? t.content : t).appendChild(e);
        }
        insertBefore(t, e, i) {
          t && (ID(t) ? t.content : t).insertBefore(e, i);
        }
        removeChild(t, e) {
          t && t.removeChild(e);
        }
        selectRootElement(t, e) {
          let i = "string" == typeof t ? document.querySelector(t) : t;
          if (!i)
            throw new Error(`The selector "${t}" did not match any elements`);
          return e || (i.textContent = ""), i;
        }
        parentNode(t) {
          return t.parentNode;
        }
        nextSibling(t) {
          return t.nextSibling;
        }
        setAttribute(t, e, i, r) {
          if (r) {
            e = r + ":" + e;
            const o = Ah[r];
            o ? t.setAttributeNS(o, e, i) : t.setAttribute(e, i);
          } else t.setAttribute(e, i);
        }
        removeAttribute(t, e, i) {
          if (i) {
            const r = Ah[i];
            r ? t.removeAttributeNS(r, e) : t.removeAttribute(`${i}:${e}`);
          } else t.removeAttribute(e);
        }
        addClass(t, e) {
          t.classList.add(e);
        }
        removeClass(t, e) {
          t.classList.remove(e);
        }
        setStyle(t, e, i, r) {
          r & (It.DashCase | It.Important)
            ? t.style.setProperty(e, i, r & It.Important ? "important" : "")
            : (t.style[e] = i);
        }
        removeStyle(t, e, i) {
          i & It.DashCase ? t.style.removeProperty(e) : (t.style[e] = "");
        }
        setProperty(t, e, i) {
          t[e] = i;
        }
        setValue(t, e) {
          t.nodeValue = e;
        }
        listen(t, e, i) {
          return "string" == typeof t
            ? this.eventManager.addGlobalEventListener(t, e, TD(i))
            : this.eventManager.addEventListener(t, e, TD(i));
        }
      }
      function ID(n) {
        return "TEMPLATE" === n.tagName && void 0 !== n.content;
      }
      class bP extends Rh {
        constructor(t, e, i, r) {
          super(t),
            (this.sharedStylesHost = e),
            (this.hostEl = i),
            (this.shadowRoot = i.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const o = MD(r.id, r.styles);
          for (const s of o) {
            const a = document.createElement("style");
            (a.textContent = s), this.shadowRoot.appendChild(a);
          }
        }
        nodeOrShadowRoot(t) {
          return t === this.hostEl ? this.shadowRoot : t;
        }
        appendChild(t, e) {
          return super.appendChild(this.nodeOrShadowRoot(t), e);
        }
        insertBefore(t, e, i) {
          return super.insertBefore(this.nodeOrShadowRoot(t), e, i);
        }
        removeChild(t, e) {
          return super.removeChild(this.nodeOrShadowRoot(t), e);
        }
        parentNode(t) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(t))
          );
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
      }
      class kh extends Rh {
        constructor(t, e, i, r, o = i.id) {
          super(t),
            (this.sharedStylesHost = e),
            (this.removeStylesOnCompDestory = r),
            (this.rendererUsageCount = 0),
            (this.styles = MD(o, i.styles));
        }
        applyStyles() {
          this.sharedStylesHost.addStyles(this.styles),
            this.rendererUsageCount++;
        }
        destroy() {
          this.removeStylesOnCompDestory &&
            (this.sharedStylesHost.removeStyles(this.styles),
            this.rendererUsageCount--,
            0 === this.rendererUsageCount && this.onDestroy?.());
        }
      }
      class RD extends kh {
        constructor(t, e, i, r, o) {
          const s = r + "-" + i.id;
          super(t, e, i, o, s),
            (this.contentAttr = (function mP(n) {
              return "_ngcontent-%COMP%".replace(Ih, n);
            })(s)),
            (this.hostAttr = (function gP(n) {
              return "_nghost-%COMP%".replace(Ih, n);
            })(s));
        }
        applyToHost(t) {
          this.applyStyles(), this.setAttribute(t, this.hostAttr, "");
        }
        createElement(t, e) {
          const i = super.createElement(t, e);
          return super.setAttribute(i, this.contentAttr, ""), i;
        }
      }
      let yP = (() => {
        class n extends wD {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return !0;
          }
          addEventListener(e, i, r) {
            return (
              e.addEventListener(i, r, !1),
              () => this.removeEventListener(e, i, r)
            );
          }
          removeEventListener(e, i, r) {
            return e.removeEventListener(i, r);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(ne));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const kD = ["alt", "control", "meta", "shift"],
        vP = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        DP = {
          alt: (n) => n.altKey,
          control: (n) => n.ctrlKey,
          meta: (n) => n.metaKey,
          shift: (n) => n.shiftKey,
        };
      let wP = (() => {
        class n extends wD {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return null != n.parseEventName(e);
          }
          addEventListener(e, i, r) {
            const o = n.parseEventName(i),
              s = n.eventCallback(o.fullKey, r, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => ei().onAndCancel(e, o.domEventName, s));
          }
          static parseEventName(e) {
            const i = e.toLowerCase().split("."),
              r = i.shift();
            if (0 === i.length || ("keydown" !== r && "keyup" !== r))
              return null;
            const o = n._normalizeKey(i.pop());
            let s = "",
              a = i.indexOf("code");
            if (
              (a > -1 && (i.splice(a, 1), (s = "code.")),
              kD.forEach((c) => {
                const d = i.indexOf(c);
                d > -1 && (i.splice(d, 1), (s += c + "."));
              }),
              (s += o),
              0 != i.length || 0 === o.length)
            )
              return null;
            const l = {};
            return (l.domEventName = r), (l.fullKey = s), l;
          }
          static matchEventFullKeyCode(e, i) {
            let r = vP[e.key] || e.key,
              o = "";
            return (
              i.indexOf("code.") > -1 && ((r = e.code), (o = "code.")),
              !(null == r || !r) &&
                ((r = r.toLowerCase()),
                " " === r ? (r = "space") : "." === r && (r = "dot"),
                kD.forEach((s) => {
                  s !== r && (0, DP[s])(e) && (o += s + ".");
                }),
                (o += r),
                o === i)
            );
          }
          static eventCallback(e, i, r) {
            return (o) => {
              n.matchEventFullKeyCode(o, e) && r.runGuarded(() => i(o));
            };
          }
          static _normalizeKey(e) {
            return "esc" === e ? "escape" : e;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(ne));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const SP = Av(rO, "browser", [
          { provide: qu, useValue: mD },
          {
            provide: Dv,
            useValue: function xP() {
              Th.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: ne,
            useFactory: function EP() {
              return (
                (function oT(n) {
                  Bd = n;
                })(document),
                document
              );
            },
            deps: [],
          },
        ]),
        PD = new C(""),
        ND = [
          {
            provide: Ka,
            useClass: class dP {
              addToWindow(t) {
                (Ie.getAngularTestability = (i, r = !0) => {
                  const o = t.findTestabilityInTree(i, r);
                  if (null == o)
                    throw new Error("Could not find testability for element.");
                  return o;
                }),
                  (Ie.getAllAngularTestabilities = () =>
                    t.getAllTestabilities()),
                  (Ie.getAllAngularRootElements = () => t.getAllRootElements()),
                  Ie.frameworkStabilizers || (Ie.frameworkStabilizers = []),
                  Ie.frameworkStabilizers.push((i) => {
                    const r = Ie.getAllAngularTestabilities();
                    let o = r.length,
                      s = !1;
                    const a = function (l) {
                      (s = s || l), o--, 0 == o && i(s);
                    };
                    r.forEach(function (l) {
                      l.whenStable(a);
                    });
                  });
              }
              findTestabilityInTree(t, e, i) {
                return null == e
                  ? null
                  : t.getTestability(e) ??
                      (i
                        ? ei().isShadowRoot(e)
                          ? this.findTestabilityInTree(t, e.host, !0)
                          : this.findTestabilityInTree(t, e.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: Sv, useClass: Xu, deps: [V, Qu, Ka] },
          { provide: Xu, useClass: Xu, deps: [V, Qu, Ka] },
        ],
        LD = [
          { provide: Yd, useValue: "root" },
          {
            provide: Tr,
            useFactory: function CP() {
              return new Tr();
            },
            deps: [],
          },
          { provide: ul, useClass: yP, multi: !0, deps: [ne, V, qu] },
          { provide: ul, useClass: wP, multi: !0, deps: [ne] },
          { provide: fl, useClass: fl, deps: [hl, ss, Kr, SD] },
          { provide: Lo, useExisting: fl },
          { provide: xD, useExisting: ss },
          { provide: ss, useClass: ss, deps: [ne] },
          { provide: hl, useClass: hl, deps: [ul, V] },
          { provide: class kF {}, useClass: uP, deps: [] },
          [],
        ];
      let Fh = (() => {
        class n {
          constructor(e) {}
          static withServerTransition(e) {
            return {
              ngModule: n,
              providers: [
                { provide: Kr, useValue: e.appId },
                { provide: DD, useExisting: Kr },
                cP,
              ],
            };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(PD, 12));
          }),
          (n.ɵmod = le({ type: n })),
          (n.ɵinj = oe({ providers: [...LD, ...ND], imports: [kn, oO] })),
          n
        );
      })();
      typeof window < "u" && window;
      let FP = (() => {
        class n {
          constructor() {
            (this.isDragging = !0), (this.startX = -1), (this.startY = -1);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function ae(n) {
        return null != n && "false" != `${n}`;
      }
      function $t(n, t = 0) {
        return HD(n) ? Number(n) : t;
      }
      function HD(n) {
        return !isNaN(parseFloat(n)) && !isNaN(Number(n));
      }
      function as(n) {
        return Array.isArray(n) ? n : [n];
      }
      function Ze(n) {
        return null == n ? "" : "string" == typeof n ? n : `${n}px`;
      }
      function je(n) {
        return n instanceof U ? n.nativeElement : n;
      }
      function qi(...n) {
        return Ai(n, ho(n));
      }
      const { isArray: PP } = Array;
      function Nh(n) {
        return Kt((t) =>
          (function NP(n, t) {
            return PP(t) ? n(...t) : n(t);
          })(n, t)
        );
      }
      const LP = ["addListener", "removeListener"],
        VP = ["addEventListener", "removeEventListener"],
        BP = ["on", "off"];
      function pl(n, t, e, i) {
        if ((de(e) && ((i = e), (e = void 0)), i))
          return pl(n, t, e).pipe(Nh(i));
        const [r, o] = (function zP(n) {
          return de(n.addEventListener) && de(n.removeEventListener);
        })(n)
          ? VP.map((s) => (a) => n[s](t, a, e))
          : (function HP(n) {
              return de(n.addListener) && de(n.removeListener);
            })(n)
          ? LP.map(jD(n, t))
          : (function jP(n) {
              return de(n.on) && de(n.off);
            })(n)
          ? BP.map(jD(n, t))
          : [];
        if (!r && Nc(n)) return Lc((s) => pl(s, t, e))(St(n));
        if (!r) throw new TypeError("Invalid event target");
        return new De((s) => {
          const a = (...l) => s.next(1 < l.length ? l : l[0]);
          return r(a), () => o(a);
        });
      }
      function jD(n, t) {
        return (e) => (i) => n[e](t, i);
      }
      class $P extends xe {
        constructor(t, e) {
          super();
        }
        schedule(t, e = 0) {
          return this;
        }
      }
      const ml = {
        setInterval(n, t, ...e) {
          const { delegate: i } = ml;
          return i?.setInterval
            ? i.setInterval(n, t, ...e)
            : setInterval(n, t, ...e);
        },
        clearInterval(n) {
          const { delegate: t } = ml;
          return (t?.clearInterval || clearInterval)(n);
        },
        delegate: void 0,
      };
      class Lh extends $P {
        constructor(t, e) {
          super(t, e),
            (this.scheduler = t),
            (this.work = e),
            (this.pending = !1);
        }
        schedule(t, e = 0) {
          var i;
          if (this.closed) return this;
          this.state = t;
          const r = this.id,
            o = this.scheduler;
          return (
            null != r && (this.id = this.recycleAsyncId(o, r, e)),
            (this.pending = !0),
            (this.delay = e),
            (this.id =
              null !== (i = this.id) && void 0 !== i
                ? i
                : this.requestAsyncId(o, this.id, e)),
            this
          );
        }
        requestAsyncId(t, e, i = 0) {
          return ml.setInterval(t.flush.bind(t, this), i);
        }
        recycleAsyncId(t, e, i = 0) {
          if (null != i && this.delay === i && !1 === this.pending) return e;
          null != e && ml.clearInterval(e);
        }
        execute(t, e) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const i = this._execute(t, e);
          if (i) return i;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(t, e) {
          let r,
            i = !1;
          try {
            this.work(t);
          } catch (o) {
            (i = !0),
              (r = o || new Error("Scheduled action threw falsy error"));
          }
          if (i) return this.unsubscribe(), r;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: t, scheduler: e } = this,
              { actions: i } = e;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              ir(i, this),
              null != t && (this.id = this.recycleAsyncId(e, t, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
      const ls = {
          schedule(n) {
            let t = requestAnimationFrame,
              e = cancelAnimationFrame;
            const { delegate: i } = ls;
            i && ((t = i.requestAnimationFrame), (e = i.cancelAnimationFrame));
            const r = t((o) => {
              (e = void 0), n(o);
            });
            return new xe(() => e?.(r));
          },
          requestAnimationFrame(...n) {
            const { delegate: t } = ls;
            return (t?.requestAnimationFrame || requestAnimationFrame)(...n);
          },
          cancelAnimationFrame(...n) {
            const { delegate: t } = ls;
            return (t?.cancelAnimationFrame || cancelAnimationFrame)(...n);
          },
          delegate: void 0,
        },
        zD = { now: () => (zD.delegate || Date).now(), delegate: void 0 };
      class cs {
        constructor(t, e = cs.now) {
          (this.schedulerActionCtor = t), (this.now = e);
        }
        schedule(t, e = 0, i) {
          return new this.schedulerActionCtor(this, t).schedule(i, e);
        }
      }
      cs.now = zD.now;
      class Vh extends cs {
        constructor(t, e = cs.now) {
          super(t, e), (this.actions = []), (this._active = !1);
        }
        flush(t) {
          const { actions: e } = this;
          if (this._active) return void e.push(t);
          let i;
          this._active = !0;
          do {
            if ((i = t.execute(t.state, t.delay))) break;
          } while ((t = e.shift()));
          if (((this._active = !1), i)) {
            for (; (t = e.shift()); ) t.unsubscribe();
            throw i;
          }
        }
      }
      const $D = new (class GP extends Vh {
        flush(t) {
          this._active = !0;
          const e = this._scheduled;
          this._scheduled = void 0;
          const { actions: i } = this;
          let r;
          t = t || i.shift();
          do {
            if ((r = t.execute(t.state, t.delay))) break;
          } while ((t = i[0]) && t.id === e && i.shift());
          if (((this._active = !1), r)) {
            for (; (t = i[0]) && t.id === e && i.shift(); ) t.unsubscribe();
            throw r;
          }
        }
      })(
        class UP extends Lh {
          constructor(t, e) {
            super(t, e), (this.scheduler = t), (this.work = e);
          }
          requestAsyncId(t, e, i = 0) {
            return null !== i && i > 0
              ? super.requestAsyncId(t, e, i)
              : (t.actions.push(this),
                t._scheduled ||
                  (t._scheduled = ls.requestAnimationFrame(() =>
                    t.flush(void 0)
                  )));
          }
          recycleAsyncId(t, e, i = 0) {
            var r;
            if (null != i ? i > 0 : this.delay > 0)
              return super.recycleAsyncId(t, e, i);
            const { actions: o } = t;
            null != e &&
              (null === (r = o[o.length - 1]) || void 0 === r
                ? void 0
                : r.id) !== e &&
              (ls.cancelAnimationFrame(e), (t._scheduled = void 0));
          }
        }
      );
      let Bh,
        WP = 1;
      const gl = {};
      function UD(n) {
        return n in gl && (delete gl[n], !0);
      }
      const qP = {
          setImmediate(n) {
            const t = WP++;
            return (
              (gl[t] = !0),
              Bh || (Bh = Promise.resolve()),
              Bh.then(() => UD(t) && n()),
              t
            );
          },
          clearImmediate(n) {
            UD(n);
          },
        },
        { setImmediate: YP, clearImmediate: KP } = qP,
        _l = {
          setImmediate(...n) {
            const { delegate: t } = _l;
            return (t?.setImmediate || YP)(...n);
          },
          clearImmediate(n) {
            const { delegate: t } = _l;
            return (t?.clearImmediate || KP)(n);
          },
          delegate: void 0,
        },
        QP = new (class XP extends Vh {
          flush(t) {
            this._active = !0;
            const e = this._scheduled;
            this._scheduled = void 0;
            const { actions: i } = this;
            let r;
            t = t || i.shift();
            do {
              if ((r = t.execute(t.state, t.delay))) break;
            } while ((t = i[0]) && t.id === e && i.shift());
            if (((this._active = !1), r)) {
              for (; (t = i[0]) && t.id === e && i.shift(); ) t.unsubscribe();
              throw r;
            }
          }
        })(
          class ZP extends Lh {
            constructor(t, e) {
              super(t, e), (this.scheduler = t), (this.work = e);
            }
            requestAsyncId(t, e, i = 0) {
              return null !== i && i > 0
                ? super.requestAsyncId(t, e, i)
                : (t.actions.push(this),
                  t._scheduled ||
                    (t._scheduled = _l.setImmediate(t.flush.bind(t, void 0))));
            }
            recycleAsyncId(t, e, i = 0) {
              var r;
              if (null != i ? i > 0 : this.delay > 0)
                return super.recycleAsyncId(t, e, i);
              const { actions: o } = t;
              null != e &&
                (null === (r = o[o.length - 1]) || void 0 === r
                  ? void 0
                  : r.id) !== e &&
                (_l.clearImmediate(e),
                t._scheduled === e && (t._scheduled = void 0));
            }
          }
        ),
        bl = new Vh(Lh),
        JP = bl;
      function GD(n = 0, t, e = JP) {
        let i = -1;
        return (
          null != t && (cm(t) ? (e = t) : (i = t)),
          new De((r) => {
            let o = (function tN(n) {
              return n instanceof Date && !isNaN(n);
            })(n)
              ? +n - e.now()
              : n;
            o < 0 && (o = 0);
            let s = 0;
            return e.schedule(function () {
              r.closed ||
                (r.next(s++), 0 <= i ? this.schedule(void 0, i) : r.complete());
            }, o);
          })
        );
      }
      function Hh(n, t = bl) {
        return (function eN(n) {
          return dt((t, e) => {
            let i = !1,
              r = null,
              o = null,
              s = !1;
            const a = () => {
                if ((o?.unsubscribe(), (o = null), i)) {
                  i = !1;
                  const c = r;
                  (r = null), e.next(c);
                }
                s && e.complete();
              },
              l = () => {
                (o = null), s && e.complete();
              };
            t.subscribe(
              Qe(
                e,
                (c) => {
                  (i = !0), (r = c), o || St(n(c)).subscribe((o = Qe(e, a, l)));
                },
                () => {
                  (s = !0), (!i || !o || o.closed) && e.complete();
                }
              )
            );
          });
        })(() => GD(n, t));
      }
      function On(n, t) {
        return dt((e, i) => {
          let r = 0;
          e.subscribe(Qe(i, (o) => n.call(t, o, r++) && i.next(o)));
        });
      }
      function ge(n) {
        return dt((t, e) => {
          St(n).subscribe(Qe(e, () => e.complete(), Sc)),
            !e.closed && t.subscribe(e);
        });
      }
      function jh(...n) {
        return (function nN() {
          return lm(1);
        })()(Ai(n, ho(n)));
      }
      function ni(...n) {
        const t = ho(n);
        return dt((e, i) => {
          (t ? jh(n, e, t) : jh(n, e)).subscribe(i);
        });
      }
      let zh;
      try {
        zh = typeof Intl < "u" && Intl.v8BreakIterator;
      } catch {
        zh = !1;
      }
      let Zr,
        it = (() => {
          class n {
            constructor(e) {
              (this._platformId = e),
                (this.isBrowser = this._platformId
                  ? (function IF(n) {
                      return n === mD;
                    })(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !zh) &&
                  typeof CSS < "u" &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(qu));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      const WD = [
        "color",
        "button",
        "checkbox",
        "date",
        "datetime-local",
        "email",
        "file",
        "hidden",
        "image",
        "month",
        "number",
        "password",
        "radio",
        "range",
        "reset",
        "search",
        "submit",
        "tel",
        "text",
        "time",
        "url",
        "week",
      ];
      function qD() {
        if (Zr) return Zr;
        if ("object" != typeof document || !document)
          return (Zr = new Set(WD)), Zr;
        let n = document.createElement("input");
        return (
          (Zr = new Set(
            WD.filter((t) => (n.setAttribute("type", t), n.type === t))
          )),
          Zr
        );
      }
      let ds, yl, Yi, $h;
      function ii(n) {
        return (function iN() {
          if (null == ds && typeof window < "u")
            try {
              window.addEventListener(
                "test",
                null,
                Object.defineProperty({}, "passive", { get: () => (ds = !0) })
              );
            } finally {
              ds = ds || !1;
            }
          return ds;
        })()
          ? n
          : !!n.capture;
      }
      function YD() {
        if (null == Yi) {
          if (
            "object" != typeof document ||
            !document ||
            "function" != typeof Element ||
            !Element
          )
            return (Yi = !1), Yi;
          if ("scrollBehavior" in document.documentElement.style) Yi = !0;
          else {
            const n = Element.prototype.scrollTo;
            Yi = !!n && !/\{\s*\[native code\]\s*\}/.test(n.toString());
          }
        }
        return Yi;
      }
      function us() {
        if ("object" != typeof document || !document) return 0;
        if (null == yl) {
          const n = document.createElement("div"),
            t = n.style;
          (n.dir = "rtl"),
            (t.width = "1px"),
            (t.overflow = "auto"),
            (t.visibility = "hidden"),
            (t.pointerEvents = "none"),
            (t.position = "absolute");
          const e = document.createElement("div"),
            i = e.style;
          (i.width = "2px"),
            (i.height = "1px"),
            n.appendChild(e),
            document.body.appendChild(n),
            (yl = 0),
            0 === n.scrollLeft &&
              ((n.scrollLeft = 1), (yl = 0 === n.scrollLeft ? 1 : 2)),
            n.remove();
        }
        return yl;
      }
      function Uh(n) {
        if (
          (function rN() {
            if (null == $h) {
              const n = typeof document < "u" ? document.head : null;
              $h = !(!n || (!n.createShadowRoot && !n.attachShadow));
            }
            return $h;
          })()
        ) {
          const t = n.getRootNode ? n.getRootNode() : null;
          if (typeof ShadowRoot < "u" && ShadowRoot && t instanceof ShadowRoot)
            return t;
        }
        return null;
      }
      function Gh() {
        let n =
          typeof document < "u" && document ? document.activeElement : null;
        for (; n && n.shadowRoot; ) {
          const t = n.shadowRoot.activeElement;
          if (t === n) break;
          n = t;
        }
        return n;
      }
      function rn(n) {
        return n.composedPath ? n.composedPath()[0] : n.target;
      }
      function Wh() {
        return (
          (typeof __karma__ < "u" && !!__karma__) ||
          (typeof jasmine < "u" && !!jasmine) ||
          (typeof jest < "u" && !!jest) ||
          (typeof Mocha < "u" && !!Mocha)
        );
      }
      const oN = new C("cdk-dir-doc", {
          providedIn: "root",
          factory: function sN() {
            return vn(ne);
          },
        }),
        aN =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let Ut = (() => {
          class n {
            constructor(e) {
              (this.value = "ltr"),
                (this.change = new Q()),
                e &&
                  (this.value = (function lN(n) {
                    const t = n?.toLowerCase() || "";
                    return "auto" === t &&
                      typeof navigator < "u" &&
                      navigator?.language
                      ? aN.test(navigator.language)
                        ? "rtl"
                        : "ltr"
                      : "rtl" === t
                      ? "rtl"
                      : "ltr";
                  })(
                    (e.body ? e.body.dir : null) ||
                      (e.documentElement ? e.documentElement.dir : null) ||
                      "ltr"
                  ));
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(oN, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        hs = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({})),
            n
          );
        })();
      const cN = ["contentWrapper"],
        dN = ["*"],
        uN = new C("VIRTUAL_SCROLL_STRATEGY");
      let Xr = (() => {
          class n {
            constructor(e, i, r) {
              (this._ngZone = e),
                (this._platform = i),
                (this._scrolled = new A()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = r);
            }
            register(e) {
              this.scrollContainers.has(e) ||
                this.scrollContainers.set(
                  e,
                  e.elementScrolled().subscribe(() => this._scrolled.next(e))
                );
            }
            deregister(e) {
              const i = this.scrollContainers.get(e);
              i && (i.unsubscribe(), this.scrollContainers.delete(e));
            }
            scrolled(e = 20) {
              return this._platform.isBrowser
                ? new De((i) => {
                    this._globalSubscription || this._addGlobalListener();
                    const r =
                      e > 0
                        ? this._scrolled.pipe(Hh(e)).subscribe(i)
                        : this._scrolled.subscribe(i);
                    return (
                      this._scrolledCount++,
                      () => {
                        r.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : qi();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((e, i) => this.deregister(i)),
                this._scrolled.complete();
            }
            ancestorScrolled(e, i) {
              const r = this.getAncestorScrollContainers(e);
              return this.scrolled(i).pipe(On((o) => !o || r.indexOf(o) > -1));
            }
            getAncestorScrollContainers(e) {
              const i = [];
              return (
                this.scrollContainers.forEach((r, o) => {
                  this._scrollableContainsElement(o, e) && i.push(o);
                }),
                i
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(e, i) {
              let r = je(i),
                o = e.getElementRef().nativeElement;
              do {
                if (r == o) return !0;
              } while ((r = r.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                pl(this._getWindow().document, "scroll").subscribe(() =>
                  this._scrolled.next()
                )
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(V), b(it), b(ne, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        KD = (() => {
          class n {
            constructor(e, i, r, o) {
              (this.elementRef = e),
                (this.scrollDispatcher = i),
                (this.ngZone = r),
                (this.dir = o),
                (this._destroyed = new A()),
                (this._elementScrolled = new De((s) =>
                  this.ngZone.runOutsideAngular(() =>
                    pl(this.elementRef.nativeElement, "scroll")
                      .pipe(ge(this._destroyed))
                      .subscribe(s)
                  )
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(e) {
              const i = this.elementRef.nativeElement,
                r = this.dir && "rtl" == this.dir.value;
              null == e.left && (e.left = r ? e.end : e.start),
                null == e.right && (e.right = r ? e.start : e.end),
                null != e.bottom &&
                  (e.top = i.scrollHeight - i.clientHeight - e.bottom),
                r && 0 != us()
                  ? (null != e.left &&
                      (e.right = i.scrollWidth - i.clientWidth - e.left),
                    2 == us()
                      ? (e.left = e.right)
                      : 1 == us() && (e.left = e.right ? -e.right : e.right))
                  : null != e.right &&
                    (e.left = i.scrollWidth - i.clientWidth - e.right),
                this._applyScrollToOptions(e);
            }
            _applyScrollToOptions(e) {
              const i = this.elementRef.nativeElement;
              YD()
                ? i.scrollTo(e)
                : (null != e.top && (i.scrollTop = e.top),
                  null != e.left && (i.scrollLeft = e.left));
            }
            measureScrollOffset(e) {
              const i = "left",
                r = "right",
                o = this.elementRef.nativeElement;
              if ("top" == e) return o.scrollTop;
              if ("bottom" == e)
                return o.scrollHeight - o.clientHeight - o.scrollTop;
              const s = this.dir && "rtl" == this.dir.value;
              return (
                "start" == e ? (e = s ? r : i) : "end" == e && (e = s ? i : r),
                s && 2 == us()
                  ? e == i
                    ? o.scrollWidth - o.clientWidth - o.scrollLeft
                    : o.scrollLeft
                  : s && 1 == us()
                  ? e == i
                    ? o.scrollLeft + o.scrollWidth - o.clientWidth
                    : -o.scrollLeft
                  : e == i
                  ? o.scrollLeft
                  : o.scrollWidth - o.clientWidth - o.scrollLeft
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(U), p(Xr), p(V), p(Ut, 8));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [
                ["", "cdk-scrollable", ""],
                ["", "cdkScrollable", ""],
              ],
              standalone: !0,
            })),
            n
          );
        })(),
        Qr = (() => {
          class n {
            constructor(e, i, r) {
              (this._platform = e),
                (this._change = new A()),
                (this._changeListener = (o) => {
                  this._change.next(o);
                }),
                (this._document = r),
                i.runOutsideAngular(() => {
                  if (e.isBrowser) {
                    const o = this._getWindow();
                    o.addEventListener("resize", this._changeListener),
                      o.addEventListener(
                        "orientationchange",
                        this._changeListener
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const e = this._getWindow();
                e.removeEventListener("resize", this._changeListener),
                  e.removeEventListener(
                    "orientationchange",
                    this._changeListener
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const e = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), e;
            }
            getViewportRect() {
              const e = this.getViewportScrollPosition(),
                { width: i, height: r } = this.getViewportSize();
              return {
                top: e.top,
                left: e.left,
                bottom: e.top + r,
                right: e.left + i,
                height: r,
                width: i,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const e = this._document,
                i = this._getWindow(),
                r = e.documentElement,
                o = r.getBoundingClientRect();
              return {
                top:
                  -o.top || e.body.scrollTop || i.scrollY || r.scrollTop || 0,
                left:
                  -o.left ||
                  e.body.scrollLeft ||
                  i.scrollX ||
                  r.scrollLeft ||
                  0,
              };
            }
            change(e = 20) {
              return e > 0 ? this._change.pipe(Hh(e)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const e = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: e.innerWidth, height: e.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(it), b(V), b(ne, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      const ZD = new C("VIRTUAL_SCROLLABLE");
      let pN = (() => {
        class n extends KD {
          constructor(e, i, r, o) {
            super(e, i, r, o);
          }
          measureViewportSize(e) {
            const i = this.elementRef.nativeElement;
            return "horizontal" === e ? i.clientWidth : i.clientHeight;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(p(U), p(Xr), p(V), p(Ut, 8));
          }),
          (n.ɵdir = x({ type: n, features: [T] })),
          n
        );
      })();
      const gN = typeof requestAnimationFrame < "u" ? $D : QP;
      let _N = (() => {
          class n extends pN {
            get orientation() {
              return this._orientation;
            }
            set orientation(e) {
              this._orientation !== e &&
                ((this._orientation = e), this._calculateSpacerSize());
            }
            get appendOnly() {
              return this._appendOnly;
            }
            set appendOnly(e) {
              this._appendOnly = ae(e);
            }
            constructor(e, i, r, o, s, a, l, c) {
              super(e, a, r, s),
                (this.elementRef = e),
                (this._changeDetectorRef = i),
                (this._scrollStrategy = o),
                (this.scrollable = c),
                (this._platform = vn(it)),
                (this._detachedSubject = new A()),
                (this._renderedRangeSubject = new A()),
                (this._orientation = "vertical"),
                (this._appendOnly = !1),
                (this.scrolledIndexChange = new De((d) =>
                  this._scrollStrategy.scrolledIndexChange.subscribe((u) =>
                    Promise.resolve().then(() =>
                      this.ngZone.run(() => d.next(u))
                    )
                  )
                )),
                (this.renderedRangeStream = this._renderedRangeSubject),
                (this._totalContentSize = 0),
                (this._totalContentWidth = ""),
                (this._totalContentHeight = ""),
                (this._renderedRange = { start: 0, end: 0 }),
                (this._dataLength = 0),
                (this._viewportSize = 0),
                (this._renderedContentOffset = 0),
                (this._renderedContentOffsetNeedsRewrite = !1),
                (this._isChangeDetectionPending = !1),
                (this._runAfterChangeDetection = []),
                (this._viewportChanges = xe.EMPTY),
                (this._viewportChanges = l.change().subscribe(() => {
                  this.checkViewportSize();
                })),
                this.scrollable ||
                  (this.elementRef.nativeElement.classList.add(
                    "cdk-virtual-scrollable"
                  ),
                  (this.scrollable = this));
            }
            ngOnInit() {
              this._platform.isBrowser &&
                (this.scrollable === this && super.ngOnInit(),
                this.ngZone.runOutsideAngular(() =>
                  Promise.resolve().then(() => {
                    this._measureViewportSize(),
                      this._scrollStrategy.attach(this),
                      this.scrollable
                        .elementScrolled()
                        .pipe(ni(null), Hh(0, gN))
                        .subscribe(() =>
                          this._scrollStrategy.onContentScrolled()
                        ),
                      this._markChangeDetectionNeeded();
                  })
                ));
            }
            ngOnDestroy() {
              this.detach(),
                this._scrollStrategy.detach(),
                this._renderedRangeSubject.complete(),
                this._detachedSubject.complete(),
                this._viewportChanges.unsubscribe(),
                super.ngOnDestroy();
            }
            attach(e) {
              this.ngZone.runOutsideAngular(() => {
                (this._forOf = e),
                  this._forOf.dataStream
                    .pipe(ge(this._detachedSubject))
                    .subscribe((i) => {
                      const r = i.length;
                      r !== this._dataLength &&
                        ((this._dataLength = r),
                        this._scrollStrategy.onDataLengthChanged()),
                        this._doChangeDetection();
                    });
              });
            }
            detach() {
              (this._forOf = null), this._detachedSubject.next();
            }
            getDataLength() {
              return this._dataLength;
            }
            getViewportSize() {
              return this._viewportSize;
            }
            getRenderedRange() {
              return this._renderedRange;
            }
            measureBoundingClientRectWithScrollOffset(e) {
              return this.getElementRef().nativeElement.getBoundingClientRect()[
                e
              ];
            }
            setTotalContentSize(e) {
              this._totalContentSize !== e &&
                ((this._totalContentSize = e),
                this._calculateSpacerSize(),
                this._markChangeDetectionNeeded());
            }
            setRenderedRange(e) {
              (function mN(n, t) {
                return n.start == t.start && n.end == t.end;
              })(this._renderedRange, e) ||
                (this.appendOnly &&
                  (e = {
                    start: 0,
                    end: Math.max(this._renderedRange.end, e.end),
                  }),
                this._renderedRangeSubject.next((this._renderedRange = e)),
                this._markChangeDetectionNeeded(() =>
                  this._scrollStrategy.onContentRendered()
                ));
            }
            getOffsetToRenderedContentStart() {
              return this._renderedContentOffsetNeedsRewrite
                ? null
                : this._renderedContentOffset;
            }
            setRenderedContentOffset(e, i = "to-start") {
              e = this.appendOnly && "to-start" === i ? 0 : e;
              const o = "horizontal" == this.orientation,
                s = o ? "X" : "Y";
              let l = `translate${s}(${Number(
                (o && this.dir && "rtl" == this.dir.value ? -1 : 1) * e
              )}px)`;
              (this._renderedContentOffset = e),
                "to-end" === i &&
                  ((l += ` translate${s}(-100%)`),
                  (this._renderedContentOffsetNeedsRewrite = !0)),
                this._renderedContentTransform != l &&
                  ((this._renderedContentTransform = l),
                  this._markChangeDetectionNeeded(() => {
                    this._renderedContentOffsetNeedsRewrite
                      ? ((this._renderedContentOffset -=
                          this.measureRenderedContentSize()),
                        (this._renderedContentOffsetNeedsRewrite = !1),
                        this.setRenderedContentOffset(
                          this._renderedContentOffset
                        ))
                      : this._scrollStrategy.onRenderedOffsetChanged();
                  }));
            }
            scrollToOffset(e, i = "auto") {
              const r = { behavior: i };
              "horizontal" === this.orientation ? (r.start = e) : (r.top = e),
                this.scrollable.scrollTo(r);
            }
            scrollToIndex(e, i = "auto") {
              this._scrollStrategy.scrollToIndex(e, i);
            }
            measureScrollOffset(e) {
              let i;
              return (
                (i =
                  this.scrollable == this
                    ? (r) => super.measureScrollOffset(r)
                    : (r) => this.scrollable.measureScrollOffset(r)),
                Math.max(
                  0,
                  i(
                    e ?? ("horizontal" === this.orientation ? "start" : "top")
                  ) - this.measureViewportOffset()
                )
              );
            }
            measureViewportOffset(e) {
              let i;
              const r = "left",
                o = "right",
                s = "rtl" == this.dir?.value;
              i =
                "start" == e
                  ? s
                    ? o
                    : r
                  : "end" == e
                  ? s
                    ? r
                    : o
                  : e || ("horizontal" === this.orientation ? "left" : "top");
              const a =
                this.scrollable.measureBoundingClientRectWithScrollOffset(i);
              return (
                this.elementRef.nativeElement.getBoundingClientRect()[i] - a
              );
            }
            measureRenderedContentSize() {
              const e = this._contentWrapper.nativeElement;
              return "horizontal" === this.orientation
                ? e.offsetWidth
                : e.offsetHeight;
            }
            measureRangeSize(e) {
              return this._forOf
                ? this._forOf.measureRangeSize(e, this.orientation)
                : 0;
            }
            checkViewportSize() {
              this._measureViewportSize(),
                this._scrollStrategy.onDataLengthChanged();
            }
            _measureViewportSize() {
              this._viewportSize = this.scrollable.measureViewportSize(
                this.orientation
              );
            }
            _markChangeDetectionNeeded(e) {
              e && this._runAfterChangeDetection.push(e),
                this._isChangeDetectionPending ||
                  ((this._isChangeDetectionPending = !0),
                  this.ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => {
                      this._doChangeDetection();
                    })
                  ));
            }
            _doChangeDetection() {
              (this._isChangeDetectionPending = !1),
                (this._contentWrapper.nativeElement.style.transform =
                  this._renderedContentTransform),
                this.ngZone.run(() => this._changeDetectorRef.markForCheck());
              const e = this._runAfterChangeDetection;
              this._runAfterChangeDetection = [];
              for (const i of e) i();
            }
            _calculateSpacerSize() {
              (this._totalContentHeight =
                "horizontal" === this.orientation
                  ? ""
                  : `${this._totalContentSize}px`),
                (this._totalContentWidth =
                  "horizontal" === this.orientation
                    ? `${this._totalContentSize}px`
                    : "");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                p(U),
                p(zt),
                p(V),
                p(uN, 8),
                p(Ut, 8),
                p(Xr),
                p(Qr),
                p(ZD, 8)
              );
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["cdk-virtual-scroll-viewport"]],
              viewQuery: function (e, i) {
                if ((1 & e && Oe(cN, 7), 2 & e)) {
                  let r;
                  q((r = Y())) && (i._contentWrapper = r.first);
                }
              },
              hostAttrs: [1, "cdk-virtual-scroll-viewport"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  ke(
                    "cdk-virtual-scroll-orientation-horizontal",
                    "horizontal" === i.orientation
                  )(
                    "cdk-virtual-scroll-orientation-vertical",
                    "horizontal" !== i.orientation
                  );
              },
              inputs: { orientation: "orientation", appendOnly: "appendOnly" },
              outputs: { scrolledIndexChange: "scrolledIndexChange" },
              standalone: !0,
              features: [
                j([
                  {
                    provide: KD,
                    useFactory: (t, e) => t || e,
                    deps: [[new Pi(), new ga(ZD)], n],
                  },
                ]),
                T,
                Oy,
              ],
              ngContentSelectors: dN,
              decls: 4,
              vars: 4,
              consts: [
                [1, "cdk-virtual-scroll-content-wrapper"],
                ["contentWrapper", ""],
                [1, "cdk-virtual-scroll-spacer"],
              ],
              template: function (e, i) {
                1 & e && (Tn(), F(0, "div", 0, 1), Ve(2), N(), we(3, "div", 2)),
                  2 & e &&
                    (O(3),
                    Xn("width", i._totalContentWidth)(
                      "height",
                      i._totalContentHeight
                    ));
              },
              styles: [
                "cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        fs = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({})),
            n
          );
        })(),
        qh = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ imports: [hs, fs, _N, hs, fs] })),
            n
          );
        })();
      function Gt(n) {
        return n <= 0
          ? () => $s
          : dt((t, e) => {
              let i = 0;
              t.subscribe(
                Qe(e, (r) => {
                  ++i <= n && (e.next(r), n <= i && e.complete());
                })
              );
            });
      }
      class Yh {
        attach(t) {
          return (this._attachedHost = t), t.attach(this);
        }
        detach() {
          let t = this._attachedHost;
          null != t && ((this._attachedHost = null), t.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(t) {
          this._attachedHost = t;
        }
      }
      class vl extends Yh {
        constructor(t, e, i, r, o) {
          super(),
            (this.component = t),
            (this.viewContainerRef = e),
            (this.injector = i),
            (this.componentFactoryResolver = r),
            (this.projectableNodes = o);
        }
      }
      class Kh extends Yh {
        constructor(t, e, i, r) {
          super(),
            (this.templateRef = t),
            (this.viewContainerRef = e),
            (this.context = i),
            (this.injector = r);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(t, e = this.context) {
          return (this.context = e), super.attach(t);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class yN extends Yh {
        constructor(t) {
          super(), (this.element = t instanceof U ? t.nativeElement : t);
        }
      }
      class Zh {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(t) {
          return t instanceof vl
            ? ((this._attachedPortal = t), this.attachComponentPortal(t))
            : t instanceof Kh
            ? ((this._attachedPortal = t), this.attachTemplatePortal(t))
            : this.attachDomPortal && t instanceof yN
            ? ((this._attachedPortal = t), this.attachDomPortal(t))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(t) {
          this._disposeFn = t;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class vN extends Zh {
        constructor(t, e, i, r, o) {
          super(),
            (this.outletElement = t),
            (this._componentFactoryResolver = e),
            (this._appRef = i),
            (this._defaultInjector = r),
            (this.attachDomPortal = (s) => {
              const a = s.element,
                l = this._document.createComment("dom-portal");
              a.parentNode.insertBefore(l, a),
                this.outletElement.appendChild(a),
                (this._attachedPortal = s),
                super.setDisposeFn(() => {
                  l.parentNode && l.parentNode.replaceChild(a, l);
                });
            }),
            (this._document = o);
        }
        attachComponentPortal(t) {
          const i = (
            t.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(t.component);
          let r;
          return (
            t.viewContainerRef
              ? ((r = t.viewContainerRef.createComponent(
                  i,
                  t.viewContainerRef.length,
                  t.injector || t.viewContainerRef.injector,
                  t.projectableNodes || void 0
                )),
                this.setDisposeFn(() => r.destroy()))
              : ((r = i.create(t.injector || this._defaultInjector || kt.NULL)),
                this._appRef.attachView(r.hostView),
                this.setDisposeFn(() => {
                  this._appRef.viewCount > 0 &&
                    this._appRef.detachView(r.hostView),
                    r.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(r)),
            (this._attachedPortal = t),
            r
          );
        }
        attachTemplatePortal(t) {
          let e = t.viewContainerRef,
            i = e.createEmbeddedView(t.templateRef, t.context, {
              injector: t.injector,
            });
          return (
            i.rootNodes.forEach((r) => this.outletElement.appendChild(r)),
            i.detectChanges(),
            this.setDisposeFn(() => {
              let r = e.indexOf(i);
              -1 !== r && e.remove(r);
            }),
            (this._attachedPortal = t),
            i
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(t) {
          return t.hostView.rootNodes[0];
        }
      }
      let Xh = (() => {
          class n extends Zh {
            constructor(e, i, r) {
              super(),
                (this._componentFactoryResolver = e),
                (this._viewContainerRef = i),
                (this._isInitialized = !1),
                (this.attached = new Q()),
                (this.attachDomPortal = (o) => {
                  const s = o.element,
                    a = this._document.createComment("dom-portal");
                  o.setAttachedHost(this),
                    s.parentNode.insertBefore(a, s),
                    this._getRootNode().appendChild(s),
                    (this._attachedPortal = o),
                    super.setDisposeFn(() => {
                      a.parentNode && a.parentNode.replaceChild(s, a);
                    });
                }),
                (this._document = r);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(e) {
              (this.hasAttached() && !e && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                e && super.attach(e),
                (this._attachedPortal = e || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedRef = this._attachedPortal = null);
            }
            attachComponentPortal(e) {
              e.setAttachedHost(this);
              const i =
                  null != e.viewContainerRef
                    ? e.viewContainerRef
                    : this._viewContainerRef,
                o = (
                  e.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(e.component),
                s = i.createComponent(
                  o,
                  i.length,
                  e.injector || i.injector,
                  e.projectableNodes || void 0
                );
              return (
                i !== this._viewContainerRef &&
                  this._getRootNode().appendChild(s.hostView.rootNodes[0]),
                super.setDisposeFn(() => s.destroy()),
                (this._attachedPortal = e),
                (this._attachedRef = s),
                this.attached.emit(s),
                s
              );
            }
            attachTemplatePortal(e) {
              e.setAttachedHost(this);
              const i = this._viewContainerRef.createEmbeddedView(
                e.templateRef,
                e.context,
                { injector: e.injector }
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = e),
                (this._attachedRef = i),
                this.attached.emit(i),
                i
              );
            }
            _getRootNode() {
              const e = this._viewContainerRef.element.nativeElement;
              return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(Er), p(tt), p(ne));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "cdkPortalOutlet", ""]],
              inputs: { portal: ["cdkPortalOutlet", "portal"] },
              outputs: { attached: "attached" },
              exportAs: ["cdkPortalOutlet"],
              features: [T],
            })),
            n
          );
        })(),
        Dl = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({})),
            n
          );
        })();
      function vi(n, ...t) {
        return t.length
          ? t.some((e) => n[e])
          : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey;
      }
      const ew = YD();
      class FN {
        constructor(t, e) {
          (this._viewportRuler = t),
            (this._previousHTMLStyles = { top: "", left: "" }),
            (this._isEnabled = !1),
            (this._document = e);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const t = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = t.style.left || ""),
              (this._previousHTMLStyles.top = t.style.top || ""),
              (t.style.left = Ze(-this._previousScrollPosition.left)),
              (t.style.top = Ze(-this._previousScrollPosition.top)),
              t.classList.add("cdk-global-scrollblock"),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const t = this._document.documentElement,
              i = t.style,
              r = this._document.body.style,
              o = i.scrollBehavior || "",
              s = r.scrollBehavior || "";
            (this._isEnabled = !1),
              (i.left = this._previousHTMLStyles.left),
              (i.top = this._previousHTMLStyles.top),
              t.classList.remove("cdk-global-scrollblock"),
              ew && (i.scrollBehavior = r.scrollBehavior = "auto"),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top
              ),
              ew && ((i.scrollBehavior = o), (r.scrollBehavior = s));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              "cdk-global-scrollblock"
            ) ||
            this._isEnabled
          )
            return !1;
          const e = this._document.body,
            i = this._viewportRuler.getViewportSize();
          return e.scrollHeight > i.height || e.scrollWidth > i.width;
        }
      }
      class PN {
        constructor(t, e, i, r) {
          (this._scrollDispatcher = t),
            (this._ngZone = e),
            (this._viewportRuler = i),
            (this._config = r),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          if (this._scrollSubscription) return;
          const t = this._scrollDispatcher
            .scrolled(0)
            .pipe(
              On(
                (e) =>
                  !e ||
                  !this._overlayRef.overlayElement.contains(
                    e.getElementRef().nativeElement
                  )
              )
            );
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = t.subscribe(() => {
                const e = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(e - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = t.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class tw {
        enable() {}
        disable() {}
        attach() {}
      }
      function ef(n, t) {
        return t.some(
          (e) =>
            n.bottom < e.top ||
            n.top > e.bottom ||
            n.right < e.left ||
            n.left > e.right
        );
      }
      function nw(n, t) {
        return t.some(
          (e) =>
            n.top < e.top ||
            n.bottom > e.bottom ||
            n.left < e.left ||
            n.right > e.right
        );
      }
      class NN {
        constructor(t, e, i, r) {
          (this._scrollDispatcher = t),
            (this._viewportRuler = e),
            (this._ngZone = i),
            (this._config = r),
            (this._scrollSubscription = null);
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const e =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: i, height: r } =
                      this._viewportRuler.getViewportSize();
                  ef(e, [
                    {
                      width: i,
                      height: r,
                      bottom: r,
                      right: i,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let LN = (() => {
        class n {
          constructor(e, i, r, o) {
            (this._scrollDispatcher = e),
              (this._viewportRuler = i),
              (this._ngZone = r),
              (this.noop = () => new tw()),
              (this.close = (s) =>
                new PN(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  s
                )),
              (this.block = () => new FN(this._viewportRuler, this._document)),
              (this.reposition = (s) =>
                new NN(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  s
                )),
              (this._document = o);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(Xr), b(Qr), b(V), b(ne));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      class tf {
        constructor(t) {
          if (
            ((this.scrollStrategy = new tw()),
            (this.panelClass = ""),
            (this.hasBackdrop = !1),
            (this.backdropClass = "cdk-overlay-dark-backdrop"),
            (this.disposeOnNavigation = !1),
            t)
          ) {
            const e = Object.keys(t);
            for (const i of e) void 0 !== t[i] && (this[i] = t[i]);
          }
        }
      }
      class VN {
        constructor(t, e) {
          (this.connectionPair = t), (this.scrollableViewProperties = e);
        }
      }
      let iw = (() => {
          class n {
            constructor(e) {
              (this._attachedOverlays = []), (this._document = e);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(e) {
              this.remove(e), this._attachedOverlays.push(e);
            }
            remove(e) {
              const i = this._attachedOverlays.indexOf(e);
              i > -1 && this._attachedOverlays.splice(i, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ne));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        BN = (() => {
          class n extends iw {
            constructor(e, i) {
              super(e),
                (this._ngZone = i),
                (this._keydownListener = (r) => {
                  const o = this._attachedOverlays;
                  for (let s = o.length - 1; s > -1; s--)
                    if (o[s]._keydownEvents.observers.length > 0) {
                      const a = o[s]._keydownEvents;
                      this._ngZone
                        ? this._ngZone.run(() => a.next(r))
                        : a.next(r);
                      break;
                    }
                });
            }
            add(e) {
              super.add(e),
                this._isAttached ||
                  (this._ngZone
                    ? this._ngZone.runOutsideAngular(() =>
                        this._document.body.addEventListener(
                          "keydown",
                          this._keydownListener
                        )
                      )
                    : this._document.body.addEventListener(
                        "keydown",
                        this._keydownListener
                      ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  "keydown",
                  this._keydownListener
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ne), b(V, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        HN = (() => {
          class n extends iw {
            constructor(e, i, r) {
              super(e),
                (this._platform = i),
                (this._ngZone = r),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = (o) => {
                  this._pointerDownEventTarget = rn(o);
                }),
                (this._clickListener = (o) => {
                  const s = rn(o),
                    a =
                      "click" === o.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : s;
                  this._pointerDownEventTarget = null;
                  const l = this._attachedOverlays.slice();
                  for (let c = l.length - 1; c > -1; c--) {
                    const d = l[c];
                    if (
                      d._outsidePointerEvents.observers.length < 1 ||
                      !d.hasAttached()
                    )
                      continue;
                    if (
                      d.overlayElement.contains(s) ||
                      d.overlayElement.contains(a)
                    )
                      break;
                    const u = d._outsidePointerEvents;
                    this._ngZone
                      ? this._ngZone.run(() => u.next(o))
                      : u.next(o);
                  }
                });
            }
            add(e) {
              if ((super.add(e), !this._isAttached)) {
                const i = this._document.body;
                this._ngZone
                  ? this._ngZone.runOutsideAngular(() =>
                      this._addEventListeners(i)
                    )
                  : this._addEventListeners(i),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = i.style.cursor),
                    (i.style.cursor = "pointer"),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const e = this._document.body;
                e.removeEventListener(
                  "pointerdown",
                  this._pointerDownListener,
                  !0
                ),
                  e.removeEventListener("click", this._clickListener, !0),
                  e.removeEventListener("auxclick", this._clickListener, !0),
                  e.removeEventListener("contextmenu", this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((e.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
            _addEventListeners(e) {
              e.addEventListener("pointerdown", this._pointerDownListener, !0),
                e.addEventListener("click", this._clickListener, !0),
                e.addEventListener("auxclick", this._clickListener, !0),
                e.addEventListener("contextmenu", this._clickListener, !0);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ne), b(it), b(V, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        El = (() => {
          class n {
            constructor(e, i) {
              (this._platform = i), (this._document = e);
            }
            ngOnDestroy() {
              this._containerElement?.remove();
            }
            getContainerElement() {
              return (
                this._containerElement || this._createContainer(),
                this._containerElement
              );
            }
            _createContainer() {
              const e = "cdk-overlay-container";
              if (this._platform.isBrowser || Wh()) {
                const r = this._document.querySelectorAll(
                  `.${e}[platform="server"], .${e}[platform="test"]`
                );
                for (let o = 0; o < r.length; o++) r[o].remove();
              }
              const i = this._document.createElement("div");
              i.classList.add(e),
                Wh()
                  ? i.setAttribute("platform", "test")
                  : this._platform.isBrowser ||
                    i.setAttribute("platform", "server"),
                this._document.body.appendChild(i),
                (this._containerElement = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ne), b(it));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      class ps {
        constructor(t, e, i, r, o, s, a, l, c, d = !1) {
          (this._portalOutlet = t),
            (this._host = e),
            (this._pane = i),
            (this._config = r),
            (this._ngZone = o),
            (this._keyboardDispatcher = s),
            (this._document = a),
            (this._location = l),
            (this._outsideClickDispatcher = c),
            (this._animationsDisabled = d),
            (this._backdropElement = null),
            (this._backdropClick = new A()),
            (this._attachments = new A()),
            (this._detachments = new A()),
            (this._locationChanges = xe.EMPTY),
            (this._backdropClickHandler = (u) => this._backdropClick.next(u)),
            (this._backdropTransitionendHandler = (u) => {
              this._disposeBackdrop(u.target);
            }),
            (this._keydownEvents = new A()),
            (this._outsidePointerEvents = new A()),
            r.scrollStrategy &&
              ((this._scrollStrategy = r.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = r.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(t) {
          !this._host.parentElement &&
            this._previousHostParent &&
            this._previousHostParent.appendChild(this._host);
          const e = this._portalOutlet.attach(t);
          return (
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe(Gt(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose()
              )),
            this._outsideClickDispatcher.add(this),
            "function" == typeof e?.onDestroy &&
              e.onDestroy(() => {
                this.hasAttached() &&
                  this._ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => this.detach())
                  );
              }),
            e
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const t = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            t
          );
        }
        dispose() {
          const t = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host?.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            t && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(t) {
          t !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = t),
            this.hasAttached() && (t.attach(this), this.updatePosition()));
        }
        updateSize(t) {
          (this._config = { ...this._config, ...t }), this._updateElementSize();
        }
        setDirection(t) {
          (this._config = { ...this._config, direction: t }),
            this._updateElementDirection();
        }
        addPanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !0);
        }
        removePanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !1);
        }
        getDirection() {
          const t = this._config.direction;
          return t ? ("string" == typeof t ? t : t.value) : "ltr";
        }
        updateScrollStrategy(t) {
          t !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = t),
            this.hasAttached() && (t.attach(this), t.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute("dir", this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const t = this._pane.style;
          (t.width = Ze(this._config.width)),
            (t.height = Ze(this._config.height)),
            (t.minWidth = Ze(this._config.minWidth)),
            (t.minHeight = Ze(this._config.minHeight)),
            (t.maxWidth = Ze(this._config.maxWidth)),
            (t.maxHeight = Ze(this._config.maxHeight));
        }
        _togglePointerEvents(t) {
          this._pane.style.pointerEvents = t ? "" : "none";
        }
        _attachBackdrop() {
          const t = "cdk-overlay-backdrop-showing";
          (this._backdropElement = this._document.createElement("div")),
            this._backdropElement.classList.add("cdk-overlay-backdrop"),
            this._animationsDisabled &&
              this._backdropElement.classList.add(
                "cdk-overlay-backdrop-noop-animation"
              ),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host
            ),
            this._backdropElement.addEventListener(
              "click",
              this._backdropClickHandler
            ),
            !this._animationsDisabled && typeof requestAnimationFrame < "u"
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(t);
                  });
                })
              : this._backdropElement.classList.add(t);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const t = this._backdropElement;
          if (t) {
            if (this._animationsDisabled) return void this._disposeBackdrop(t);
            t.classList.remove("cdk-overlay-backdrop-showing"),
              this._ngZone.runOutsideAngular(() => {
                t.addEventListener(
                  "transitionend",
                  this._backdropTransitionendHandler
                );
              }),
              (t.style.pointerEvents = "none"),
              (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
                setTimeout(() => {
                  this._disposeBackdrop(t);
                }, 500)
              ));
          }
        }
        _toggleClasses(t, e, i) {
          const r = as(e || []).filter((o) => !!o);
          r.length && (i ? t.classList.add(...r) : t.classList.remove(...r));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const t = this._ngZone.onStable
              .pipe(ge(Pt(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  t.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const t = this._scrollStrategy;
          t && (t.disable(), t.detach && t.detach());
        }
        _disposeBackdrop(t) {
          t &&
            (t.removeEventListener("click", this._backdropClickHandler),
            t.removeEventListener(
              "transitionend",
              this._backdropTransitionendHandler
            ),
            t.remove(),
            this._backdropElement === t && (this._backdropElement = null)),
            this._backdropTimeout &&
              (clearTimeout(this._backdropTimeout),
              (this._backdropTimeout = void 0));
        }
      }
      const rw = "cdk-overlay-connected-position-bounding-box",
        jN = /([A-Za-z%]+)$/;
      class zN {
        get positions() {
          return this._preferredPositions;
        }
        constructor(t, e, i, r, o) {
          (this._viewportRuler = e),
            (this._document = i),
            (this._platform = r),
            (this._overlayContainer = o),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new A()),
            (this._resizeSubscription = xe.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(t);
        }
        attach(t) {
          this._validatePositions(),
            t.hostElement.classList.add(rw),
            (this._overlayRef = t),
            (this._boundingBox = t.hostElement),
            (this._pane = t.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const t = this._originRect,
            e = this._overlayRect,
            i = this._viewportRect,
            r = this._containerRect,
            o = [];
          let s;
          for (let a of this._preferredPositions) {
            let l = this._getOriginPoint(t, r, a),
              c = this._getOverlayPoint(l, e, a),
              d = this._getOverlayFit(c, e, i, a);
            if (d.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(a, l);
            this._canFitWithFlexibleDimensions(d, c, i)
              ? o.push({
                  position: a,
                  origin: l,
                  overlayRect: e,
                  boundingBoxRect: this._calculateBoundingBoxRect(l, a),
                })
              : (!s || s.overlayFit.visibleArea < d.visibleArea) &&
                (s = {
                  overlayFit: d,
                  overlayPoint: c,
                  originPoint: l,
                  position: a,
                  overlayRect: e,
                });
          }
          if (o.length) {
            let a = null,
              l = -1;
            for (const c of o) {
              const d =
                c.boundingBoxRect.width *
                c.boundingBoxRect.height *
                (c.position.weight || 1);
              d > l && ((l = d), (a = c));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(a.position, a.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(s.position, s.originPoint)
            );
          this._applyPosition(s.position, s.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              Ki(this._boundingBox.style, {
                top: "",
                left: "",
                right: "",
                bottom: "",
                height: "",
                width: "",
                alignItems: "",
                justifyContent: "",
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(rw),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          const t = this._lastPosition;
          if (t) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const e = this._getOriginPoint(
              this._originRect,
              this._containerRect,
              t
            );
            this._applyPosition(t, e);
          } else this.apply();
        }
        withScrollableContainers(t) {
          return (this._scrollables = t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t),
            -1 === t.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(t) {
          return (this._viewportMargin = t), this;
        }
        withFlexibleDimensions(t = !0) {
          return (this._hasFlexibleDimensions = t), this;
        }
        withGrowAfterOpen(t = !0) {
          return (this._growAfterOpen = t), this;
        }
        withPush(t = !0) {
          return (this._canPush = t), this;
        }
        withLockedPosition(t = !0) {
          return (this._positionLocked = t), this;
        }
        setOrigin(t) {
          return (this._origin = t), this;
        }
        withDefaultOffsetX(t) {
          return (this._offsetX = t), this;
        }
        withDefaultOffsetY(t) {
          return (this._offsetY = t), this;
        }
        withTransformOriginOn(t) {
          return (this._transformOriginSelector = t), this;
        }
        _getOriginPoint(t, e, i) {
          let r, o;
          if ("center" == i.originX) r = t.left + t.width / 2;
          else {
            const s = this._isRtl() ? t.right : t.left,
              a = this._isRtl() ? t.left : t.right;
            r = "start" == i.originX ? s : a;
          }
          return (
            e.left < 0 && (r -= e.left),
            (o =
              "center" == i.originY
                ? t.top + t.height / 2
                : "top" == i.originY
                ? t.top
                : t.bottom),
            e.top < 0 && (o -= e.top),
            { x: r, y: o }
          );
        }
        _getOverlayPoint(t, e, i) {
          let r, o;
          return (
            (r =
              "center" == i.overlayX
                ? -e.width / 2
                : "start" === i.overlayX
                ? this._isRtl()
                  ? -e.width
                  : 0
                : this._isRtl()
                ? 0
                : -e.width),
            (o =
              "center" == i.overlayY
                ? -e.height / 2
                : "top" == i.overlayY
                ? 0
                : -e.height),
            { x: t.x + r, y: t.y + o }
          );
        }
        _getOverlayFit(t, e, i, r) {
          const o = sw(e);
          let { x: s, y: a } = t,
            l = this._getOffset(r, "x"),
            c = this._getOffset(r, "y");
          l && (s += l), c && (a += c);
          let h = 0 - a,
            f = a + o.height - i.height,
            m = this._subtractOverflows(o.width, 0 - s, s + o.width - i.width),
            g = this._subtractOverflows(o.height, h, f),
            _ = m * g;
          return {
            visibleArea: _,
            isCompletelyWithinViewport: o.width * o.height === _,
            fitsInViewportVertically: g === o.height,
            fitsInViewportHorizontally: m == o.width,
          };
        }
        _canFitWithFlexibleDimensions(t, e, i) {
          if (this._hasFlexibleDimensions) {
            const r = i.bottom - e.y,
              o = i.right - e.x,
              s = ow(this._overlayRef.getConfig().minHeight),
              a = ow(this._overlayRef.getConfig().minWidth);
            return (
              (t.fitsInViewportVertically || (null != s && s <= r)) &&
              (t.fitsInViewportHorizontally || (null != a && a <= o))
            );
          }
          return !1;
        }
        _pushOverlayOnScreen(t, e, i) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: t.x + this._previousPushAmount.x,
              y: t.y + this._previousPushAmount.y,
            };
          const r = sw(e),
            o = this._viewportRect,
            s = Math.max(t.x + r.width - o.width, 0),
            a = Math.max(t.y + r.height - o.height, 0),
            l = Math.max(o.top - i.top - t.y, 0),
            c = Math.max(o.left - i.left - t.x, 0);
          let d = 0,
            u = 0;
          return (
            (d =
              r.width <= o.width
                ? c || -s
                : t.x < this._viewportMargin
                ? o.left - i.left - t.x
                : 0),
            (u =
              r.height <= o.height
                ? l || -a
                : t.y < this._viewportMargin
                ? o.top - i.top - t.y
                : 0),
            (this._previousPushAmount = { x: d, y: u }),
            { x: t.x + d, y: t.y + u }
          );
        }
        _applyPosition(t, e) {
          if (
            (this._setTransformOrigin(t),
            this._setOverlayElementStyles(e, t),
            this._setBoundingBoxStyles(e, t),
            t.panelClass && this._addPanelClasses(t.panelClass),
            (this._lastPosition = t),
            this._positionChanges.observers.length)
          ) {
            const i = this._getScrollVisibility(),
              r = new VN(t, i);
            this._positionChanges.next(r);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(t) {
          if (!this._transformOriginSelector) return;
          const e = this._boundingBox.querySelectorAll(
            this._transformOriginSelector
          );
          let i,
            r = t.overlayY;
          i =
            "center" === t.overlayX
              ? "center"
              : this._isRtl()
              ? "start" === t.overlayX
                ? "right"
                : "left"
              : "start" === t.overlayX
              ? "left"
              : "right";
          for (let o = 0; o < e.length; o++)
            e[o].style.transformOrigin = `${i} ${r}`;
        }
        _calculateBoundingBoxRect(t, e) {
          const i = this._viewportRect,
            r = this._isRtl();
          let o, s, a, d, u, h;
          if ("top" === e.overlayY)
            (s = t.y), (o = i.height - s + this._viewportMargin);
          else if ("bottom" === e.overlayY)
            (a = i.height - t.y + 2 * this._viewportMargin),
              (o = i.height - a + this._viewportMargin);
          else {
            const f = Math.min(i.bottom - t.y + i.top, t.y),
              m = this._lastBoundingBoxSize.height;
            (o = 2 * f),
              (s = t.y - f),
              o > m &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (s = t.y - m / 2);
          }
          if (("end" === e.overlayX && !r) || ("start" === e.overlayX && r))
            (h = i.width - t.x + this._viewportMargin),
              (d = t.x - this._viewportMargin);
          else if (
            ("start" === e.overlayX && !r) ||
            ("end" === e.overlayX && r)
          )
            (u = t.x), (d = i.right - t.x);
          else {
            const f = Math.min(i.right - t.x + i.left, t.x),
              m = this._lastBoundingBoxSize.width;
            (d = 2 * f),
              (u = t.x - f),
              d > m &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (u = t.x - m / 2);
          }
          return { top: s, left: u, bottom: a, right: h, width: d, height: o };
        }
        _setBoundingBoxStyles(t, e) {
          const i = this._calculateBoundingBoxRect(t, e);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((i.height = Math.min(i.height, this._lastBoundingBoxSize.height)),
            (i.width = Math.min(i.width, this._lastBoundingBoxSize.width)));
          const r = {};
          if (this._hasExactPosition())
            (r.top = r.left = "0"),
              (r.bottom = r.right = r.maxHeight = r.maxWidth = ""),
              (r.width = r.height = "100%");
          else {
            const o = this._overlayRef.getConfig().maxHeight,
              s = this._overlayRef.getConfig().maxWidth;
            (r.height = Ze(i.height)),
              (r.top = Ze(i.top)),
              (r.bottom = Ze(i.bottom)),
              (r.width = Ze(i.width)),
              (r.left = Ze(i.left)),
              (r.right = Ze(i.right)),
              (r.alignItems =
                "center" === e.overlayX
                  ? "center"
                  : "end" === e.overlayX
                  ? "flex-end"
                  : "flex-start"),
              (r.justifyContent =
                "center" === e.overlayY
                  ? "center"
                  : "bottom" === e.overlayY
                  ? "flex-end"
                  : "flex-start"),
              o && (r.maxHeight = Ze(o)),
              s && (r.maxWidth = Ze(s));
          }
          (this._lastBoundingBoxSize = i), Ki(this._boundingBox.style, r);
        }
        _resetBoundingBoxStyles() {
          Ki(this._boundingBox.style, {
            top: "0",
            left: "0",
            right: "0",
            bottom: "0",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          });
        }
        _resetOverlayElementStyles() {
          Ki(this._pane.style, {
            top: "",
            left: "",
            bottom: "",
            right: "",
            position: "",
            transform: "",
          });
        }
        _setOverlayElementStyles(t, e) {
          const i = {},
            r = this._hasExactPosition(),
            o = this._hasFlexibleDimensions,
            s = this._overlayRef.getConfig();
          if (r) {
            const d = this._viewportRuler.getViewportScrollPosition();
            Ki(i, this._getExactOverlayY(e, t, d)),
              Ki(i, this._getExactOverlayX(e, t, d));
          } else i.position = "static";
          let a = "",
            l = this._getOffset(e, "x"),
            c = this._getOffset(e, "y");
          l && (a += `translateX(${l}px) `),
            c && (a += `translateY(${c}px)`),
            (i.transform = a.trim()),
            s.maxHeight &&
              (r ? (i.maxHeight = Ze(s.maxHeight)) : o && (i.maxHeight = "")),
            s.maxWidth &&
              (r ? (i.maxWidth = Ze(s.maxWidth)) : o && (i.maxWidth = "")),
            Ki(this._pane.style, i);
        }
        _getExactOverlayY(t, e, i) {
          let r = { top: "", bottom: "" },
            o = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed &&
              (o = this._pushOverlayOnScreen(o, this._overlayRect, i)),
            "bottom" === t.overlayY
              ? (r.bottom =
                  this._document.documentElement.clientHeight -
                  (o.y + this._overlayRect.height) +
                  "px")
              : (r.top = Ze(o.y)),
            r
          );
        }
        _getExactOverlayX(t, e, i) {
          let s,
            r = { left: "", right: "" },
            o = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed &&
              (o = this._pushOverlayOnScreen(o, this._overlayRect, i)),
            (s = this._isRtl()
              ? "end" === t.overlayX
                ? "left"
                : "right"
              : "end" === t.overlayX
              ? "right"
              : "left"),
            "right" === s
              ? (r.right =
                  this._document.documentElement.clientWidth -
                  (o.x + this._overlayRect.width) +
                  "px")
              : (r.left = Ze(o.x)),
            r
          );
        }
        _getScrollVisibility() {
          const t = this._getOriginRect(),
            e = this._pane.getBoundingClientRect(),
            i = this._scrollables.map((r) =>
              r.getElementRef().nativeElement.getBoundingClientRect()
            );
          return {
            isOriginClipped: nw(t, i),
            isOriginOutsideView: ef(t, i),
            isOverlayClipped: nw(e, i),
            isOverlayOutsideView: ef(e, i),
          };
        }
        _subtractOverflows(t, ...e) {
          return e.reduce((i, r) => i - Math.max(r, 0), t);
        }
        _getNarrowedViewportRect() {
          const t = this._document.documentElement.clientWidth,
            e = this._document.documentElement.clientHeight,
            i = this._viewportRuler.getViewportScrollPosition();
          return {
            top: i.top + this._viewportMargin,
            left: i.left + this._viewportMargin,
            right: i.left + t - this._viewportMargin,
            bottom: i.top + e - this._viewportMargin,
            width: t - 2 * this._viewportMargin,
            height: e - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(t, e) {
          return "x" === e
            ? null == t.offsetX
              ? this._offsetX
              : t.offsetX
            : null == t.offsetY
            ? this._offsetY
            : t.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(t) {
          this._pane &&
            as(t).forEach((e) => {
              "" !== e &&
                -1 === this._appliedPanelClasses.indexOf(e) &&
                (this._appliedPanelClasses.push(e),
                this._pane.classList.add(e));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((t) => {
              this._pane.classList.remove(t);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const t = this._origin;
          if (t instanceof U) return t.nativeElement.getBoundingClientRect();
          if (t instanceof Element) return t.getBoundingClientRect();
          const e = t.width || 0,
            i = t.height || 0;
          return {
            top: t.y,
            bottom: t.y + i,
            left: t.x,
            right: t.x + e,
            height: i,
            width: e,
          };
        }
      }
      function Ki(n, t) {
        for (let e in t) t.hasOwnProperty(e) && (n[e] = t[e]);
        return n;
      }
      function ow(n) {
        if ("number" != typeof n && null != n) {
          const [t, e] = n.split(jN);
          return e && "px" !== e ? null : parseFloat(t);
        }
        return n || null;
      }
      function sw(n) {
        return {
          top: Math.floor(n.top),
          right: Math.floor(n.right),
          bottom: Math.floor(n.bottom),
          left: Math.floor(n.left),
          width: Math.floor(n.width),
          height: Math.floor(n.height),
        };
      }
      const aw = "cdk-global-overlay-wrapper";
      class $N {
        constructor() {
          (this._cssPosition = "static"),
            (this._topOffset = ""),
            (this._bottomOffset = ""),
            (this._alignItems = ""),
            (this._xPosition = ""),
            (this._xOffset = ""),
            (this._width = ""),
            (this._height = ""),
            (this._isDisposed = !1);
        }
        attach(t) {
          const e = t.getConfig();
          (this._overlayRef = t),
            this._width && !e.width && t.updateSize({ width: this._width }),
            this._height && !e.height && t.updateSize({ height: this._height }),
            t.hostElement.classList.add(aw),
            (this._isDisposed = !1);
        }
        top(t = "") {
          return (
            (this._bottomOffset = ""),
            (this._topOffset = t),
            (this._alignItems = "flex-start"),
            this
          );
        }
        left(t = "") {
          return (this._xOffset = t), (this._xPosition = "left"), this;
        }
        bottom(t = "") {
          return (
            (this._topOffset = ""),
            (this._bottomOffset = t),
            (this._alignItems = "flex-end"),
            this
          );
        }
        right(t = "") {
          return (this._xOffset = t), (this._xPosition = "right"), this;
        }
        start(t = "") {
          return (this._xOffset = t), (this._xPosition = "start"), this;
        }
        end(t = "") {
          return (this._xOffset = t), (this._xPosition = "end"), this;
        }
        width(t = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: t })
              : (this._width = t),
            this
          );
        }
        height(t = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: t })
              : (this._height = t),
            this
          );
        }
        centerHorizontally(t = "") {
          return this.left(t), (this._xPosition = "center"), this;
        }
        centerVertically(t = "") {
          return this.top(t), (this._alignItems = "center"), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement.style,
            i = this._overlayRef.getConfig(),
            { width: r, height: o, maxWidth: s, maxHeight: a } = i,
            l = !(
              ("100%" !== r && "100vw" !== r) ||
              (s && "100%" !== s && "100vw" !== s)
            ),
            c = !(
              ("100%" !== o && "100vh" !== o) ||
              (a && "100%" !== a && "100vh" !== a)
            ),
            d = this._xPosition,
            u = this._xOffset,
            h = "rtl" === this._overlayRef.getConfig().direction;
          let f = "",
            m = "",
            g = "";
          l
            ? (g = "flex-start")
            : "center" === d
            ? ((g = "center"), h ? (m = u) : (f = u))
            : h
            ? "left" === d || "end" === d
              ? ((g = "flex-end"), (f = u))
              : ("right" === d || "start" === d) &&
                ((g = "flex-start"), (m = u))
            : "left" === d || "start" === d
            ? ((g = "flex-start"), (f = u))
            : ("right" === d || "end" === d) && ((g = "flex-end"), (m = u)),
            (t.position = this._cssPosition),
            (t.marginLeft = l ? "0" : f),
            (t.marginTop = c ? "0" : this._topOffset),
            (t.marginBottom = this._bottomOffset),
            (t.marginRight = l ? "0" : m),
            (e.justifyContent = g),
            (e.alignItems = c ? "flex-start" : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement,
            i = e.style;
          e.classList.remove(aw),
            (i.justifyContent =
              i.alignItems =
              t.marginTop =
              t.marginBottom =
              t.marginLeft =
              t.marginRight =
              t.position =
                ""),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let UN = (() => {
          class n {
            constructor(e, i, r, o) {
              (this._viewportRuler = e),
                (this._document = i),
                (this._platform = r),
                (this._overlayContainer = o);
            }
            global() {
              return new $N();
            }
            flexibleConnectedTo(e) {
              return new zN(
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(Qr), b(ne), b(it), b(El));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        GN = 0,
        Fn = (() => {
          class n {
            constructor(e, i, r, o, s, a, l, c, d, u, h, f) {
              (this.scrollStrategies = e),
                (this._overlayContainer = i),
                (this._componentFactoryResolver = r),
                (this._positionBuilder = o),
                (this._keyboardDispatcher = s),
                (this._injector = a),
                (this._ngZone = l),
                (this._document = c),
                (this._directionality = d),
                (this._location = u),
                (this._outsideClickDispatcher = h),
                (this._animationsModuleType = f);
            }
            create(e) {
              const i = this._createHostElement(),
                r = this._createPaneElement(i),
                o = this._createPortalOutlet(r),
                s = new tf(e);
              return (
                (s.direction = s.direction || this._directionality.value),
                new ps(
                  o,
                  i,
                  r,
                  s,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher,
                  "NoopAnimations" === this._animationsModuleType
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(e) {
              const i = this._document.createElement("div");
              return (
                (i.id = "cdk-overlay-" + GN++),
                i.classList.add("cdk-overlay-pane"),
                e.appendChild(i),
                i
              );
            }
            _createHostElement() {
              const e = this._document.createElement("div");
              return (
                this._overlayContainer.getContainerElement().appendChild(e), e
              );
            }
            _createPortalOutlet(e) {
              return (
                this._appRef || (this._appRef = this._injector.get(Qo)),
                new vN(
                  e,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document
                )
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                b(LN),
                b(El),
                b(Er),
                b(UN),
                b(BN),
                b(kt),
                b(V),
                b(ne),
                b(Ut),
                b(ch),
                b(HN),
                b(mn, 8)
              );
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      const WN = [
          {
            originX: "start",
            originY: "bottom",
            overlayX: "start",
            overlayY: "top",
          },
          {
            originX: "start",
            originY: "top",
            overlayX: "start",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "top",
            overlayX: "end",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "bottom",
            overlayX: "end",
            overlayY: "top",
          },
        ],
        lw = new C("cdk-connected-overlay-scroll-strategy");
      let nf = (() => {
          class n {
            constructor(e) {
              this.elementRef = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(U));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [
                ["", "cdk-overlay-origin", ""],
                ["", "overlay-origin", ""],
                ["", "cdkOverlayOrigin", ""],
              ],
              exportAs: ["cdkOverlayOrigin"],
              standalone: !0,
            })),
            n
          );
        })(),
        cw = (() => {
          class n {
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(e) {
              (this._offsetX = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(e) {
              (this._offsetY = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(e) {
              this._hasBackdrop = ae(e);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(e) {
              this._lockPosition = ae(e);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(e) {
              this._flexibleDimensions = ae(e);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(e) {
              this._growAfterOpen = ae(e);
            }
            get push() {
              return this._push;
            }
            set push(e) {
              this._push = ae(e);
            }
            constructor(e, i, r, o, s) {
              (this._overlay = e),
                (this._dir = s),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = xe.EMPTY),
                (this._attachSubscription = xe.EMPTY),
                (this._detachSubscription = xe.EMPTY),
                (this._positionSubscription = xe.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new Q()),
                (this.positionChange = new Q()),
                (this.attach = new Q()),
                (this.detach = new Q()),
                (this.overlayKeydown = new Q()),
                (this.overlayOutsideClick = new Q()),
                (this._templatePortal = new Kh(i, r)),
                (this._scrollStrategyFactory = o),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : "ltr";
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(e) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                e.origin && this.open && this._position.apply()),
                e.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (!this.positions || !this.positions.length) &&
                (this.positions = WN);
              const e = (this._overlayRef = this._overlay.create(
                this._buildConfig()
              ));
              (this._attachSubscription = e
                .attachments()
                .subscribe(() => this.attach.emit())),
                (this._detachSubscription = e
                  .detachments()
                  .subscribe(() => this.detach.emit())),
                e.keydownEvents().subscribe((i) => {
                  this.overlayKeydown.next(i),
                    27 === i.keyCode &&
                      !this.disableClose &&
                      !vi(i) &&
                      (i.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe((i) => {
                  this.overlayOutsideClick.next(i);
                });
            }
            _buildConfig() {
              const e = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                i = new tf({
                  direction: this._dir,
                  positionStrategy: e,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (i.width = this.width),
                (this.height || 0 === this.height) && (i.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (i.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (i.minHeight = this.minHeight),
                this.backdropClass && (i.backdropClass = this.backdropClass),
                this.panelClass && (i.panelClass = this.panelClass),
                i
              );
            }
            _updatePositionStrategy(e) {
              const i = this.positions.map((r) => ({
                originX: r.originX,
                originY: r.originY,
                overlayX: r.overlayX,
                overlayY: r.overlayY,
                offsetX: r.offsetX || this.offsetX,
                offsetY: r.offsetY || this.offsetY,
                panelClass: r.panelClass || void 0,
              }));
              return e
                .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())
                .withPositions(i)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const e = this._overlay
                .position()
                .flexibleConnectedTo(
                  this._getFlexibleConnectedPositionStrategyOrigin()
                );
              return this._updatePositionStrategy(e), e;
            }
            _getFlexibleConnectedPositionStrategyOrigin() {
              return this.origin instanceof nf
                ? this.origin.elementRef
                : this.origin;
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe((e) => {
                        this.backdropClick.emit(e);
                      }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(
                      (function bN(n, t = !1) {
                        return dt((e, i) => {
                          let r = 0;
                          e.subscribe(
                            Qe(i, (o) => {
                              const s = n(o, r++);
                              (s || t) && i.next(o), !s && i.complete();
                            })
                          );
                        });
                      })(() => this.positionChange.observers.length > 0)
                    )
                    .subscribe((e) => {
                      this.positionChange.emit(e),
                        0 === this.positionChange.observers.length &&
                          this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(Fn), p($e), p(tt), p(lw), p(Ut, 8));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [
                ["", "cdk-connected-overlay", ""],
                ["", "connected-overlay", ""],
                ["", "cdkConnectedOverlay", ""],
              ],
              inputs: {
                origin: ["cdkConnectedOverlayOrigin", "origin"],
                positions: ["cdkConnectedOverlayPositions", "positions"],
                positionStrategy: [
                  "cdkConnectedOverlayPositionStrategy",
                  "positionStrategy",
                ],
                offsetX: ["cdkConnectedOverlayOffsetX", "offsetX"],
                offsetY: ["cdkConnectedOverlayOffsetY", "offsetY"],
                width: ["cdkConnectedOverlayWidth", "width"],
                height: ["cdkConnectedOverlayHeight", "height"],
                minWidth: ["cdkConnectedOverlayMinWidth", "minWidth"],
                minHeight: ["cdkConnectedOverlayMinHeight", "minHeight"],
                backdropClass: [
                  "cdkConnectedOverlayBackdropClass",
                  "backdropClass",
                ],
                panelClass: ["cdkConnectedOverlayPanelClass", "panelClass"],
                viewportMargin: [
                  "cdkConnectedOverlayViewportMargin",
                  "viewportMargin",
                ],
                scrollStrategy: [
                  "cdkConnectedOverlayScrollStrategy",
                  "scrollStrategy",
                ],
                open: ["cdkConnectedOverlayOpen", "open"],
                disableClose: [
                  "cdkConnectedOverlayDisableClose",
                  "disableClose",
                ],
                transformOriginSelector: [
                  "cdkConnectedOverlayTransformOriginOn",
                  "transformOriginSelector",
                ],
                hasBackdrop: ["cdkConnectedOverlayHasBackdrop", "hasBackdrop"],
                lockPosition: [
                  "cdkConnectedOverlayLockPosition",
                  "lockPosition",
                ],
                flexibleDimensions: [
                  "cdkConnectedOverlayFlexibleDimensions",
                  "flexibleDimensions",
                ],
                growAfterOpen: [
                  "cdkConnectedOverlayGrowAfterOpen",
                  "growAfterOpen",
                ],
                push: ["cdkConnectedOverlayPush", "push"],
              },
              outputs: {
                backdropClick: "backdropClick",
                positionChange: "positionChange",
                attach: "attach",
                detach: "detach",
                overlayKeydown: "overlayKeydown",
                overlayOutsideClick: "overlayOutsideClick",
              },
              exportAs: ["cdkConnectedOverlay"],
              standalone: !0,
              features: [at],
            })),
            n
          );
        })();
      const YN = {
        provide: lw,
        deps: [Fn],
        useFactory: function qN(n) {
          return () => n.scrollStrategies.reposition();
        },
      };
      let Sl = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = le({ type: n })),
          (n.ɵinj = oe({ providers: [Fn, YN], imports: [hs, Dl, qh, qh] })),
          n
        );
      })();
      class ms extends A {
        constructor(t) {
          super(), (this._value = t);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(t) {
          const e = super._subscribe(t);
          return !e.closed && t.next(this._value), e;
        }
        getValue() {
          const { hasError: t, thrownError: e, _value: i } = this;
          if (t) throw e;
          return this._throwIfClosed(), i;
        }
        next(t) {
          super.next((this._value = t));
        }
      }
      function rf(n, t = bl) {
        return dt((e, i) => {
          let r = null,
            o = null,
            s = null;
          const a = () => {
            if (r) {
              r.unsubscribe(), (r = null);
              const c = o;
              (o = null), i.next(c);
            }
          };
          function l() {
            const c = s + n,
              d = t.now();
            if (d < c) return (r = this.schedule(void 0, c - d)), void i.add(r);
            a();
          }
          e.subscribe(
            Qe(
              i,
              (c) => {
                (o = c), (s = t.now()), r || ((r = t.schedule(l, n)), i.add(r));
              },
              () => {
                a(), i.complete();
              },
              void 0,
              () => {
                o = r = null;
              }
            )
          );
        });
      }
      function uw(n) {
        return On((t, e) => n <= e);
      }
      function hw(n, t = rr) {
        return (
          (n = n ?? KN),
          dt((e, i) => {
            let r,
              o = !0;
            e.subscribe(
              Qe(i, (s) => {
                const a = t(s);
                (o || !n(r, a)) && ((o = !1), (r = a), i.next(s));
              })
            );
          })
        );
      }
      function KN(n, t) {
        return n === t;
      }
      let fw = (() => {
          class n {
            create(e) {
              return typeof MutationObserver > "u"
                ? null
                : new MutationObserver(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        ZN = (() => {
          class n {
            constructor(e) {
              (this._mutationObserverFactory = e),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((e, i) =>
                this._cleanupObserver(i)
              );
            }
            observe(e) {
              const i = je(e);
              return new De((r) => {
                const s = this._observeElement(i).subscribe(r);
                return () => {
                  s.unsubscribe(), this._unobserveElement(i);
                };
              });
            }
            _observeElement(e) {
              if (this._observedElements.has(e))
                this._observedElements.get(e).count++;
              else {
                const i = new A(),
                  r = this._mutationObserverFactory.create((o) => i.next(o));
                r &&
                  r.observe(e, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(e, {
                    observer: r,
                    stream: i,
                    count: 1,
                  });
              }
              return this._observedElements.get(e).stream;
            }
            _unobserveElement(e) {
              this._observedElements.has(e) &&
                (this._observedElements.get(e).count--,
                this._observedElements.get(e).count ||
                  this._cleanupObserver(e));
            }
            _cleanupObserver(e) {
              if (this._observedElements.has(e)) {
                const { observer: i, stream: r } =
                  this._observedElements.get(e);
                i && i.disconnect(),
                  r.complete(),
                  this._observedElements.delete(e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(fw));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        XN = (() => {
          class n {
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = ae(e)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(e) {
              (this._debounce = $t(e)), this._subscribe();
            }
            constructor(e, i, r) {
              (this._contentObserver = e),
                (this._elementRef = i),
                (this._ngZone = r),
                (this.event = new Q()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const e = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (
                  this.debounce ? e.pipe(rf(this.debounce)) : e
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              this._currentSubscription?.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(ZN), p(U), p(V));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "cdkObserveContent", ""]],
              inputs: {
                disabled: ["cdkObserveContentDisabled", "disabled"],
                debounce: "debounce",
              },
              outputs: { event: "cdkObserveContent" },
              exportAs: ["cdkObserveContent"],
            })),
            n
          );
        })(),
        pw = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ providers: [fw] })),
            n
          );
        })();
      const { isArray: QN } = Array,
        { getPrototypeOf: JN, prototype: eL, keys: tL } = Object;
      function mw(n) {
        if (1 === n.length) {
          const t = n[0];
          if (QN(t)) return { args: t, keys: null };
          if (
            (function nL(n) {
              return n && "object" == typeof n && JN(n) === eL;
            })(t)
          ) {
            const e = tL(t);
            return { args: e.map((i) => t[i]), keys: e };
          }
        }
        return { args: n, keys: null };
      }
      function gw(n, t) {
        return n.reduce((e, i, r) => ((e[i] = t[r]), e), {});
      }
      function Ml(...n) {
        const t = ho(n),
          e = dm(n),
          { args: i, keys: r } = mw(n);
        if (0 === i.length) return Ai([], t);
        const o = new De(
          (function iL(n, t, e = rr) {
            return (i) => {
              _w(
                t,
                () => {
                  const { length: r } = n,
                    o = new Array(r);
                  let s = r,
                    a = r;
                  for (let l = 0; l < r; l++)
                    _w(
                      t,
                      () => {
                        const c = Ai(n[l], t);
                        let d = !1;
                        c.subscribe(
                          Qe(
                            i,
                            (u) => {
                              (o[l] = u),
                                d || ((d = !0), a--),
                                a || i.next(e(o.slice()));
                            },
                            () => {
                              --s || i.complete();
                            }
                          )
                        );
                      },
                      i
                    );
                },
                i
              );
            };
          })(i, t, r ? (s) => gw(r, s) : rr)
        );
        return e ? o.pipe(Nh(e)) : o;
      }
      function _w(n, t, e) {
        n ? Bn(e, n, t) : t();
      }
      const bw = new Set();
      let Jr,
        rL = (() => {
          class n {
            constructor(e) {
              (this._platform = e),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : sL);
            }
            matchMedia(e) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function oL(n) {
                    if (!bw.has(n))
                      try {
                        Jr ||
                          ((Jr = document.createElement("style")),
                          Jr.setAttribute("type", "text/css"),
                          document.head.appendChild(Jr)),
                          Jr.sheet &&
                            (Jr.sheet.insertRule(`@media ${n} {body{ }}`, 0),
                            bw.add(n));
                      } catch (t) {
                        console.error(t);
                      }
                  })(e),
                this._matchMedia(e)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(it));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      function sL(n) {
        return {
          matches: "all" === n || "" === n,
          media: n,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let aL = (() => {
        class n {
          constructor(e, i) {
            (this._mediaMatcher = e),
              (this._zone = i),
              (this._queries = new Map()),
              (this._destroySubject = new A());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(e) {
            return yw(as(e)).some((r) => this._registerQuery(r).mql.matches);
          }
          observe(e) {
            let o = Ml(yw(as(e)).map((s) => this._registerQuery(s).observable));
            return (
              (o = jh(o.pipe(Gt(1)), o.pipe(uw(1), rf(0)))),
              o.pipe(
                Kt((s) => {
                  const a = { matches: !1, breakpoints: {} };
                  return (
                    s.forEach(({ matches: l, query: c }) => {
                      (a.matches = a.matches || l), (a.breakpoints[c] = l);
                    }),
                    a
                  );
                })
              )
            );
          }
          _registerQuery(e) {
            if (this._queries.has(e)) return this._queries.get(e);
            const i = this._mediaMatcher.matchMedia(e),
              o = {
                observable: new De((s) => {
                  const a = (l) => this._zone.run(() => s.next(l));
                  return (
                    i.addListener(a),
                    () => {
                      i.removeListener(a);
                    }
                  );
                }).pipe(
                  ni(i),
                  Kt(({ matches: s }) => ({ query: e, matches: s })),
                  ge(this._destroySubject)
                ),
                mql: i,
              };
            return this._queries.set(e, o), o;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(rL), b(V));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function yw(n) {
        return n
          .map((t) => t.split(","))
          .reduce((t, e) => t.concat(e))
          .map((t) => t.trim());
      }
      function Tl(n, t) {
        return (n.getAttribute(t) || "").match(/\S+/g) || [];
      }
      const Dw = "cdk-describedby-message",
        Al = "cdk-describedby-host";
      let sf = 0,
        ww = (() => {
          class n {
            constructor(e, i) {
              (this._platform = i),
                (this._messageRegistry = new Map()),
                (this._messagesContainer = null),
                (this._id = "" + sf++),
                (this._document = e),
                (this._id = vn(Kr) + "-" + sf++);
            }
            describe(e, i, r) {
              if (!this._canBeDescribed(e, i)) return;
              const o = af(i, r);
              "string" != typeof i
                ? (xw(i, this._id),
                  this._messageRegistry.set(o, {
                    messageElement: i,
                    referenceCount: 0,
                  }))
                : this._messageRegistry.has(o) ||
                  this._createMessageElement(i, r),
                this._isElementDescribedByMessage(e, o) ||
                  this._addMessageReference(e, o);
            }
            removeDescription(e, i, r) {
              if (!i || !this._isElementNode(e)) return;
              const o = af(i, r);
              if (
                (this._isElementDescribedByMessage(e, o) &&
                  this._removeMessageReference(e, o),
                "string" == typeof i)
              ) {
                const s = this._messageRegistry.get(o);
                s && 0 === s.referenceCount && this._deleteMessageElement(o);
              }
              0 === this._messagesContainer?.childNodes.length &&
                (this._messagesContainer.remove(),
                (this._messagesContainer = null));
            }
            ngOnDestroy() {
              const e = this._document.querySelectorAll(
                `[${Al}="${this._id}"]`
              );
              for (let i = 0; i < e.length; i++)
                this._removeCdkDescribedByReferenceIds(e[i]),
                  e[i].removeAttribute(Al);
              this._messagesContainer?.remove(),
                (this._messagesContainer = null),
                this._messageRegistry.clear();
            }
            _createMessageElement(e, i) {
              const r = this._document.createElement("div");
              xw(r, this._id),
                (r.textContent = e),
                i && r.setAttribute("role", i),
                this._createMessagesContainer(),
                this._messagesContainer.appendChild(r),
                this._messageRegistry.set(af(e, i), {
                  messageElement: r,
                  referenceCount: 0,
                });
            }
            _deleteMessageElement(e) {
              this._messageRegistry.get(e)?.messageElement?.remove(),
                this._messageRegistry.delete(e);
            }
            _createMessagesContainer() {
              if (this._messagesContainer) return;
              const e = "cdk-describedby-message-container",
                i = this._document.querySelectorAll(`.${e}[platform="server"]`);
              for (let o = 0; o < i.length; o++) i[o].remove();
              const r = this._document.createElement("div");
              (r.style.visibility = "hidden"),
                r.classList.add(e),
                r.classList.add("cdk-visually-hidden"),
                this._platform &&
                  !this._platform.isBrowser &&
                  r.setAttribute("platform", "server"),
                this._document.body.appendChild(r),
                (this._messagesContainer = r);
            }
            _removeCdkDescribedByReferenceIds(e) {
              const i = Tl(e, "aria-describedby").filter(
                (r) => 0 != r.indexOf(Dw)
              );
              e.setAttribute("aria-describedby", i.join(" "));
            }
            _addMessageReference(e, i) {
              const r = this._messageRegistry.get(i);
              (function lL(n, t, e) {
                const i = Tl(n, t);
                i.some((r) => r.trim() == e.trim()) ||
                  (i.push(e.trim()), n.setAttribute(t, i.join(" ")));
              })(e, "aria-describedby", r.messageElement.id),
                e.setAttribute(Al, this._id),
                r.referenceCount++;
            }
            _removeMessageReference(e, i) {
              const r = this._messageRegistry.get(i);
              r.referenceCount--,
                (function cL(n, t, e) {
                  const r = Tl(n, t).filter((o) => o != e.trim());
                  r.length
                    ? n.setAttribute(t, r.join(" "))
                    : n.removeAttribute(t);
                })(e, "aria-describedby", r.messageElement.id),
                e.removeAttribute(Al);
            }
            _isElementDescribedByMessage(e, i) {
              const r = Tl(e, "aria-describedby"),
                o = this._messageRegistry.get(i),
                s = o && o.messageElement.id;
              return !!s && -1 != r.indexOf(s);
            }
            _canBeDescribed(e, i) {
              if (!this._isElementNode(e)) return !1;
              if (i && "object" == typeof i) return !0;
              const r = null == i ? "" : `${i}`.trim(),
                o = e.getAttribute("aria-label");
              return !(!r || (o && o.trim() === r));
            }
            _isElementNode(e) {
              return e.nodeType === this._document.ELEMENT_NODE;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ne), b(it));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      function af(n, t) {
        return "string" == typeof n ? `${t || ""}/${n}` : n;
      }
      function xw(n, t) {
        n.id || (n.id = `${Dw}-${t}-${sf++}`);
      }
      class dL {
        constructor(t) {
          (this._items = t),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new A()),
            (this._typeaheadSubscription = xe.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._pageUpAndDown = { enabled: !1, delta: 10 }),
            (this._skipPredicateFn = (e) => e.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new A()),
            (this.change = new A()),
            t instanceof Zo &&
              (this._itemChangesSubscription = t.changes.subscribe((e) => {
                if (this._activeItem) {
                  const r = e.toArray().indexOf(this._activeItem);
                  r > -1 &&
                    r !== this._activeItemIndex &&
                    (this._activeItemIndex = r);
                }
              }));
        }
        skipPredicate(t) {
          return (this._skipPredicateFn = t), this;
        }
        withWrap(t = !0) {
          return (this._wrap = t), this;
        }
        withVerticalOrientation(t = !0) {
          return (this._vertical = t), this;
        }
        withHorizontalOrientation(t) {
          return (this._horizontal = t), this;
        }
        withAllowedModifierKeys(t) {
          return (this._allowedModifierKeys = t), this;
        }
        withTypeAhead(t = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                (function dw(n, t, e) {
                  const i =
                    de(n) || t || e ? { next: n, error: t, complete: e } : n;
                  return i
                    ? dt((r, o) => {
                        var s;
                        null === (s = i.subscribe) || void 0 === s || s.call(i);
                        let a = !0;
                        r.subscribe(
                          Qe(
                            o,
                            (l) => {
                              var c;
                              null === (c = i.next) ||
                                void 0 === c ||
                                c.call(i, l),
                                o.next(l);
                            },
                            () => {
                              var l;
                              (a = !1),
                                null === (l = i.complete) ||
                                  void 0 === l ||
                                  l.call(i),
                                o.complete();
                            },
                            (l) => {
                              var c;
                              (a = !1),
                                null === (c = i.error) ||
                                  void 0 === c ||
                                  c.call(i, l),
                                o.error(l);
                            },
                            () => {
                              var l, c;
                              a &&
                                (null === (l = i.unsubscribe) ||
                                  void 0 === l ||
                                  l.call(i)),
                                null === (c = i.finalize) ||
                                  void 0 === c ||
                                  c.call(i);
                            }
                          )
                        );
                      })
                    : rr;
                })((e) => this._pressedLetters.push(e)),
                rf(t),
                On(() => this._pressedLetters.length > 0),
                Kt(() => this._pressedLetters.join(""))
              )
              .subscribe((e) => {
                const i = this._getItemsArray();
                for (let r = 1; r < i.length + 1; r++) {
                  const o = (this._activeItemIndex + r) % i.length,
                    s = i[o];
                  if (
                    !this._skipPredicateFn(s) &&
                    0 === s.getLabel().toUpperCase().trim().indexOf(e)
                  ) {
                    this.setActiveItem(o);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        cancelTypeahead() {
          return (this._pressedLetters = []), this;
        }
        withHomeAndEnd(t = !0) {
          return (this._homeAndEnd = t), this;
        }
        withPageUpDown(t = !0, e = 10) {
          return (this._pageUpAndDown = { enabled: t, delta: e }), this;
        }
        setActiveItem(t) {
          const e = this._activeItem;
          this.updateActiveItem(t),
            this._activeItem !== e && this.change.next(this._activeItemIndex);
        }
        onKeydown(t) {
          const e = t.keyCode,
            r = ["altKey", "ctrlKey", "metaKey", "shiftKey"].every(
              (o) => !t[o] || this._allowedModifierKeys.indexOf(o) > -1
            );
          switch (e) {
            case 9:
              return void this.tabOut.next();
            case 40:
              if (this._vertical && r) {
                this.setNextItemActive();
                break;
              }
              return;
            case 38:
              if (this._vertical && r) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case 39:
              if (this._horizontal && r) {
                "rtl" === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case 37:
              if (this._horizontal && r) {
                "rtl" === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case 36:
              if (this._homeAndEnd && r) {
                this.setFirstItemActive();
                break;
              }
              return;
            case 35:
              if (this._homeAndEnd && r) {
                this.setLastItemActive();
                break;
              }
              return;
            case 33:
              if (this._pageUpAndDown.enabled && r) {
                const o = this._activeItemIndex - this._pageUpAndDown.delta;
                this._setActiveItemByIndex(o > 0 ? o : 0, 1);
                break;
              }
              return;
            case 34:
              if (this._pageUpAndDown.enabled && r) {
                const o = this._activeItemIndex + this._pageUpAndDown.delta,
                  s = this._getItemsArray().length;
                this._setActiveItemByIndex(o < s ? o : s - 1, -1);
                break;
              }
              return;
            default:
              return void (
                (r || vi(t, "shiftKey")) &&
                (t.key && 1 === t.key.length
                  ? this._letterKeyStream.next(t.key.toLocaleUpperCase())
                  : ((e >= 65 && e <= 90) || (e >= 48 && e <= 57)) &&
                    this._letterKeyStream.next(String.fromCharCode(e)))
              );
          }
          (this._pressedLetters = []), t.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(t) {
          const e = this._getItemsArray(),
            i = "number" == typeof t ? t : e.indexOf(t);
          (this._activeItem = e[i] ?? null), (this._activeItemIndex = i);
        }
        destroy() {
          this._typeaheadSubscription.unsubscribe(),
            this._itemChangesSubscription?.unsubscribe(),
            this._letterKeyStream.complete(),
            this.tabOut.complete(),
            this.change.complete(),
            (this._pressedLetters = []);
        }
        _setActiveItemByDelta(t) {
          this._wrap
            ? this._setActiveInWrapMode(t)
            : this._setActiveInDefaultMode(t);
        }
        _setActiveInWrapMode(t) {
          const e = this._getItemsArray();
          for (let i = 1; i <= e.length; i++) {
            const r = (this._activeItemIndex + t * i + e.length) % e.length;
            if (!this._skipPredicateFn(e[r])) return void this.setActiveItem(r);
          }
        }
        _setActiveInDefaultMode(t) {
          this._setActiveItemByIndex(this._activeItemIndex + t, t);
        }
        _setActiveItemByIndex(t, e) {
          const i = this._getItemsArray();
          if (i[t]) {
            for (; this._skipPredicateFn(i[t]); ) if (!i[(t += e)]) return;
            this.setActiveItem(t);
          }
        }
        _getItemsArray() {
          return this._items instanceof Zo
            ? this._items.toArray()
            : this._items;
        }
      }
      class uL extends dL {
        setActiveItem(t) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(t),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      let Il = (() => {
        class n {
          constructor(e) {
            this._platform = e;
          }
          isDisabled(e) {
            return e.hasAttribute("disabled");
          }
          isVisible(e) {
            return (
              (function fL(n) {
                return !!(
                  n.offsetWidth ||
                  n.offsetHeight ||
                  ("function" == typeof n.getClientRects &&
                    n.getClientRects().length)
                );
              })(e) && "visible" === getComputedStyle(e).visibility
            );
          }
          isTabbable(e) {
            if (!this._platform.isBrowser) return !1;
            const i = (function hL(n) {
              try {
                return n.frameElement;
              } catch {
                return null;
              }
            })(
              (function DL(n) {
                return (
                  (n.ownerDocument && n.ownerDocument.defaultView) || window
                );
              })(e)
            );
            if (i && (-1 === Ew(i) || !this.isVisible(i))) return !1;
            let r = e.nodeName.toLowerCase(),
              o = Ew(e);
            return e.hasAttribute("contenteditable")
              ? -1 !== o
              : !(
                  "iframe" === r ||
                  "object" === r ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function yL(n) {
                      let t = n.nodeName.toLowerCase(),
                        e = "input" === t && n.type;
                      return (
                        "text" === e ||
                        "password" === e ||
                        "select" === t ||
                        "textarea" === t
                      );
                    })(e))
                ) &&
                  ("audio" === r
                    ? !!e.hasAttribute("controls") && -1 !== o
                    : "video" === r
                    ? -1 !== o &&
                      (null !== o ||
                        this._platform.FIREFOX ||
                        e.hasAttribute("controls"))
                    : e.tabIndex >= 0);
          }
          isFocusable(e, i) {
            return (
              (function vL(n) {
                return (
                  !(function mL(n) {
                    return (
                      (function _L(n) {
                        return "input" == n.nodeName.toLowerCase();
                      })(n) && "hidden" == n.type
                    );
                  })(n) &&
                  ((function pL(n) {
                    let t = n.nodeName.toLowerCase();
                    return (
                      "input" === t ||
                      "select" === t ||
                      "button" === t ||
                      "textarea" === t
                    );
                  })(n) ||
                    (function gL(n) {
                      return (
                        (function bL(n) {
                          return "a" == n.nodeName.toLowerCase();
                        })(n) && n.hasAttribute("href")
                      );
                    })(n) ||
                    n.hasAttribute("contenteditable") ||
                    Cw(n))
                );
              })(e) &&
              !this.isDisabled(e) &&
              (i?.ignoreVisibility || this.isVisible(e))
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(it));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function Cw(n) {
        if (!n.hasAttribute("tabindex") || void 0 === n.tabIndex) return !1;
        let t = n.getAttribute("tabindex");
        return !(!t || isNaN(parseInt(t, 10)));
      }
      function Ew(n) {
        if (!Cw(n)) return null;
        const t = parseInt(n.getAttribute("tabindex") || "", 10);
        return isNaN(t) ? -1 : t;
      }
      class wL {
        get enabled() {
          return this._enabled;
        }
        set enabled(t) {
          (this._enabled = t),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(t, this._startAnchor),
              this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        constructor(t, e, i, r, o = !1) {
          (this._element = t),
            (this._checker = e),
            (this._ngZone = i),
            (this._document = r),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            o || this.attachAnchors();
        }
        destroy() {
          const t = this._startAnchor,
            e = this._endAnchor;
          t &&
            (t.removeEventListener("focus", this.startAnchorListener),
            t.remove()),
            e &&
              (e.removeEventListener("focus", this.endAnchorListener),
              e.remove()),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  "focus",
                  this.startAnchorListener
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    "focus",
                    this.endAnchorListener
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusInitialElement(t)));
          });
        }
        focusFirstTabbableElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusFirstTabbableElement(t)));
          });
        }
        focusLastTabbableElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusLastTabbableElement(t)));
          });
        }
        _getRegionBoundary(t) {
          const e = this._element.querySelectorAll(
            `[cdk-focus-region-${t}], [cdkFocusRegion${t}], [cdk-focus-${t}]`
          );
          return "start" == t
            ? e.length
              ? e[0]
              : this._getFirstTabbableElement(this._element)
            : e.length
            ? e[e.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(t) {
          const e = this._element.querySelector(
            "[cdk-focus-initial], [cdkFocusInitial]"
          );
          if (e) {
            if (!this._checker.isFocusable(e)) {
              const i = this._getFirstTabbableElement(e);
              return i?.focus(t), !!i;
            }
            return e.focus(t), !0;
          }
          return this.focusFirstTabbableElement(t);
        }
        focusFirstTabbableElement(t) {
          const e = this._getRegionBoundary("start");
          return e && e.focus(t), !!e;
        }
        focusLastTabbableElement(t) {
          const e = this._getRegionBoundary("end");
          return e && e.focus(t), !!e;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
            return t;
          const e = t.children;
          for (let i = 0; i < e.length; i++) {
            const r =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(e[i])
                : null;
            if (r) return r;
          }
          return null;
        }
        _getLastTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
            return t;
          const e = t.children;
          for (let i = e.length - 1; i >= 0; i--) {
            const r =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(e[i])
                : null;
            if (r) return r;
          }
          return null;
        }
        _createAnchor() {
          const t = this._document.createElement("div");
          return (
            this._toggleAnchorTabIndex(this._enabled, t),
            t.classList.add("cdk-visually-hidden"),
            t.classList.add("cdk-focus-trap-anchor"),
            t.setAttribute("aria-hidden", "true"),
            t
          );
        }
        _toggleAnchorTabIndex(t, e) {
          t ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
        }
        toggleAnchors(t) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(t, this._startAnchor),
            this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        _executeOnStable(t) {
          this._ngZone.isStable
            ? t()
            : this._ngZone.onStable.pipe(Gt(1)).subscribe(t);
        }
      }
      let lf = (() => {
        class n {
          constructor(e, i, r) {
            (this._checker = e), (this._ngZone = i), (this._document = r);
          }
          create(e, i = !1) {
            return new wL(e, this._checker, this._ngZone, this._document, i);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(Il), b(V), b(ne));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      function cf(n) {
        return 0 === n.buttons || (0 === n.offsetX && 0 === n.offsetY);
      }
      function df(n) {
        const t =
          (n.touches && n.touches[0]) ||
          (n.changedTouches && n.changedTouches[0]);
        return !(
          !t ||
          -1 !== t.identifier ||
          (null != t.radiusX && 1 !== t.radiusX) ||
          (null != t.radiusY && 1 !== t.radiusY)
        );
      }
      const xL = new C("cdk-input-modality-detector-options"),
        CL = { ignoreKeys: [18, 17, 224, 91, 16] },
        eo = ii({ passive: !0, capture: !0 });
      let EL = (() => {
        class n {
          get mostRecentModality() {
            return this._modality.value;
          }
          constructor(e, i, r, o) {
            (this._platform = e),
              (this._mostRecentTarget = null),
              (this._modality = new ms(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = (s) => {
                this._options?.ignoreKeys?.some((a) => a === s.keyCode) ||
                  (this._modality.next("keyboard"),
                  (this._mostRecentTarget = rn(s)));
              }),
              (this._onMousedown = (s) => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(cf(s) ? "keyboard" : "mouse"),
                  (this._mostRecentTarget = rn(s)));
              }),
              (this._onTouchstart = (s) => {
                df(s)
                  ? this._modality.next("keyboard")
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next("touch"),
                    (this._mostRecentTarget = rn(s)));
              }),
              (this._options = { ...CL, ...o }),
              (this.modalityDetected = this._modality.pipe(uw(1))),
              (this.modalityChanged = this.modalityDetected.pipe(hw())),
              e.isBrowser &&
                i.runOutsideAngular(() => {
                  r.addEventListener("keydown", this._onKeydown, eo),
                    r.addEventListener("mousedown", this._onMousedown, eo),
                    r.addEventListener("touchstart", this._onTouchstart, eo);
                });
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener("keydown", this._onKeydown, eo),
                document.removeEventListener(
                  "mousedown",
                  this._onMousedown,
                  eo
                ),
                document.removeEventListener(
                  "touchstart",
                  this._onTouchstart,
                  eo
                ));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(it), b(V), b(ne), b(xL, 8));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const SL = new C("liveAnnouncerElement", {
          providedIn: "root",
          factory: function ML() {
            return null;
          },
        }),
        TL = new C("LIVE_ANNOUNCER_DEFAULT_OPTIONS");
      let AL = 0,
        IL = (() => {
          class n {
            constructor(e, i, r, o) {
              (this._ngZone = i),
                (this._defaultOptions = o),
                (this._document = r),
                (this._liveElement = e || this._createLiveElement());
            }
            announce(e, ...i) {
              const r = this._defaultOptions;
              let o, s;
              return (
                1 === i.length && "number" == typeof i[0]
                  ? (s = i[0])
                  : ([o, s] = i),
                this.clear(),
                clearTimeout(this._previousTimeout),
                o || (o = r && r.politeness ? r.politeness : "polite"),
                null == s && r && (s = r.duration),
                this._liveElement.setAttribute("aria-live", o),
                this._liveElement.id &&
                  this._exposeAnnouncerToModals(this._liveElement.id),
                this._ngZone.runOutsideAngular(
                  () => (
                    this._currentPromise ||
                      (this._currentPromise = new Promise(
                        (a) => (this._currentResolve = a)
                      )),
                    clearTimeout(this._previousTimeout),
                    (this._previousTimeout = setTimeout(() => {
                      (this._liveElement.textContent = e),
                        "number" == typeof s &&
                          (this._previousTimeout = setTimeout(
                            () => this.clear(),
                            s
                          )),
                        this._currentResolve(),
                        (this._currentPromise = this._currentResolve = void 0);
                    }, 100)),
                    this._currentPromise
                  )
                )
              );
            }
            clear() {
              this._liveElement && (this._liveElement.textContent = "");
            }
            ngOnDestroy() {
              clearTimeout(this._previousTimeout),
                this._liveElement?.remove(),
                (this._liveElement = null),
                this._currentResolve?.(),
                (this._currentPromise = this._currentResolve = void 0);
            }
            _createLiveElement() {
              const e = "cdk-live-announcer-element",
                i = this._document.getElementsByClassName(e),
                r = this._document.createElement("div");
              for (let o = 0; o < i.length; o++) i[o].remove();
              return (
                r.classList.add(e),
                r.classList.add("cdk-visually-hidden"),
                r.setAttribute("aria-atomic", "true"),
                r.setAttribute("aria-live", "polite"),
                (r.id = "cdk-live-announcer-" + AL++),
                this._document.body.appendChild(r),
                r
              );
            }
            _exposeAnnouncerToModals(e) {
              const i = this._document.querySelectorAll(
                'body > .cdk-overlay-container [aria-modal="true"]'
              );
              for (let r = 0; r < i.length; r++) {
                const o = i[r],
                  s = o.getAttribute("aria-owns");
                s
                  ? -1 === s.indexOf(e) &&
                    o.setAttribute("aria-owns", s + " " + e)
                  : o.setAttribute("aria-owns", e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(SL, 8), b(V), b(ne), b(TL, 8));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      const RL = new C("cdk-focus-monitor-default-options"),
        Rl = ii({ passive: !0, capture: !0 });
      let to = (() => {
        class n {
          constructor(e, i, r, o, s) {
            (this._ngZone = e),
              (this._platform = i),
              (this._inputModalityDetector = r),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._originFromTouchInteraction = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0),
                  (this._windowFocusTimeoutId = window.setTimeout(
                    () => (this._windowFocused = !1)
                  ));
              }),
              (this._stopInputModalityDetector = new A()),
              (this._rootNodeFocusAndBlurListener = (a) => {
                for (let c = rn(a); c; c = c.parentElement)
                  "focus" === a.type ? this._onFocus(a, c) : this._onBlur(a, c);
              }),
              (this._document = o),
              (this._detectionMode = s?.detectionMode || 0);
          }
          monitor(e, i = !1) {
            const r = je(e);
            if (!this._platform.isBrowser || 1 !== r.nodeType) return qi(null);
            const o = Uh(r) || this._getDocument(),
              s = this._elementInfo.get(r);
            if (s) return i && (s.checkChildren = !0), s.subject;
            const a = { checkChildren: i, subject: new A(), rootNode: o };
            return (
              this._elementInfo.set(r, a),
              this._registerGlobalListeners(a),
              a.subject
            );
          }
          stopMonitoring(e) {
            const i = je(e),
              r = this._elementInfo.get(i);
            r &&
              (r.subject.complete(),
              this._setClasses(i),
              this._elementInfo.delete(i),
              this._removeGlobalListeners(r));
          }
          focusVia(e, i, r) {
            const o = je(e);
            o === this._getDocument().activeElement
              ? this._getClosestElementsInfo(o).forEach(([a, l]) =>
                  this._originChanged(a, i, l)
                )
              : (this._setOrigin(i),
                "function" == typeof o.focus && o.focus(r));
          }
          ngOnDestroy() {
            this._elementInfo.forEach((e, i) => this.stopMonitoring(i));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _getFocusOrigin(e) {
            return this._origin
              ? this._originFromTouchInteraction
                ? this._shouldBeAttributedToTouch(e)
                  ? "touch"
                  : "program"
                : this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : e && this._isLastInteractionFromInputLabel(e)
              ? "mouse"
              : "program";
          }
          _shouldBeAttributedToTouch(e) {
            return (
              1 === this._detectionMode ||
              !!e?.contains(this._inputModalityDetector._mostRecentTarget)
            );
          }
          _setClasses(e, i) {
            e.classList.toggle("cdk-focused", !!i),
              e.classList.toggle("cdk-touch-focused", "touch" === i),
              e.classList.toggle("cdk-keyboard-focused", "keyboard" === i),
              e.classList.toggle("cdk-mouse-focused", "mouse" === i),
              e.classList.toggle("cdk-program-focused", "program" === i);
          }
          _setOrigin(e, i = !1) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = e),
                (this._originFromTouchInteraction = "touch" === e && i),
                0 === this._detectionMode &&
                  (clearTimeout(this._originTimeoutId),
                  (this._originTimeoutId = setTimeout(
                    () => (this._origin = null),
                    this._originFromTouchInteraction ? 650 : 1
                  )));
            });
          }
          _onFocus(e, i) {
            const r = this._elementInfo.get(i),
              o = rn(e);
            !r ||
              (!r.checkChildren && i !== o) ||
              this._originChanged(i, this._getFocusOrigin(o), r);
          }
          _onBlur(e, i) {
            const r = this._elementInfo.get(i);
            !r ||
              (r.checkChildren &&
                e.relatedTarget instanceof Node &&
                i.contains(e.relatedTarget)) ||
              (this._setClasses(i), this._emitOrigin(r, null));
          }
          _emitOrigin(e, i) {
            e.subject.observers.length &&
              this._ngZone.run(() => e.subject.next(i));
          }
          _registerGlobalListeners(e) {
            if (!this._platform.isBrowser) return;
            const i = e.rootNode,
              r = this._rootNodeFocusListenerCount.get(i) || 0;
            r ||
              this._ngZone.runOutsideAngular(() => {
                i.addEventListener(
                  "focus",
                  this._rootNodeFocusAndBlurListener,
                  Rl
                ),
                  i.addEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    Rl
                  );
              }),
              this._rootNodeFocusListenerCount.set(i, r + 1),
              1 == ++this._monitoredElementCount &&
                (this._ngZone.runOutsideAngular(() => {
                  this._getWindow().addEventListener(
                    "focus",
                    this._windowFocusListener
                  );
                }),
                this._inputModalityDetector.modalityDetected
                  .pipe(ge(this._stopInputModalityDetector))
                  .subscribe((o) => {
                    this._setOrigin(o, !0);
                  }));
          }
          _removeGlobalListeners(e) {
            const i = e.rootNode;
            if (this._rootNodeFocusListenerCount.has(i)) {
              const r = this._rootNodeFocusListenerCount.get(i);
              r > 1
                ? this._rootNodeFocusListenerCount.set(i, r - 1)
                : (i.removeEventListener(
                    "focus",
                    this._rootNodeFocusAndBlurListener,
                    Rl
                  ),
                  i.removeEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    Rl
                  ),
                  this._rootNodeFocusListenerCount.delete(i));
            }
            --this._monitoredElementCount ||
              (this._getWindow().removeEventListener(
                "focus",
                this._windowFocusListener
              ),
              this._stopInputModalityDetector.next(),
              clearTimeout(this._windowFocusTimeoutId),
              clearTimeout(this._originTimeoutId));
          }
          _originChanged(e, i, r) {
            this._setClasses(e, i),
              this._emitOrigin(r, i),
              (this._lastFocusOrigin = i);
          }
          _getClosestElementsInfo(e) {
            const i = [];
            return (
              this._elementInfo.forEach((r, o) => {
                (o === e || (r.checkChildren && o.contains(e))) &&
                  i.push([o, r]);
              }),
              i
            );
          }
          _isLastInteractionFromInputLabel(e) {
            const { _mostRecentTarget: i, mostRecentModality: r } =
              this._inputModalityDetector;
            if (
              "mouse" !== r ||
              !i ||
              i === e ||
              ("INPUT" !== e.nodeName && "TEXTAREA" !== e.nodeName) ||
              e.disabled
            )
              return !1;
            const o = e.labels;
            if (o)
              for (let s = 0; s < o.length; s++)
                if (o[s].contains(i)) return !0;
            return !1;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(V), b(it), b(EL), b(ne, 8), b(RL, 8));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const Mw = "cdk-high-contrast-black-on-white",
        Tw = "cdk-high-contrast-white-on-black",
        uf = "cdk-high-contrast-active";
      let Aw = (() => {
          class n {
            constructor(e, i) {
              (this._platform = e),
                (this._document = i),
                (this._breakpointSubscription = vn(aL)
                  .observe("(forced-colors: active)")
                  .subscribe(() => {
                    this._hasCheckedHighContrastMode &&
                      ((this._hasCheckedHighContrastMode = !1),
                      this._applyBodyHighContrastModeCssClasses());
                  }));
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const e = this._document.createElement("div");
              (e.style.backgroundColor = "rgb(1,2,3)"),
                (e.style.position = "absolute"),
                this._document.body.appendChild(e);
              const i = this._document.defaultView || window,
                r = i && i.getComputedStyle ? i.getComputedStyle(e) : null,
                o = ((r && r.backgroundColor) || "").replace(/ /g, "");
              switch ((e.remove(), o)) {
                case "rgb(0,0,0)":
                case "rgb(45,50,54)":
                case "rgb(32,32,32)":
                  return 2;
                case "rgb(255,255,255)":
                case "rgb(255,250,239)":
                  return 1;
              }
              return 0;
            }
            ngOnDestroy() {
              this._breakpointSubscription.unsubscribe();
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const e = this._document.body.classList;
                e.remove(uf, Mw, Tw), (this._hasCheckedHighContrastMode = !0);
                const i = this.getHighContrastMode();
                1 === i ? e.add(uf, Mw) : 2 === i && e.add(uf, Tw);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(it), b(ne));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        Iw = (() => {
          class n {
            constructor(e) {
              e._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(Aw));
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ imports: [pw] })),
            n
          );
        })();
      function hf(n) {
        return new De((t) => {
          St(n()).subscribe(t);
        });
      }
      function kL(n, t) {}
      class kl {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = "first-tabbable"),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0),
            (this.closeOnDestroy = !0),
            (this.closeOnOverlayDetachments = !0);
        }
      }
      let Rw = (() => {
        class n extends Zh {
          constructor(e, i, r, o, s, a, l, c) {
            super(),
              (this._elementRef = e),
              (this._focusTrapFactory = i),
              (this._config = o),
              (this._interactivityChecker = s),
              (this._ngZone = a),
              (this._overlayRef = l),
              (this._focusMonitor = c),
              (this._elementFocusedBeforeDialogWasOpened = null),
              (this._closeInteractionType = null),
              (this.attachDomPortal = (d) => {
                this._portalOutlet.hasAttached();
                const u = this._portalOutlet.attachDomPortal(d);
                return this._contentAttached(), u;
              }),
              (this._ariaLabelledBy = this._config.ariaLabelledBy || null),
              (this._document = r);
          }
          _contentAttached() {
            this._initializeFocusTrap(),
              this._handleBackdropClicks(),
              this._captureInitialFocus();
          }
          _captureInitialFocus() {
            this._trapFocus();
          }
          ngOnDestroy() {
            this._restoreFocus();
          }
          attachComponentPortal(e) {
            this._portalOutlet.hasAttached();
            const i = this._portalOutlet.attachComponentPortal(e);
            return this._contentAttached(), i;
          }
          attachTemplatePortal(e) {
            this._portalOutlet.hasAttached();
            const i = this._portalOutlet.attachTemplatePortal(e);
            return this._contentAttached(), i;
          }
          _recaptureFocus() {
            this._containsFocus() || this._trapFocus();
          }
          _forceFocus(e, i) {
            this._interactivityChecker.isFocusable(e) ||
              ((e.tabIndex = -1),
              this._ngZone.runOutsideAngular(() => {
                const r = () => {
                  e.removeEventListener("blur", r),
                    e.removeEventListener("mousedown", r),
                    e.removeAttribute("tabindex");
                };
                e.addEventListener("blur", r),
                  e.addEventListener("mousedown", r);
              })),
              e.focus(i);
          }
          _focusByCssSelector(e, i) {
            let r = this._elementRef.nativeElement.querySelector(e);
            r && this._forceFocus(r, i);
          }
          _trapFocus() {
            const e = this._elementRef.nativeElement;
            switch (this._config.autoFocus) {
              case !1:
              case "dialog":
                this._containsFocus() || e.focus();
                break;
              case !0:
              case "first-tabbable":
                this._focusTrap.focusInitialElementWhenReady().then((i) => {
                  i || this._focusDialogContainer();
                });
                break;
              case "first-heading":
                this._focusByCssSelector(
                  'h1, h2, h3, h4, h5, h6, [role="heading"]'
                );
                break;
              default:
                this._focusByCssSelector(this._config.autoFocus);
            }
          }
          _restoreFocus() {
            const e = this._config.restoreFocus;
            let i = null;
            if (
              ("string" == typeof e
                ? (i = this._document.querySelector(e))
                : "boolean" == typeof e
                ? (i = e ? this._elementFocusedBeforeDialogWasOpened : null)
                : e && (i = e),
              this._config.restoreFocus && i && "function" == typeof i.focus)
            ) {
              const r = Gh(),
                o = this._elementRef.nativeElement;
              (!r || r === this._document.body || r === o || o.contains(r)) &&
                (this._focusMonitor
                  ? (this._focusMonitor.focusVia(i, this._closeInteractionType),
                    (this._closeInteractionType = null))
                  : i.focus());
            }
            this._focusTrap && this._focusTrap.destroy();
          }
          _focusDialogContainer() {
            this._elementRef.nativeElement.focus &&
              this._elementRef.nativeElement.focus();
          }
          _containsFocus() {
            const e = this._elementRef.nativeElement,
              i = Gh();
            return e === i || e.contains(i);
          }
          _initializeFocusTrap() {
            (this._focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement
            )),
              this._document &&
                (this._elementFocusedBeforeDialogWasOpened = Gh());
          }
          _handleBackdropClicks() {
            this._overlayRef.backdropClick().subscribe(() => {
              this._config.disableClose && this._recaptureFocus();
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              p(U),
              p(lf),
              p(ne, 8),
              p(kl),
              p(Il),
              p(V),
              p(ps),
              p(to)
            );
          }),
          (n.ɵcmp = Ee({
            type: n,
            selectors: [["cdk-dialog-container"]],
            viewQuery: function (e, i) {
              if ((1 & e && Oe(Xh, 7), 2 & e)) {
                let r;
                q((r = Y())) && (i._portalOutlet = r.first);
              }
            },
            hostAttrs: ["tabindex", "-1", 1, "cdk-dialog-container"],
            hostVars: 6,
            hostBindings: function (e, i) {
              2 & e &&
                Se("id", i._config.id || null)("role", i._config.role)(
                  "aria-modal",
                  i._config.ariaModal
                )(
                  "aria-labelledby",
                  i._config.ariaLabel ? null : i._ariaLabelledBy
                )("aria-label", i._config.ariaLabel)(
                  "aria-describedby",
                  i._config.ariaDescribedBy || null
                );
            },
            features: [T],
            decls: 1,
            vars: 0,
            consts: [["cdkPortalOutlet", ""]],
            template: function (e, i) {
              1 & e && W(0, kL, 0, 0, "ng-template", 0);
            },
            dependencies: [Xh],
            styles: [
              ".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}",
            ],
            encapsulation: 2,
          })),
          n
        );
      })();
      class ff {
        constructor(t, e) {
          (this.overlayRef = t),
            (this.config = e),
            (this.closed = new A()),
            (this.disableClose = e.disableClose),
            (this.backdropClick = t.backdropClick()),
            (this.keydownEvents = t.keydownEvents()),
            (this.outsidePointerEvents = t.outsidePointerEvents()),
            (this.id = e.id),
            this.keydownEvents.subscribe((i) => {
              27 === i.keyCode &&
                !this.disableClose &&
                !vi(i) &&
                (i.preventDefault(),
                this.close(void 0, { focusOrigin: "keyboard" }));
            }),
            this.backdropClick.subscribe(() => {
              this.disableClose || this.close(void 0, { focusOrigin: "mouse" });
            }),
            (this._detachSubscription = t.detachments().subscribe(() => {
              !1 !== e.closeOnOverlayDetachments && this.close();
            }));
        }
        close(t, e) {
          if (this.containerInstance) {
            const i = this.closed;
            (this.containerInstance._closeInteractionType =
              e?.focusOrigin || "program"),
              this._detachSubscription.unsubscribe(),
              this.overlayRef.dispose(),
              i.next(t),
              i.complete(),
              (this.componentInstance = this.containerInstance = null);
          }
        }
        updatePosition() {
          return this.overlayRef.updatePosition(), this;
        }
        updateSize(t = "", e = "") {
          return this.overlayRef.updateSize({ width: t, height: e }), this;
        }
        addPanelClass(t) {
          return this.overlayRef.addPanelClass(t), this;
        }
        removePanelClass(t) {
          return this.overlayRef.removePanelClass(t), this;
        }
      }
      const kw = new C("DialogScrollStrategy"),
        OL = new C("DialogData"),
        FL = new C("DefaultDialogConfig"),
        NL = {
          provide: kw,
          deps: [Fn],
          useFactory: function PL(n) {
            return () => n.scrollStrategies.block();
          },
        };
      let LL = 0,
        Ow = (() => {
          class n {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            constructor(e, i, r, o, s, a) {
              (this._overlay = e),
                (this._injector = i),
                (this._defaultOptions = r),
                (this._parentDialog = o),
                (this._overlayContainer = s),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new A()),
                (this._afterOpenedAtThisLevel = new A()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = hf(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe(ni(void 0))
                )),
                (this._scrollStrategy = a);
            }
            open(e, i) {
              ((i = { ...(this._defaultOptions || new kl()), ...i }).id =
                i.id || "cdk-dialog-" + LL++),
                i.id && this.getDialogById(i.id);
              const o = this._getOverlayConfig(i),
                s = this._overlay.create(o),
                a = new ff(s, i),
                l = this._attachContainer(s, a, i);
              return (
                (a.containerInstance = l),
                this._attachDialogContent(e, a, l, i),
                this.openDialogs.length ||
                  this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(a),
                a.closed.subscribe(() => this._removeOpenDialog(a, !0)),
                this.afterOpened.next(a),
                a
              );
            }
            closeAll() {
              pf(this.openDialogs, (e) => e.close());
            }
            getDialogById(e) {
              return this.openDialogs.find((i) => i.id === e);
            }
            ngOnDestroy() {
              pf(this._openDialogsAtThisLevel, (e) => {
                !1 === e.config.closeOnDestroy && this._removeOpenDialog(e, !1);
              }),
                pf(this._openDialogsAtThisLevel, (e) => e.close()),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete(),
                (this._openDialogsAtThisLevel = []);
            }
            _getOverlayConfig(e) {
              const i = new tf({
                positionStrategy:
                  e.positionStrategy ||
                  this._overlay
                    .position()
                    .global()
                    .centerHorizontally()
                    .centerVertically(),
                scrollStrategy: e.scrollStrategy || this._scrollStrategy(),
                panelClass: e.panelClass,
                hasBackdrop: e.hasBackdrop,
                direction: e.direction,
                minWidth: e.minWidth,
                minHeight: e.minHeight,
                maxWidth: e.maxWidth,
                maxHeight: e.maxHeight,
                width: e.width,
                height: e.height,
                disposeOnNavigation: e.closeOnNavigation,
              });
              return e.backdropClass && (i.backdropClass = e.backdropClass), i;
            }
            _attachContainer(e, i, r) {
              const o = r.injector || r.viewContainerRef?.injector,
                s = [
                  { provide: kl, useValue: r },
                  { provide: ff, useValue: i },
                  { provide: ps, useValue: e },
                ];
              let a;
              r.container
                ? "function" == typeof r.container
                  ? (a = r.container)
                  : ((a = r.container.type),
                    s.push(...r.container.providers(r)))
                : (a = Rw);
              const l = new vl(
                a,
                r.viewContainerRef,
                kt.create({ parent: o || this._injector, providers: s }),
                r.componentFactoryResolver
              );
              return e.attach(l).instance;
            }
            _attachDialogContent(e, i, r, o) {
              if (e instanceof $e) {
                const s = this._createInjector(o, i, r, void 0);
                let a = { $implicit: o.data, dialogRef: i };
                o.templateContext &&
                  (a = {
                    ...a,
                    ...("function" == typeof o.templateContext
                      ? o.templateContext()
                      : o.templateContext),
                  }),
                  r.attachTemplatePortal(new Kh(e, null, a, s));
              } else {
                const s = this._createInjector(o, i, r, this._injector),
                  a = r.attachComponentPortal(
                    new vl(e, o.viewContainerRef, s, o.componentFactoryResolver)
                  );
                i.componentInstance = a.instance;
              }
            }
            _createInjector(e, i, r, o) {
              const s = e.injector || e.viewContainerRef?.injector,
                a = [
                  { provide: OL, useValue: e.data },
                  { provide: ff, useValue: i },
                ];
              return (
                e.providers &&
                  ("function" == typeof e.providers
                    ? a.push(...e.providers(i, e, r))
                    : a.push(...e.providers)),
                e.direction &&
                  (!s || !s.get(Ut, null, { optional: !0 })) &&
                  a.push({
                    provide: Ut,
                    useValue: { value: e.direction, change: qi() },
                  }),
                kt.create({ parent: s || o, providers: a })
              );
            }
            _removeOpenDialog(e, i) {
              const r = this.openDialogs.indexOf(e);
              r > -1 &&
                (this.openDialogs.splice(r, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((o, s) => {
                    o
                      ? s.setAttribute("aria-hidden", o)
                      : s.removeAttribute("aria-hidden");
                  }),
                  this._ariaHiddenElements.clear(),
                  i && this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const e = this._overlayContainer.getContainerElement();
              if (e.parentElement) {
                const i = e.parentElement.children;
                for (let r = i.length - 1; r > -1; r--) {
                  const o = i[r];
                  o !== e &&
                    "SCRIPT" !== o.nodeName &&
                    "STYLE" !== o.nodeName &&
                    !o.hasAttribute("aria-live") &&
                    (this._ariaHiddenElements.set(
                      o,
                      o.getAttribute("aria-hidden")
                    ),
                    o.setAttribute("aria-hidden", "true"));
                }
              }
            }
            _getAfterAllClosed() {
              const e = this._parentDialog;
              return e
                ? e._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                b(Fn),
                b(kt),
                b(FL, 8),
                b(n, 12),
                b(El),
                b(kw)
              );
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      function pf(n, t) {
        let e = n.length;
        for (; e--; ) t(n[e]);
      }
      let VL = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = le({ type: n })),
          (n.ɵinj = oe({ providers: [Ow, NL], imports: [Sl, Dl, Iw, Dl] })),
          n
        );
      })();
      const BL = ["text"];
      function HL(n, t) {
        if ((1 & n && we(0, "mat-pseudo-checkbox", 6), 2 & n)) {
          const e = se();
          k("state", e.selected ? "checked" : "unchecked")(
            "disabled",
            e.disabled
          );
        }
      }
      function jL(n, t) {
        1 & n && we(0, "mat-pseudo-checkbox", 7),
          2 & n && k("disabled", se().disabled);
      }
      function zL(n, t) {
        if ((1 & n && (F(0, "span", 8), qe(1), N()), 2 & n)) {
          const e = se();
          O(1), Ot("(", e.group.label, ")");
        }
      }
      const $L = [[["mat-icon"]], "*"],
        UL = ["mat-icon", "*"];
      let GL = (() => {
          class n {}
          return (
            (n.STANDARD_CURVE = "cubic-bezier(0.4,0.0,0.2,1)"),
            (n.DECELERATION_CURVE = "cubic-bezier(0.0,0.0,0.2,1)"),
            (n.ACCELERATION_CURVE = "cubic-bezier(0.4,0.0,1,1)"),
            (n.SHARP_CURVE = "cubic-bezier(0.4,0.0,0.6,1)"),
            n
          );
        })(),
        WL = (() => {
          class n {}
          return (
            (n.COMPLEX = "375ms"),
            (n.ENTERING = "225ms"),
            (n.EXITING = "195ms"),
            n
          );
        })();
      const YL = new C("mat-sanity-checks", {
        providedIn: "root",
        factory: function qL() {
          return !0;
        },
      });
      let Xe = (() => {
        class n {
          constructor(e, i, r) {
            (this._sanityChecks = i),
              (this._document = r),
              (this._hasDoneGlobalChecks = !1),
              e._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(e) {
            return (
              !Wh() &&
              ("boolean" == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[e])
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(Aw), b(YL, 8), b(ne));
          }),
          (n.ɵmod = le({ type: n })),
          (n.ɵinj = oe({ imports: [hs, hs] })),
          n
        );
      })();
      function gs(n) {
        return class extends n {
          get disabled() {
            return this._disabled;
          }
          set disabled(t) {
            this._disabled = ae(t);
          }
          constructor(...t) {
            super(...t), (this._disabled = !1);
          }
        };
      }
      function KL(n, t) {
        return class extends n {
          get color() {
            return this._color;
          }
          set color(e) {
            const i = e || this.defaultColor;
            i !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`
                ),
              i && this._elementRef.nativeElement.classList.add(`mat-${i}`),
              (this._color = i));
          }
          constructor(...e) {
            super(...e), (this.defaultColor = t), (this.color = t);
          }
        };
      }
      function Nw(n) {
        return class extends n {
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(t) {
            this._disableRipple = ae(t);
          }
          constructor(...t) {
            super(...t), (this._disableRipple = !1);
          }
        };
      }
      function ZL(n, t = 0) {
        return class extends n {
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(e) {
            this._tabIndex = null != e ? $t(e) : this.defaultTabIndex;
          }
          constructor(...e) {
            super(...e), (this._tabIndex = t), (this.defaultTabIndex = t);
          }
        };
      }
      function Lw(n) {
        return class extends n {
          updateErrorState() {
            const t = this.errorState,
              o = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm
              );
            o !== t && ((this.errorState = o), this.stateChanges.next());
          }
          constructor(...t) {
            super(...t), (this.errorState = !1);
          }
        };
      }
      function Vw(n) {
        return class extends n {
          constructor(...t) {
            super(...t),
              (this._isInitialized = !1),
              (this._pendingSubscribers = []),
              (this.initialized = new De((e) => {
                this._isInitialized
                  ? this._notifySubscriber(e)
                  : this._pendingSubscribers.push(e);
              }));
          }
          _markInitialized() {
            (this._isInitialized = !0),
              this._pendingSubscribers.forEach(this._notifySubscriber),
              (this._pendingSubscribers = null);
          }
          _notifySubscriber(t) {
            t.next(), t.complete();
          }
        };
      }
      let Bw = (() => {
        class n {
          isErrorState(e, i) {
            return !!(e && e.invalid && (e.touched || (i && i.submitted)));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      class QL {
        constructor(t, e, i, r = !1) {
          (this._renderer = t),
            (this.element = e),
            (this.config = i),
            (this._animationForciblyDisabledThroughCss = r),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const Hw = ii({ passive: !0, capture: !0 });
      class JL {
        constructor() {
          (this._events = new Map()),
            (this._delegateEventHandler = (t) => {
              const e = rn(t);
              e &&
                this._events.get(t.type)?.forEach((i, r) => {
                  (r === e || r.contains(e)) &&
                    i.forEach((o) => o.handleEvent(t));
                });
            });
        }
        addHandler(t, e, i, r) {
          const o = this._events.get(e);
          if (o) {
            const s = o.get(i);
            s ? s.add(r) : o.set(i, new Set([r]));
          } else
            this._events.set(e, new Map([[i, new Set([r])]])),
              t.runOutsideAngular(() => {
                document.addEventListener(e, this._delegateEventHandler, Hw);
              });
        }
        removeHandler(t, e, i) {
          const r = this._events.get(t);
          if (!r) return;
          const o = r.get(e);
          o &&
            (o.delete(i),
            0 === o.size && r.delete(e),
            0 === r.size &&
              (this._events.delete(t),
              document.removeEventListener(t, this._delegateEventHandler, Hw)));
        }
      }
      const jw = { enterDuration: 225, exitDuration: 150 },
        zw = ii({ passive: !0, capture: !0 }),
        $w = ["mousedown", "touchstart"],
        Uw = ["mouseup", "mouseleave", "touchend", "touchcancel"];
      class bs {
        constructor(t, e, i, r) {
          (this._target = t),
            (this._ngZone = e),
            (this._platform = r),
            (this._isPointerDown = !1),
            (this._activeRipples = new Map()),
            (this._pointerUpEventsRegistered = !1),
            r.isBrowser && (this._containerElement = je(i));
        }
        fadeInRipple(t, e, i = {}) {
          const r = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            o = { ...jw, ...i.animation };
          i.centered &&
            ((t = r.left + r.width / 2), (e = r.top + r.height / 2));
          const s =
              i.radius ||
              (function t2(n, t, e) {
                const i = Math.max(Math.abs(n - e.left), Math.abs(n - e.right)),
                  r = Math.max(Math.abs(t - e.top), Math.abs(t - e.bottom));
                return Math.sqrt(i * i + r * r);
              })(t, e, r),
            a = t - r.left,
            l = e - r.top,
            c = o.enterDuration,
            d = document.createElement("div");
          d.classList.add("mat-ripple-element"),
            (d.style.left = a - s + "px"),
            (d.style.top = l - s + "px"),
            (d.style.height = 2 * s + "px"),
            (d.style.width = 2 * s + "px"),
            null != i.color && (d.style.backgroundColor = i.color),
            (d.style.transitionDuration = `${c}ms`),
            this._containerElement.appendChild(d);
          const u = window.getComputedStyle(d),
            f = u.transitionDuration,
            m =
              "none" === u.transitionProperty ||
              "0s" === f ||
              "0s, 0s" === f ||
              (0 === r.width && 0 === r.height),
            g = new QL(this, d, i, m);
          (d.style.transform = "scale3d(1, 1, 1)"),
            (g.state = 0),
            i.persistent || (this._mostRecentTransientRipple = g);
          let _ = null;
          return (
            !m &&
              (c || o.exitDuration) &&
              this._ngZone.runOutsideAngular(() => {
                const v = () => this._finishRippleTransition(g),
                  E = () => this._destroyRipple(g);
                d.addEventListener("transitionend", v),
                  d.addEventListener("transitioncancel", E),
                  (_ = { onTransitionEnd: v, onTransitionCancel: E });
              }),
            this._activeRipples.set(g, _),
            (m || !c) && this._finishRippleTransition(g),
            g
          );
        }
        fadeOutRipple(t) {
          if (2 === t.state || 3 === t.state) return;
          const e = t.element,
            i = { ...jw, ...t.config.animation };
          (e.style.transitionDuration = `${i.exitDuration}ms`),
            (e.style.opacity = "0"),
            (t.state = 2),
            (t._animationForciblyDisabledThroughCss || !i.exitDuration) &&
              this._finishRippleTransition(t);
        }
        fadeOutAll() {
          this._getActiveRipples().forEach((t) => t.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._getActiveRipples().forEach((t) => {
            t.config.persistent || t.fadeOut();
          });
        }
        setupTriggerEvents(t) {
          const e = je(t);
          !this._platform.isBrowser ||
            !e ||
            e === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = e),
            $w.forEach((i) => {
              bs._eventManager.addHandler(this._ngZone, i, e, this);
            }));
        }
        handleEvent(t) {
          "mousedown" === t.type
            ? this._onMousedown(t)
            : "touchstart" === t.type
            ? this._onTouchStart(t)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._ngZone.runOutsideAngular(() => {
                Uw.forEach((e) => {
                  this._triggerElement.addEventListener(e, this, zw);
                });
              }),
              (this._pointerUpEventsRegistered = !0));
        }
        _finishRippleTransition(t) {
          0 === t.state
            ? this._startFadeOutTransition(t)
            : 2 === t.state && this._destroyRipple(t);
        }
        _startFadeOutTransition(t) {
          const e = t === this._mostRecentTransientRipple,
            { persistent: i } = t.config;
          (t.state = 1), !i && (!e || !this._isPointerDown) && t.fadeOut();
        }
        _destroyRipple(t) {
          const e = this._activeRipples.get(t) ?? null;
          this._activeRipples.delete(t),
            this._activeRipples.size || (this._containerRect = null),
            t === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            (t.state = 3),
            null !== e &&
              (t.element.removeEventListener(
                "transitionend",
                e.onTransitionEnd
              ),
              t.element.removeEventListener(
                "transitioncancel",
                e.onTransitionCancel
              )),
            t.element.remove();
        }
        _onMousedown(t) {
          const e = cf(t),
            i =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !e &&
            !i &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig));
        }
        _onTouchStart(t) {
          if (!this._target.rippleDisabled && !df(t)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const e = t.changedTouches;
            for (let i = 0; i < e.length; i++)
              this.fadeInRipple(
                e[i].clientX,
                e[i].clientY,
                this._target.rippleConfig
              );
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._getActiveRipples().forEach((t) => {
              !t.config.persistent &&
                (1 === t.state ||
                  (t.config.terminateOnPointerUp && 0 === t.state)) &&
                t.fadeOut();
            }));
        }
        _getActiveRipples() {
          return Array.from(this._activeRipples.keys());
        }
        _removeTriggerEvents() {
          const t = this._triggerElement;
          t &&
            ($w.forEach((e) => bs._eventManager.removeHandler(e, t, this)),
            this._pointerUpEventsRegistered &&
              Uw.forEach((e) => t.removeEventListener(e, this, zw)));
        }
      }
      bs._eventManager = new JL();
      const n2 = new C("mat-ripple-global-options");
      let mf = (() => {
          class n {
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              e && this.fadeOutAllNonPersistent(),
                (this._disabled = e),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(e) {
              (this._trigger = e), this._setupTriggerEventsIfEnabled();
            }
            constructor(e, i, r, o, s) {
              (this._elementRef = e),
                (this._animationMode = s),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = o || {}),
                (this._rippleRenderer = new bs(this, i, e, r));
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: {
                  ...this._globalOptions.animation,
                  ...("NoopAnimations" === this._animationMode
                    ? { enterDuration: 0, exitDuration: 0 }
                    : {}),
                  ...this.animation,
                },
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(e, i = 0, r) {
              return "number" == typeof e
                ? this._rippleRenderer.fadeInRipple(e, i, {
                    ...this.rippleConfig,
                    ...r,
                  })
                : this._rippleRenderer.fadeInRipple(0, 0, {
                    ...this.rippleConfig,
                    ...e,
                  });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(U), p(V), p(it), p(n2, 8), p(mn, 8));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [
                ["", "mat-ripple", ""],
                ["", "matRipple", ""],
              ],
              hostAttrs: [1, "mat-ripple"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && ke("mat-ripple-unbounded", i.unbounded);
              },
              inputs: {
                color: ["matRippleColor", "color"],
                unbounded: ["matRippleUnbounded", "unbounded"],
                centered: ["matRippleCentered", "centered"],
                radius: ["matRippleRadius", "radius"],
                animation: ["matRippleAnimation", "animation"],
                disabled: ["matRippleDisabled", "disabled"],
                trigger: ["matRippleTrigger", "trigger"],
              },
              exportAs: ["matRipple"],
            })),
            n
          );
        })(),
        Gw = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ imports: [Xe, Xe] })),
            n
          );
        })(),
        r2 = (() => {
          class n {
            constructor(e) {
              (this._animationMode = e),
                (this.state = "unchecked"),
                (this.disabled = !1),
                (this.appearance = "full");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(mn, 8));
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["mat-pseudo-checkbox"]],
              hostAttrs: [1, "mat-pseudo-checkbox"],
              hostVars: 12,
              hostBindings: function (e, i) {
                2 & e &&
                  ke(
                    "mat-pseudo-checkbox-indeterminate",
                    "indeterminate" === i.state
                  )("mat-pseudo-checkbox-checked", "checked" === i.state)(
                    "mat-pseudo-checkbox-disabled",
                    i.disabled
                  )("mat-pseudo-checkbox-minimal", "minimal" === i.appearance)(
                    "mat-pseudo-checkbox-full",
                    "full" === i.appearance
                  )(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  );
              },
              inputs: {
                state: "state",
                disabled: "disabled",
                appearance: "appearance",
              },
              decls: 0,
              vars: 0,
              template: function (e, i) {},
              styles: [
                '.mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        o2 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ imports: [Xe] })),
            n
          );
        })();
      const Ww = new C("MAT_OPTION_PARENT_COMPONENT"),
        qw = new C("MatOptgroup");
      let s2 = 0;
      class a2 {
        constructor(t, e = !1) {
          (this.source = t), (this.isUserInput = e);
        }
      }
      let l2 = (() => {
          class n {
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(e) {
              this._disabled = ae(e);
            }
            get disableRipple() {
              return !(!this._parent || !this._parent.disableRipple);
            }
            get hideSingleSelectionIndicator() {
              return !(
                !this._parent || !this._parent.hideSingleSelectionIndicator
              );
            }
            constructor(e, i, r, o) {
              (this._element = e),
                (this._changeDetectorRef = i),
                (this._parent = r),
                (this.group = o),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ""),
                (this.id = "mat-option-" + s2++),
                (this.onSelectionChange = new Q()),
                (this._stateChanges = new A());
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._text?.nativeElement.textContent || "").trim();
            }
            select() {
              this._selected ||
                ((this._selected = !0),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            focus(e, i) {
              const r = this._getHostElement();
              "function" == typeof r.focus && r.focus(i);
            }
            setActiveStyles() {
              this._active ||
                ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active &&
                ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(e) {
              (13 === e.keyCode || 32 === e.keyCode) &&
                !vi(e) &&
                (this._selectViaInteraction(), e.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getTabIndex() {
              return this.disabled ? "-1" : "0";
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const e = this.viewValue;
                e !== this._mostRecentViewValue &&
                  (this._mostRecentViewValue && this._stateChanges.next(),
                  (this._mostRecentViewValue = e));
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(e = !1) {
              this.onSelectionChange.emit(new a2(this, e));
            }
          }
          return (
            (n.ɵfac = function (e) {
              Rr();
            }),
            (n.ɵdir = x({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && Oe(BL, 7), 2 & e)) {
                  let r;
                  q((r = Y())) && (i._text = r.first);
                }
              },
              inputs: { value: "value", id: "id", disabled: "disabled" },
              outputs: { onSelectionChange: "onSelectionChange" },
            })),
            n
          );
        })(),
        Yw = (() => {
          class n extends l2 {
            constructor(e, i, r, o) {
              super(e, i, r, o);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(U), p(zt), p(Ww, 8), p(qw, 8));
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["mat-option"]],
              hostAttrs: [
                "role",
                "option",
                1,
                "mat-mdc-option",
                "mdc-list-item",
              ],
              hostVars: 11,
              hostBindings: function (e, i) {
                1 & e &&
                  ve("click", function () {
                    return i._selectViaInteraction();
                  })("keydown", function (o) {
                    return i._handleKeydown(o);
                  }),
                  2 & e &&
                    ($r("id", i.id),
                    Se("aria-selected", i.selected)(
                      "aria-disabled",
                      i.disabled.toString()
                    ),
                    ke("mdc-list-item--selected", i.selected)(
                      "mat-mdc-option-multiple",
                      i.multiple
                    )("mat-mdc-option-active", i.active)(
                      "mdc-list-item--disabled",
                      i.disabled
                    ));
              },
              exportAs: ["matOption"],
              features: [T],
              ngContentSelectors: UL,
              decls: 8,
              vars: 5,
              consts: [
                [
                  "class",
                  "mat-mdc-option-pseudo-checkbox",
                  3,
                  "state",
                  "disabled",
                  4,
                  "ngIf",
                ],
                [1, "mdc-list-item__primary-text"],
                ["text", ""],
                [
                  "class",
                  "mat-mdc-option-pseudo-checkbox",
                  "state",
                  "checked",
                  "appearance",
                  "minimal",
                  3,
                  "disabled",
                  4,
                  "ngIf",
                ],
                ["class", "cdk-visually-hidden", 4, "ngIf"],
                [
                  "mat-ripple",
                  "",
                  1,
                  "mat-mdc-option-ripple",
                  "mat-mdc-focus-indicator",
                  3,
                  "matRippleTrigger",
                  "matRippleDisabled",
                ],
                [1, "mat-mdc-option-pseudo-checkbox", 3, "state", "disabled"],
                [
                  "state",
                  "checked",
                  "appearance",
                  "minimal",
                  1,
                  "mat-mdc-option-pseudo-checkbox",
                  3,
                  "disabled",
                ],
                [1, "cdk-visually-hidden"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Tn($L),
                  W(0, HL, 1, 2, "mat-pseudo-checkbox", 0),
                  Ve(1),
                  F(2, "span", 1, 2),
                  Ve(4, 1),
                  N(),
                  W(5, jL, 1, 1, "mat-pseudo-checkbox", 3),
                  W(6, zL, 2, 1, "span", 4),
                  we(7, "div", 5)),
                  2 & e &&
                    (k("ngIf", i.multiple),
                    O(5),
                    k(
                      "ngIf",
                      !i.multiple &&
                        i.selected &&
                        !i.hideSingleSelectionIndicator
                    ),
                    O(1),
                    k("ngIf", i.group && i.group._inert),
                    O(1),
                    k("matRippleTrigger", i._getHostElement())(
                      "matRippleDisabled",
                      i.disabled || i.disableRipple
                    ));
              },
              dependencies: [mf, ns, r2],
              styles: [
                '.mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:""}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        Kw = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ imports: [Gw, kn, Xe, o2] })),
            n
          );
        })();
      class Zw {}
      class u2 {}
      const ri = "*";
      function yn(n, t) {
        return { type: 7, name: n, definitions: t, options: {} };
      }
      function gt(n, t = null) {
        return { type: 4, styles: t, timings: n };
      }
      function Qw(n, t = null) {
        return { type: 2, steps: n, options: t };
      }
      function he(n) {
        return { type: 6, styles: n, offset: null };
      }
      function rt(n, t, e) {
        return { type: 0, name: n, styles: t, options: e };
      }
      function Ol(n) {
        return { type: 5, steps: n };
      }
      function ot(n, t, e = null) {
        return { type: 1, expr: n, animation: t, options: e };
      }
      function Fl(n = null) {
        return { type: 9, options: n };
      }
      function Pl(n, t, e = null) {
        return { type: 11, selector: n, animation: t, options: e };
      }
      function Jw(n) {
        Promise.resolve().then(n);
      }
      class ys {
        constructor(t = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = t + e);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        onStart(t) {
          this._originalOnStartFns.push(t), this._onStartFns.push(t);
        }
        onDone(t) {
          this._originalOnDoneFns.push(t), this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          Jw(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(t) {
          this._position = this.totalTime ? t * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class e0 {
        constructor(t) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = t);
          let e = 0,
            i = 0,
            r = 0;
          const o = this.players.length;
          0 == o
            ? Jw(() => this._onFinish())
            : this.players.forEach((s) => {
                s.onDone(() => {
                  ++e == o && this._onFinish();
                }),
                  s.onDestroy(() => {
                    ++i == o && this._onDestroy();
                  }),
                  s.onStart(() => {
                    ++r == o && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (s, a) => Math.max(s, a.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((t) => t.init());
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((t) => t()),
            (this._onStartFns = []));
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((t) => t.play());
        }
        pause() {
          this.players.forEach((t) => t.pause());
        }
        restart() {
          this.players.forEach((t) => t.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((t) => t.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((t) => t.destroy()),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((t) => t.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(t) {
          const e = t * this.totalTime;
          this.players.forEach((i) => {
            const r = i.totalTime ? Math.min(1, e / i.totalTime) : 1;
            i.setPosition(r);
          });
        }
        getPosition() {
          const t = this.players.reduce(
            (e, i) => (null === e || i.totalTime > e.totalTime ? i : e),
            null
          );
          return null != t ? t.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((t) => {
            t.beforeDestroy && t.beforeDestroy();
          });
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      const gf = "!";
      function h2(n, t) {}
      class Nl {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.maxWidth = "80vw"),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = "first-tabbable"),
            (this.restoreFocus = !0),
            (this.delayFocusTrap = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const _f = "mdc-dialog--open",
        t0 = "mdc-dialog--opening",
        n0 = "mdc-dialog--closing";
      let m2 = (() => {
        class n extends Rw {
          constructor(e, i, r, o, s, a, l, c) {
            super(e, i, r, o, s, a, l, c),
              (this._animationStateChanged = new Q());
          }
          _captureInitialFocus() {
            this._config.delayFocusTrap || this._trapFocus();
          }
          _openAnimationDone(e) {
            this._config.delayFocusTrap && this._trapFocus(),
              this._animationStateChanged.next({
                state: "opened",
                totalTime: e,
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              p(U),
              p(lf),
              p(ne, 8),
              p(Nl),
              p(Il),
              p(V),
              p(ps),
              p(to)
            );
          }),
          (n.ɵcmp = Ee({
            type: n,
            selectors: [["ng-component"]],
            features: [T],
            decls: 0,
            vars: 0,
            template: function (e, i) {},
            encapsulation: 2,
          })),
          n
        );
      })();
      const r0 = "--mat-dialog-transition-duration";
      function o0(n) {
        return null == n
          ? null
          : "number" == typeof n
          ? n
          : n.endsWith("ms")
          ? $t(n.substring(0, n.length - 2))
          : n.endsWith("s")
          ? 1e3 * $t(n.substring(0, n.length - 1))
          : "0" === n
          ? 0
          : null;
      }
      let g2 = (() => {
        class n extends m2 {
          constructor(e, i, r, o, s, a, l, c, d) {
            super(e, i, r, o, s, a, l, d),
              (this._animationMode = c),
              (this._animationsEnabled =
                "NoopAnimations" !== this._animationMode),
              (this._hostElement = this._elementRef.nativeElement),
              (this._openAnimationDuration = this._animationsEnabled
                ? o0(this._config.enterAnimationDuration) ?? 150
                : 0),
              (this._closeAnimationDuration = this._animationsEnabled
                ? o0(this._config.exitAnimationDuration) ?? 75
                : 0),
              (this._animationTimer = null),
              (this._finishDialogOpen = () => {
                this._clearAnimationClasses(),
                  this._openAnimationDone(this._openAnimationDuration);
              }),
              (this._finishDialogClose = () => {
                this._clearAnimationClasses(),
                  this._animationStateChanged.emit({
                    state: "closed",
                    totalTime: this._closeAnimationDuration,
                  });
              });
          }
          _contentAttached() {
            super._contentAttached(), this._startOpenAnimation();
          }
          ngOnDestroy() {
            super.ngOnDestroy(),
              null !== this._animationTimer &&
                clearTimeout(this._animationTimer);
          }
          _startOpenAnimation() {
            this._animationStateChanged.emit({
              state: "opening",
              totalTime: this._openAnimationDuration,
            }),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    r0,
                    `${this._openAnimationDuration}ms`
                  ),
                  this._requestAnimationFrame(() =>
                    this._hostElement.classList.add(t0, _f)
                  ),
                  this._waitForAnimationToComplete(
                    this._openAnimationDuration,
                    this._finishDialogOpen
                  ))
                : (this._hostElement.classList.add(_f),
                  Promise.resolve().then(() => this._finishDialogOpen()));
          }
          _startExitAnimation() {
            this._animationStateChanged.emit({
              state: "closing",
              totalTime: this._closeAnimationDuration,
            }),
              this._hostElement.classList.remove(_f),
              this._animationsEnabled
                ? (this._hostElement.style.setProperty(
                    r0,
                    `${this._openAnimationDuration}ms`
                  ),
                  this._requestAnimationFrame(() =>
                    this._hostElement.classList.add(n0)
                  ),
                  this._waitForAnimationToComplete(
                    this._closeAnimationDuration,
                    this._finishDialogClose
                  ))
                : Promise.resolve().then(() => this._finishDialogClose());
          }
          _clearAnimationClasses() {
            this._hostElement.classList.remove(t0, n0);
          }
          _waitForAnimationToComplete(e, i) {
            null !== this._animationTimer && clearTimeout(this._animationTimer),
              (this._animationTimer = setTimeout(i, e));
          }
          _requestAnimationFrame(e) {
            this._ngZone.runOutsideAngular(() => {
              "function" == typeof requestAnimationFrame
                ? requestAnimationFrame(e)
                : e();
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              p(U),
              p(lf),
              p(ne, 8),
              p(Nl),
              p(Il),
              p(V),
              p(ps),
              p(mn, 8),
              p(to)
            );
          }),
          (n.ɵcmp = Ee({
            type: n,
            selectors: [["mat-dialog-container"]],
            hostAttrs: [
              "tabindex",
              "-1",
              1,
              "mat-mdc-dialog-container",
              "mdc-dialog",
            ],
            hostVars: 8,
            hostBindings: function (e, i) {
              2 & e &&
                ($r("id", i._config.id),
                Se("aria-modal", i._config.ariaModal)("role", i._config.role)(
                  "aria-labelledby",
                  i._config.ariaLabel ? null : i._ariaLabelledBy
                )("aria-label", i._config.ariaLabel)(
                  "aria-describedby",
                  i._config.ariaDescribedBy || null
                ),
                ke("_mat-animation-noopable", !i._animationsEnabled));
            },
            features: [T],
            decls: 3,
            vars: 0,
            consts: [
              [1, "mdc-dialog__container"],
              [1, "mat-mdc-dialog-surface", "mdc-dialog__surface"],
              ["cdkPortalOutlet", ""],
            ],
            template: function (e, i) {
              1 & e &&
                (F(0, "div", 0)(1, "div", 1),
                W(2, h2, 0, 0, "ng-template", 2),
                N()());
            },
            dependencies: [Xh],
            styles: [
              '.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{display:block;width:100%;height:100%}.mat-mdc-dialog-container{outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, var(--mdc-shape-medium, 4px))}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title,.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__actions,.mat-mdc-dialog-container.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer .mdc-dialog__actions{border-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title{border-bottom-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, "Arial");line-height:var(--mdc-dialog-subhead-line-height, 14px);font-size:var(--mdc-dialog-subhead-size, 14px);font-weight:var(--mdc-dialog-subhead-weight, 500);letter-spacing:var(--mdc-dialog-subhead-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, black)}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, "Arial");line-height:var(--mdc-dialog-supporting-text-line-height, 14px);font-size:var(--mdc-dialog-supporting-text-size, 14px);font-weight:var(--mdc-dialog-supporting-text-weight, 500);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, black)}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}',
            ],
            encapsulation: 2,
          })),
          n
        );
      })();
      class _2 {
        constructor(t, e, i) {
          (this._ref = t),
            (this._containerInstance = i),
            (this._afterOpened = new A()),
            (this._beforeClosed = new A()),
            (this._state = 0),
            (this.disableClose = e.disableClose),
            (this.id = t.id),
            i._animationStateChanged
              .pipe(
                On((r) => "opened" === r.state),
                Gt(1)
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            i._animationStateChanged
              .pipe(
                On((r) => "closed" === r.state),
                Gt(1)
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            t.overlayRef.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._finishDialogClose();
            }),
            Pt(
              this.backdropClick(),
              this.keydownEvents().pipe(
                On((r) => 27 === r.keyCode && !this.disableClose && !vi(r))
              )
            ).subscribe((r) => {
              this.disableClose ||
                (r.preventDefault(),
                (function b2(n, t, e) {
                  (n._closeInteractionType = t), n.close(e);
                })(this, "keydown" === r.type ? "keyboard" : "mouse"));
            });
        }
        close(t) {
          (this._result = t),
            this._containerInstance._animationStateChanged
              .pipe(
                On((e) => "closing" === e.state),
                Gt(1)
              )
              .subscribe((e) => {
                this._beforeClosed.next(t),
                  this._beforeClosed.complete(),
                  this._ref.overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    e.totalTime + 100
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._ref.closed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._ref.backdropClick;
        }
        keydownEvents() {
          return this._ref.keydownEvents;
        }
        updatePosition(t) {
          let e = this._ref.config.positionStrategy;
          return (
            t && (t.left || t.right)
              ? t.left
                ? e.left(t.left)
                : e.right(t.right)
              : e.centerHorizontally(),
            t && (t.top || t.bottom)
              ? t.top
                ? e.top(t.top)
                : e.bottom(t.bottom)
              : e.centerVertically(),
            this._ref.updatePosition(),
            this
          );
        }
        updateSize(t = "", e = "") {
          return this._ref.updateSize(t, e), this;
        }
        addPanelClass(t) {
          return this._ref.addPanelClass(t), this;
        }
        removePanelClass(t) {
          return this._ref.removePanelClass(t), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2),
            this._ref.close(this._result, {
              focusOrigin: this._closeInteractionType,
            }),
            (this.componentInstance = null);
        }
      }
      const y2 = new C("MatMdcDialogData"),
        v2 = new C("mat-mdc-dialog-default-options"),
        s0 = new C("mat-mdc-dialog-scroll-strategy"),
        w2 = {
          provide: s0,
          deps: [Fn],
          useFactory: function D2(n) {
            return () => n.scrollStrategies.block();
          },
        };
      let x2 = 0,
        C2 = (() => {
          class n {
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const e = this._parentDialog;
              return e
                ? e._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            constructor(e, i, r, o, s, a, l, c, d, u) {
              (this._overlay = e),
                (this._defaultOptions = r),
                (this._parentDialog = o),
                (this._dialogRefConstructor = l),
                (this._dialogContainerType = c),
                (this._dialogDataToken = d),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new A()),
                (this._afterOpenedAtThisLevel = new A()),
                (this._idPrefix = "mat-dialog-"),
                (this.dialogConfigClass = Nl),
                (this.afterAllClosed = hf(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe(ni(void 0))
                )),
                (this._scrollStrategy = a),
                (this._dialog = i.get(Ow));
            }
            open(e, i) {
              let r;
              ((i = { ...(this._defaultOptions || new Nl()), ...i }).id =
                i.id || `${this._idPrefix}${x2++}`),
                (i.scrollStrategy = i.scrollStrategy || this._scrollStrategy());
              const o = this._dialog.open(e, {
                ...i,
                positionStrategy: this._overlay
                  .position()
                  .global()
                  .centerHorizontally()
                  .centerVertically(),
                disableClose: !0,
                closeOnDestroy: !1,
                closeOnOverlayDetachments: !1,
                container: {
                  type: this._dialogContainerType,
                  providers: () => [
                    { provide: this.dialogConfigClass, useValue: i },
                    { provide: kl, useValue: i },
                  ],
                },
                templateContext: () => ({ dialogRef: r }),
                providers: (s, a, l) => (
                  (r = new this._dialogRefConstructor(s, i, l)),
                  r.updatePosition(i?.position),
                  [
                    { provide: this._dialogContainerType, useValue: l },
                    { provide: this._dialogDataToken, useValue: a.data },
                    { provide: this._dialogRefConstructor, useValue: r },
                  ]
                ),
              });
              return (
                (r.componentInstance = o.componentInstance),
                this.openDialogs.push(r),
                this.afterOpened.next(r),
                r.afterClosed().subscribe(() => {
                  const s = this.openDialogs.indexOf(r);
                  s > -1 &&
                    (this.openDialogs.splice(s, 1),
                    this.openDialogs.length ||
                      this._getAfterAllClosed().next());
                }),
                r
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(e) {
              return this.openDialogs.find((i) => i.id === e);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _closeDialogs(e) {
              let i = e.length;
              for (; i--; ) e[i].close();
            }
          }
          return (
            (n.ɵfac = function (e) {
              Rr();
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        bf = (() => {
          class n extends C2 {
            constructor(e, i, r, o, s, a, l, c) {
              super(e, i, o, a, l, s, _2, g2, y2, c),
                (this._idPrefix = "mat-mdc-dialog-");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                b(Fn),
                b(kt),
                b(ch, 8),
                b(v2, 8),
                b(s0),
                b(n, 12),
                b(El),
                b(mn, 8)
              );
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        E2 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({
              providers: [bf, w2],
              imports: [VL, Sl, Dl, Xe, Xe],
            })),
            n
          );
        })();
      class M2 extends De {
        constructor(t, e) {
          super(),
            (this.source = t),
            (this.subjectFactory = e),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            Yp(t) && (this.lift = t.lift);
        }
        _subscribe(t) {
          return this.getSubject().subscribe(t);
        }
        getSubject() {
          const t = this._subject;
          return (
            (!t || t.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: t } = this;
          (this._subject = this._connection = null), t?.unsubscribe();
        }
        connect() {
          let t = this._connection;
          if (!t) {
            t = this._connection = new xe();
            const e = this.getSubject();
            t.add(
              this.source.subscribe(
                Qe(
                  e,
                  void 0,
                  () => {
                    this._teardown(), e.complete();
                  },
                  (i) => {
                    this._teardown(), e.error(i);
                  },
                  () => this._teardown()
                )
              )
            ),
              t.closed && ((this._connection = null), (t = xe.EMPTY));
          }
          return t;
        }
        refCount() {
          return (function S2() {
            return dt((n, t) => {
              let e = null;
              n._refCount++;
              const i = Qe(t, void 0, void 0, void 0, () => {
                if (!n || n._refCount <= 0 || 0 < --n._refCount)
                  return void (e = null);
                const r = n._connection,
                  o = e;
                (e = null),
                  r && (!o || r === o) && r.unsubscribe(),
                  t.unsubscribe();
              });
              n.subscribe(i), i.closed || (e = n.connect());
            });
          })()(this);
        }
      }
      class T2 {}
      function yf(n) {
        return n && "function" == typeof n.connect && !(n instanceof M2);
      }
      class l0 {
        applyChanges(t, e, i, r, o) {
          t.forEachOperation((s, a, l) => {
            let c, d;
            if (null == s.previousIndex) {
              const u = i(s, a, l);
              (c = e.createEmbeddedView(u.templateRef, u.context, u.index)),
                (d = 1);
            } else
              null == l
                ? (e.remove(a), (d = 3))
                : ((c = e.get(a)), e.move(c, l), (d = 2));
            o && o({ context: c?.context, operation: d, record: s });
          });
        }
        detach() {}
      }
      class A2 {
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        constructor(t = !1, e, i = !0, r) {
          (this._multiple = t),
            (this._emitChanges = i),
            (this.compareWith = r),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new A()),
            e &&
              e.length &&
              (t
                ? e.forEach((o) => this._markSelected(o))
                : this._markSelected(e[0]),
              (this._selectedToEmit.length = 0));
        }
        select(...t) {
          this._verifyValueAssignment(t),
            t.forEach((i) => this._markSelected(i));
          const e = this._hasQueuedChanges();
          return this._emitChangeEvent(), e;
        }
        deselect(...t) {
          this._verifyValueAssignment(t),
            t.forEach((i) => this._unmarkSelected(i));
          const e = this._hasQueuedChanges();
          return this._emitChangeEvent(), e;
        }
        setSelection(...t) {
          this._verifyValueAssignment(t);
          const e = this.selected,
            i = new Set(t);
          t.forEach((o) => this._markSelected(o)),
            e.filter((o) => !i.has(o)).forEach((o) => this._unmarkSelected(o));
          const r = this._hasQueuedChanges();
          return this._emitChangeEvent(), r;
        }
        toggle(t) {
          return this.isSelected(t) ? this.deselect(t) : this.select(t);
        }
        clear(t = !0) {
          this._unmarkAll();
          const e = this._hasQueuedChanges();
          return t && this._emitChangeEvent(), e;
        }
        isSelected(t) {
          return this._selection.has(this._getConcreteValue(t));
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(t) {
          this._multiple && this.selected && this._selected.sort(t);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(t) {
          (t = this._getConcreteValue(t)),
            this.isSelected(t) ||
              (this._multiple || this._unmarkAll(),
              this.isSelected(t) || this._selection.add(t),
              this._emitChanges && this._selectedToEmit.push(t));
        }
        _unmarkSelected(t) {
          (t = this._getConcreteValue(t)),
            this.isSelected(t) &&
              (this._selection.delete(t),
              this._emitChanges && this._deselectedToEmit.push(t));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach((t) => this._unmarkSelected(t));
        }
        _verifyValueAssignment(t) {}
        _hasQueuedChanges() {
          return !(
            !this._deselectedToEmit.length && !this._selectedToEmit.length
          );
        }
        _getConcreteValue(t) {
          if (this.compareWith) {
            for (let e of this._selection) if (this.compareWith(t, e)) return e;
            return t;
          }
          return t;
        }
      }
      const vs = new C("_ViewRepeater"),
        R2 = [[["caption"]], [["colgroup"], ["col"]]],
        k2 = ["caption", "colgroup, col"];
      function vf(n) {
        return class extends n {
          get sticky() {
            return this._sticky;
          }
          set sticky(t) {
            const e = this._sticky;
            (this._sticky = ae(t)),
              (this._hasStickyChanged = e !== this._sticky);
          }
          hasStickyChanged() {
            const t = this._hasStickyChanged;
            return (this._hasStickyChanged = !1), t;
          }
          resetStickyChanged() {
            this._hasStickyChanged = !1;
          }
          constructor(...t) {
            super(...t), (this._sticky = !1), (this._hasStickyChanged = !1);
          }
        };
      }
      const no = new C("CDK_TABLE");
      let io = (() => {
          class n {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p($e));
            }),
            (n.ɵdir = x({ type: n, selectors: [["", "cdkCellDef", ""]] })),
            n
          );
        })(),
        ro = (() => {
          class n {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p($e));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "cdkHeaderCellDef", ""]],
            })),
            n
          );
        })(),
        Ll = (() => {
          class n {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p($e));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "cdkFooterCellDef", ""]],
            })),
            n
          );
        })();
      class N2 {}
      const L2 = vf(N2);
      let oi = (() => {
        class n extends L2 {
          get name() {
            return this._name;
          }
          set name(e) {
            this._setNameInput(e);
          }
          get stickyEnd() {
            return this._stickyEnd;
          }
          set stickyEnd(e) {
            const i = this._stickyEnd;
            (this._stickyEnd = ae(e)),
              (this._hasStickyChanged = i !== this._stickyEnd);
          }
          constructor(e) {
            super(), (this._table = e), (this._stickyEnd = !1);
          }
          _updateColumnCssClassName() {
            this._columnCssClassName = [
              `cdk-column-${this.cssClassFriendlyName}`,
            ];
          }
          _setNameInput(e) {
            e &&
              ((this._name = e),
              (this.cssClassFriendlyName = e.replace(/[^a-z0-9_-]/gi, "-")),
              this._updateColumnCssClassName());
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(p(no, 8));
          }),
          (n.ɵdir = x({
            type: n,
            selectors: [["", "cdkColumnDef", ""]],
            contentQueries: function (e, i, r) {
              if (
                (1 & e && (He(r, io, 5), He(r, ro, 5), He(r, Ll, 5)), 2 & e)
              ) {
                let o;
                q((o = Y())) && (i.cell = o.first),
                  q((o = Y())) && (i.headerCell = o.first),
                  q((o = Y())) && (i.footerCell = o.first);
              }
            },
            inputs: {
              sticky: "sticky",
              name: ["cdkColumnDef", "name"],
              stickyEnd: "stickyEnd",
            },
            features: [
              j([{ provide: "MAT_SORT_HEADER_COLUMN_DEF", useExisting: n }]),
              T,
            ],
          })),
          n
        );
      })();
      class Df {
        constructor(t, e) {
          e.nativeElement.classList.add(...t._columnCssClassName);
        }
      }
      let wf = (() => {
          class n extends Df {
            constructor(e, i) {
              super(e, i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(oi), p(U));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["cdk-header-cell"], ["th", "cdk-header-cell", ""]],
              hostAttrs: ["role", "columnheader", 1, "cdk-header-cell"],
              features: [T],
            })),
            n
          );
        })(),
        xf = (() => {
          class n extends Df {
            constructor(e, i) {
              if (
                (super(e, i),
                1 === e._table?._elementRef.nativeElement.nodeType)
              ) {
                const r =
                  e._table._elementRef.nativeElement.getAttribute("role");
                i.nativeElement.setAttribute(
                  "role",
                  "grid" === r || "treegrid" === r ? "gridcell" : "cell"
                );
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(oi), p(U));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["cdk-cell"], ["td", "cdk-cell", ""]],
              hostAttrs: [1, "cdk-cell"],
              features: [T],
            })),
            n
          );
        })();
      class u0 {
        constructor() {
          (this.tasks = []), (this.endTasks = []);
        }
      }
      const Cf = new C("_COALESCED_STYLE_SCHEDULER");
      let h0 = (() => {
          class n {
            constructor(e) {
              (this._ngZone = e),
                (this._currentSchedule = null),
                (this._destroyed = new A());
            }
            schedule(e) {
              this._createScheduleIfNeeded(),
                this._currentSchedule.tasks.push(e);
            }
            scheduleEnd(e) {
              this._createScheduleIfNeeded(),
                this._currentSchedule.endTasks.push(e);
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _createScheduleIfNeeded() {
              this._currentSchedule ||
                ((this._currentSchedule = new u0()),
                this._getScheduleObservable()
                  .pipe(ge(this._destroyed))
                  .subscribe(() => {
                    for (
                      ;
                      this._currentSchedule.tasks.length ||
                      this._currentSchedule.endTasks.length;

                    ) {
                      const e = this._currentSchedule;
                      this._currentSchedule = new u0();
                      for (const i of e.tasks) i();
                      for (const i of e.endTasks) i();
                    }
                    this._currentSchedule = null;
                  }));
            }
            _getScheduleObservable() {
              return this._ngZone.isStable
                ? Ai(Promise.resolve(void 0))
                : this._ngZone.onStable.pipe(Gt(1));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(V));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Ef = (() => {
          class n {
            constructor(e, i) {
              (this.template = e), (this._differs = i);
            }
            ngOnChanges(e) {
              if (!this._columnsDiffer) {
                const i = (e.columns && e.columns.currentValue) || [];
                (this._columnsDiffer = this._differs.find(i).create()),
                  this._columnsDiffer.diff(i);
              }
            }
            getColumnsDiff() {
              return this._columnsDiffer.diff(this.columns);
            }
            extractCellTemplate(e) {
              return this instanceof Ds
                ? e.headerCell.template
                : this instanceof ws
                ? e.footerCell.template
                : e.cell.template;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p($e), p(Jn));
            }),
            (n.ɵdir = x({ type: n, features: [at] })),
            n
          );
        })();
      class V2 extends Ef {}
      const B2 = vf(V2);
      let Ds = (() => {
        class n extends B2 {
          constructor(e, i, r) {
            super(e, i), (this._table = r);
          }
          ngOnChanges(e) {
            super.ngOnChanges(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(p($e), p(Jn), p(no, 8));
          }),
          (n.ɵdir = x({
            type: n,
            selectors: [["", "cdkHeaderRowDef", ""]],
            inputs: {
              columns: ["cdkHeaderRowDef", "columns"],
              sticky: ["cdkHeaderRowDefSticky", "sticky"],
            },
            features: [T, at],
          })),
          n
        );
      })();
      class H2 extends Ef {}
      const j2 = vf(H2);
      let ws = (() => {
          class n extends j2 {
            constructor(e, i, r) {
              super(e, i), (this._table = r);
            }
            ngOnChanges(e) {
              super.ngOnChanges(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p($e), p(Jn), p(no, 8));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "cdkFooterRowDef", ""]],
              inputs: {
                columns: ["cdkFooterRowDef", "columns"],
                sticky: ["cdkFooterRowDefSticky", "sticky"],
              },
              features: [T, at],
            })),
            n
          );
        })(),
        Vl = (() => {
          class n extends Ef {
            constructor(e, i, r) {
              super(e, i), (this._table = r);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p($e), p(Jn), p(no, 8));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "cdkRowDef", ""]],
              inputs: {
                columns: ["cdkRowDefColumns", "columns"],
                when: ["cdkRowDefWhen", "when"],
              },
              features: [T],
            })),
            n
          );
        })(),
        si = (() => {
          class n {
            constructor(e) {
              (this._viewContainer = e), (n.mostRecentCellOutlet = this);
            }
            ngOnDestroy() {
              n.mostRecentCellOutlet === this &&
                (n.mostRecentCellOutlet = null);
            }
          }
          return (
            (n.mostRecentCellOutlet = null),
            (n.ɵfac = function (e) {
              return new (e || n)(p(tt));
            }),
            (n.ɵdir = x({ type: n, selectors: [["", "cdkCellOutlet", ""]] })),
            n
          );
        })(),
        Sf = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["cdk-header-row"], ["tr", "cdk-header-row", ""]],
              hostAttrs: ["role", "row", 1, "cdk-header-row"],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (e, i) {
                1 & e && Mn(0, 0);
              },
              dependencies: [si],
              encapsulation: 2,
            })),
            n
          );
        })(),
        Tf = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["cdk-row"], ["tr", "cdk-row", ""]],
              hostAttrs: ["role", "row", 1, "cdk-row"],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (e, i) {
                1 & e && Mn(0, 0);
              },
              dependencies: [si],
              encapsulation: 2,
            })),
            n
          );
        })(),
        Bl = (() => {
          class n {
            constructor(e) {
              (this.templateRef = e),
                (this._contentClassName = "cdk-no-data-row");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p($e));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["ng-template", "cdkNoDataRow", ""]],
            })),
            n
          );
        })();
      const f0 = ["top", "bottom", "left", "right"];
      class z2 {
        constructor(t, e, i, r, o = !0, s = !0, a) {
          (this._isNativeHtmlTable = t),
            (this._stickCellCss = e),
            (this.direction = i),
            (this._coalescedStyleScheduler = r),
            (this._isBrowser = o),
            (this._needsPositionStickyOnElement = s),
            (this._positionListener = a),
            (this._cachedCellWidths = []),
            (this._borderCellCss = {
              top: `${e}-border-elem-top`,
              bottom: `${e}-border-elem-bottom`,
              left: `${e}-border-elem-left`,
              right: `${e}-border-elem-right`,
            });
        }
        clearStickyPositioning(t, e) {
          const i = [];
          for (const r of t)
            if (r.nodeType === r.ELEMENT_NODE) {
              i.push(r);
              for (let o = 0; o < r.children.length; o++) i.push(r.children[o]);
            }
          this._coalescedStyleScheduler.schedule(() => {
            for (const r of i) this._removeStickyStyle(r, e);
          });
        }
        updateStickyColumns(t, e, i, r = !0) {
          if (
            !t.length ||
            !this._isBrowser ||
            (!e.some((h) => h) && !i.some((h) => h))
          )
            return void (
              this._positionListener &&
              (this._positionListener.stickyColumnsUpdated({ sizes: [] }),
              this._positionListener.stickyEndColumnsUpdated({ sizes: [] }))
            );
          const o = t[0],
            s = o.children.length,
            a = this._getCellWidths(o, r),
            l = this._getStickyStartColumnPositions(a, e),
            c = this._getStickyEndColumnPositions(a, i),
            d = e.lastIndexOf(!0),
            u = i.indexOf(!0);
          this._coalescedStyleScheduler.schedule(() => {
            const h = "rtl" === this.direction,
              f = h ? "right" : "left",
              m = h ? "left" : "right";
            for (const g of t)
              for (let _ = 0; _ < s; _++) {
                const v = g.children[_];
                e[_] && this._addStickyStyle(v, f, l[_], _ === d),
                  i[_] && this._addStickyStyle(v, m, c[_], _ === u);
              }
            this._positionListener &&
              (this._positionListener.stickyColumnsUpdated({
                sizes:
                  -1 === d
                    ? []
                    : a.slice(0, d + 1).map((g, _) => (e[_] ? g : null)),
              }),
              this._positionListener.stickyEndColumnsUpdated({
                sizes:
                  -1 === u
                    ? []
                    : a
                        .slice(u)
                        .map((g, _) => (i[_ + u] ? g : null))
                        .reverse(),
              }));
          });
        }
        stickRows(t, e, i) {
          if (!this._isBrowser) return;
          const r = "bottom" === i ? t.slice().reverse() : t,
            o = "bottom" === i ? e.slice().reverse() : e,
            s = [],
            a = [],
            l = [];
          for (let d = 0, u = 0; d < r.length; d++) {
            if (!o[d]) continue;
            s[d] = u;
            const h = r[d];
            l[d] = this._isNativeHtmlTable ? Array.from(h.children) : [h];
            const f = h.getBoundingClientRect().height;
            (u += f), (a[d] = f);
          }
          const c = o.lastIndexOf(!0);
          this._coalescedStyleScheduler.schedule(() => {
            for (let d = 0; d < r.length; d++) {
              if (!o[d]) continue;
              const u = s[d],
                h = d === c;
              for (const f of l[d]) this._addStickyStyle(f, i, u, h);
            }
            "top" === i
              ? this._positionListener?.stickyHeaderRowsUpdated({
                  sizes: a,
                  offsets: s,
                  elements: l,
                })
              : this._positionListener?.stickyFooterRowsUpdated({
                  sizes: a,
                  offsets: s,
                  elements: l,
                });
          });
        }
        updateStickyFooterContainer(t, e) {
          if (!this._isNativeHtmlTable) return;
          const i = t.querySelector("tfoot");
          this._coalescedStyleScheduler.schedule(() => {
            e.some((r) => !r)
              ? this._removeStickyStyle(i, ["bottom"])
              : this._addStickyStyle(i, "bottom", 0, !1);
          });
        }
        _removeStickyStyle(t, e) {
          for (const r of e)
            (t.style[r] = ""), t.classList.remove(this._borderCellCss[r]);
          f0.some((r) => -1 === e.indexOf(r) && t.style[r])
            ? (t.style.zIndex = this._getCalculatedZIndex(t))
            : ((t.style.zIndex = ""),
              this._needsPositionStickyOnElement && (t.style.position = ""),
              t.classList.remove(this._stickCellCss));
        }
        _addStickyStyle(t, e, i, r) {
          t.classList.add(this._stickCellCss),
            r && t.classList.add(this._borderCellCss[e]),
            (t.style[e] = `${i}px`),
            (t.style.zIndex = this._getCalculatedZIndex(t)),
            this._needsPositionStickyOnElement &&
              (t.style.cssText +=
                "position: -webkit-sticky; position: sticky; ");
        }
        _getCalculatedZIndex(t) {
          const e = { top: 100, bottom: 10, left: 1, right: 1 };
          let i = 0;
          for (const r of f0) t.style[r] && (i += e[r]);
          return i ? `${i}` : "";
        }
        _getCellWidths(t, e = !0) {
          if (!e && this._cachedCellWidths.length)
            return this._cachedCellWidths;
          const i = [],
            r = t.children;
          for (let o = 0; o < r.length; o++)
            i.push(r[o].getBoundingClientRect().width);
          return (this._cachedCellWidths = i), i;
        }
        _getStickyStartColumnPositions(t, e) {
          const i = [];
          let r = 0;
          for (let o = 0; o < t.length; o++) e[o] && ((i[o] = r), (r += t[o]));
          return i;
        }
        _getStickyEndColumnPositions(t, e) {
          const i = [];
          let r = 0;
          for (let o = t.length; o > 0; o--) e[o] && ((i[o] = r), (r += t[o]));
          return i;
        }
      }
      const Af = new C("CDK_SPL");
      let Hl = (() => {
          class n {
            constructor(e, i) {
              (this.viewContainer = e), (this.elementRef = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(tt), p(U));
            }),
            (n.ɵdir = x({ type: n, selectors: [["", "rowOutlet", ""]] })),
            n
          );
        })(),
        jl = (() => {
          class n {
            constructor(e, i) {
              (this.viewContainer = e), (this.elementRef = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(tt), p(U));
            }),
            (n.ɵdir = x({ type: n, selectors: [["", "headerRowOutlet", ""]] })),
            n
          );
        })(),
        zl = (() => {
          class n {
            constructor(e, i) {
              (this.viewContainer = e), (this.elementRef = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(tt), p(U));
            }),
            (n.ɵdir = x({ type: n, selectors: [["", "footerRowOutlet", ""]] })),
            n
          );
        })(),
        $l = (() => {
          class n {
            constructor(e, i) {
              (this.viewContainer = e), (this.elementRef = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(tt), p(U));
            }),
            (n.ɵdir = x({ type: n, selectors: [["", "noDataRowOutlet", ""]] })),
            n
          );
        })(),
        Ul = (() => {
          class n {
            get trackBy() {
              return this._trackByFn;
            }
            set trackBy(e) {
              this._trackByFn = e;
            }
            get dataSource() {
              return this._dataSource;
            }
            set dataSource(e) {
              this._dataSource !== e && this._switchDataSource(e);
            }
            get multiTemplateDataRows() {
              return this._multiTemplateDataRows;
            }
            set multiTemplateDataRows(e) {
              (this._multiTemplateDataRows = ae(e)),
                this._rowOutlet &&
                  this._rowOutlet.viewContainer.length &&
                  (this._forceRenderDataRows(),
                  this.updateStickyColumnStyles());
            }
            get fixedLayout() {
              return this._fixedLayout;
            }
            set fixedLayout(e) {
              (this._fixedLayout = ae(e)),
                (this._forceRecalculateCellWidths = !0),
                (this._stickyColumnStylesNeedReset = !0);
            }
            constructor(e, i, r, o, s, a, l, c, d, u, h, f) {
              (this._differs = e),
                (this._changeDetectorRef = i),
                (this._elementRef = r),
                (this._dir = s),
                (this._platform = l),
                (this._viewRepeater = c),
                (this._coalescedStyleScheduler = d),
                (this._viewportRuler = u),
                (this._stickyPositioningListener = h),
                (this._ngZone = f),
                (this._onDestroy = new A()),
                (this._columnDefsByName = new Map()),
                (this._customColumnDefs = new Set()),
                (this._customRowDefs = new Set()),
                (this._customHeaderRowDefs = new Set()),
                (this._customFooterRowDefs = new Set()),
                (this._headerRowDefChanged = !0),
                (this._footerRowDefChanged = !0),
                (this._stickyColumnStylesNeedReset = !0),
                (this._forceRecalculateCellWidths = !0),
                (this._cachedRenderRowsMap = new Map()),
                (this.stickyCssClass = "cdk-table-sticky"),
                (this.needsPositionStickyOnElement = !0),
                (this._isShowingNoDataRow = !1),
                (this._multiTemplateDataRows = !1),
                (this._fixedLayout = !1),
                (this.contentChanged = new Q()),
                (this.viewChange = new ms({ start: 0, end: Number.MAX_VALUE })),
                o ||
                  this._elementRef.nativeElement.setAttribute("role", "table"),
                (this._document = a),
                (this._isNativeHtmlTable =
                  "TABLE" === this._elementRef.nativeElement.nodeName);
            }
            ngOnInit() {
              this._setupStickyStyler(),
                this._isNativeHtmlTable && this._applyNativeTableSections(),
                (this._dataDiffer = this._differs
                  .find([])
                  .create((e, i) =>
                    this.trackBy ? this.trackBy(i.dataIndex, i.data) : i
                  )),
                this._viewportRuler
                  .change()
                  .pipe(ge(this._onDestroy))
                  .subscribe(() => {
                    this._forceRecalculateCellWidths = !0;
                  });
            }
            ngAfterContentChecked() {
              this._cacheRowDefs(), this._cacheColumnDefs();
              const i =
                this._renderUpdatedColumns() ||
                this._headerRowDefChanged ||
                this._footerRowDefChanged;
              (this._stickyColumnStylesNeedReset =
                this._stickyColumnStylesNeedReset || i),
                (this._forceRecalculateCellWidths = i),
                this._headerRowDefChanged &&
                  (this._forceRenderHeaderRows(),
                  (this._headerRowDefChanged = !1)),
                this._footerRowDefChanged &&
                  (this._forceRenderFooterRows(),
                  (this._footerRowDefChanged = !1)),
                this.dataSource &&
                this._rowDefs.length > 0 &&
                !this._renderChangeSubscription
                  ? this._observeRenderChanges()
                  : this._stickyColumnStylesNeedReset &&
                    this.updateStickyColumnStyles(),
                this._checkStickyStates();
            }
            ngOnDestroy() {
              [
                this._rowOutlet.viewContainer,
                this._headerRowOutlet.viewContainer,
                this._footerRowOutlet.viewContainer,
                this._cachedRenderRowsMap,
                this._customColumnDefs,
                this._customRowDefs,
                this._customHeaderRowDefs,
                this._customFooterRowDefs,
                this._columnDefsByName,
              ].forEach((e) => {
                e.clear();
              }),
                (this._headerRowDefs = []),
                (this._footerRowDefs = []),
                (this._defaultRowDef = null),
                this._onDestroy.next(),
                this._onDestroy.complete(),
                yf(this.dataSource) && this.dataSource.disconnect(this);
            }
            renderRows() {
              this._renderRows = this._getAllRenderRows();
              const e = this._dataDiffer.diff(this._renderRows);
              if (!e)
                return this._updateNoDataRow(), void this.contentChanged.next();
              const i = this._rowOutlet.viewContainer;
              this._viewRepeater.applyChanges(
                e,
                i,
                (r, o, s) => this._getEmbeddedViewArgs(r.item, s),
                (r) => r.item.data,
                (r) => {
                  1 === r.operation &&
                    r.context &&
                    this._renderCellTemplateForItem(
                      r.record.item.rowDef,
                      r.context
                    );
                }
              ),
                this._updateRowIndexContext(),
                e.forEachIdentityChange((r) => {
                  i.get(r.currentIndex).context.$implicit = r.item.data;
                }),
                this._updateNoDataRow(),
                this._ngZone && V.isInAngularZone()
                  ? this._ngZone.onStable
                      .pipe(Gt(1), ge(this._onDestroy))
                      .subscribe(() => {
                        this.updateStickyColumnStyles();
                      })
                  : this.updateStickyColumnStyles(),
                this.contentChanged.next();
            }
            addColumnDef(e) {
              this._customColumnDefs.add(e);
            }
            removeColumnDef(e) {
              this._customColumnDefs.delete(e);
            }
            addRowDef(e) {
              this._customRowDefs.add(e);
            }
            removeRowDef(e) {
              this._customRowDefs.delete(e);
            }
            addHeaderRowDef(e) {
              this._customHeaderRowDefs.add(e),
                (this._headerRowDefChanged = !0);
            }
            removeHeaderRowDef(e) {
              this._customHeaderRowDefs.delete(e),
                (this._headerRowDefChanged = !0);
            }
            addFooterRowDef(e) {
              this._customFooterRowDefs.add(e),
                (this._footerRowDefChanged = !0);
            }
            removeFooterRowDef(e) {
              this._customFooterRowDefs.delete(e),
                (this._footerRowDefChanged = !0);
            }
            setNoDataRow(e) {
              this._customNoDataRow = e;
            }
            updateStickyHeaderRowStyles() {
              const e = this._getRenderedRows(this._headerRowOutlet),
                r = this._elementRef.nativeElement.querySelector("thead");
              r && (r.style.display = e.length ? "" : "none");
              const o = this._headerRowDefs.map((s) => s.sticky);
              this._stickyStyler.clearStickyPositioning(e, ["top"]),
                this._stickyStyler.stickRows(e, o, "top"),
                this._headerRowDefs.forEach((s) => s.resetStickyChanged());
            }
            updateStickyFooterRowStyles() {
              const e = this._getRenderedRows(this._footerRowOutlet),
                r = this._elementRef.nativeElement.querySelector("tfoot");
              r && (r.style.display = e.length ? "" : "none");
              const o = this._footerRowDefs.map((s) => s.sticky);
              this._stickyStyler.clearStickyPositioning(e, ["bottom"]),
                this._stickyStyler.stickRows(e, o, "bottom"),
                this._stickyStyler.updateStickyFooterContainer(
                  this._elementRef.nativeElement,
                  o
                ),
                this._footerRowDefs.forEach((s) => s.resetStickyChanged());
            }
            updateStickyColumnStyles() {
              const e = this._getRenderedRows(this._headerRowOutlet),
                i = this._getRenderedRows(this._rowOutlet),
                r = this._getRenderedRows(this._footerRowOutlet);
              ((this._isNativeHtmlTable && !this._fixedLayout) ||
                this._stickyColumnStylesNeedReset) &&
                (this._stickyStyler.clearStickyPositioning(
                  [...e, ...i, ...r],
                  ["left", "right"]
                ),
                (this._stickyColumnStylesNeedReset = !1)),
                e.forEach((o, s) => {
                  this._addStickyColumnStyles([o], this._headerRowDefs[s]);
                }),
                this._rowDefs.forEach((o) => {
                  const s = [];
                  for (let a = 0; a < i.length; a++)
                    this._renderRows[a].rowDef === o && s.push(i[a]);
                  this._addStickyColumnStyles(s, o);
                }),
                r.forEach((o, s) => {
                  this._addStickyColumnStyles([o], this._footerRowDefs[s]);
                }),
                Array.from(this._columnDefsByName.values()).forEach((o) =>
                  o.resetStickyChanged()
                );
            }
            _getAllRenderRows() {
              const e = [],
                i = this._cachedRenderRowsMap;
              this._cachedRenderRowsMap = new Map();
              for (let r = 0; r < this._data.length; r++) {
                let o = this._data[r];
                const s = this._getRenderRowsForData(o, r, i.get(o));
                this._cachedRenderRowsMap.has(o) ||
                  this._cachedRenderRowsMap.set(o, new WeakMap());
                for (let a = 0; a < s.length; a++) {
                  let l = s[a];
                  const c = this._cachedRenderRowsMap.get(l.data);
                  c.has(l.rowDef)
                    ? c.get(l.rowDef).push(l)
                    : c.set(l.rowDef, [l]),
                    e.push(l);
                }
              }
              return e;
            }
            _getRenderRowsForData(e, i, r) {
              return this._getRowDefs(e, i).map((s) => {
                const a = r && r.has(s) ? r.get(s) : [];
                if (a.length) {
                  const l = a.shift();
                  return (l.dataIndex = i), l;
                }
                return { data: e, rowDef: s, dataIndex: i };
              });
            }
            _cacheColumnDefs() {
              this._columnDefsByName.clear(),
                Gl(
                  this._getOwnDefs(this._contentColumnDefs),
                  this._customColumnDefs
                ).forEach((i) => {
                  this._columnDefsByName.has(i.name),
                    this._columnDefsByName.set(i.name, i);
                });
            }
            _cacheRowDefs() {
              (this._headerRowDefs = Gl(
                this._getOwnDefs(this._contentHeaderRowDefs),
                this._customHeaderRowDefs
              )),
                (this._footerRowDefs = Gl(
                  this._getOwnDefs(this._contentFooterRowDefs),
                  this._customFooterRowDefs
                )),
                (this._rowDefs = Gl(
                  this._getOwnDefs(this._contentRowDefs),
                  this._customRowDefs
                ));
              const e = this._rowDefs.filter((i) => !i.when);
              this._defaultRowDef = e[0];
            }
            _renderUpdatedColumns() {
              const e = (s, a) => s || !!a.getColumnsDiff(),
                i = this._rowDefs.reduce(e, !1);
              i && this._forceRenderDataRows();
              const r = this._headerRowDefs.reduce(e, !1);
              r && this._forceRenderHeaderRows();
              const o = this._footerRowDefs.reduce(e, !1);
              return o && this._forceRenderFooterRows(), i || r || o;
            }
            _switchDataSource(e) {
              (this._data = []),
                yf(this.dataSource) && this.dataSource.disconnect(this),
                this._renderChangeSubscription &&
                  (this._renderChangeSubscription.unsubscribe(),
                  (this._renderChangeSubscription = null)),
                e ||
                  (this._dataDiffer && this._dataDiffer.diff([]),
                  this._rowOutlet.viewContainer.clear()),
                (this._dataSource = e);
            }
            _observeRenderChanges() {
              if (!this.dataSource) return;
              let e;
              yf(this.dataSource)
                ? (e = this.dataSource.connect(this))
                : (function I2(n) {
                    return (
                      !!n &&
                      (n instanceof De || (de(n.lift) && de(n.subscribe)))
                    );
                  })(this.dataSource)
                ? (e = this.dataSource)
                : Array.isArray(this.dataSource) && (e = qi(this.dataSource)),
                (this._renderChangeSubscription = e
                  .pipe(ge(this._onDestroy))
                  .subscribe((i) => {
                    (this._data = i || []), this.renderRows();
                  }));
            }
            _forceRenderHeaderRows() {
              this._headerRowOutlet.viewContainer.length > 0 &&
                this._headerRowOutlet.viewContainer.clear(),
                this._headerRowDefs.forEach((e, i) =>
                  this._renderRow(this._headerRowOutlet, e, i)
                ),
                this.updateStickyHeaderRowStyles();
            }
            _forceRenderFooterRows() {
              this._footerRowOutlet.viewContainer.length > 0 &&
                this._footerRowOutlet.viewContainer.clear(),
                this._footerRowDefs.forEach((e, i) =>
                  this._renderRow(this._footerRowOutlet, e, i)
                ),
                this.updateStickyFooterRowStyles();
            }
            _addStickyColumnStyles(e, i) {
              const r = Array.from(i.columns || []).map((a) =>
                  this._columnDefsByName.get(a)
                ),
                o = r.map((a) => a.sticky),
                s = r.map((a) => a.stickyEnd);
              this._stickyStyler.updateStickyColumns(
                e,
                o,
                s,
                !this._fixedLayout || this._forceRecalculateCellWidths
              );
            }
            _getRenderedRows(e) {
              const i = [];
              for (let r = 0; r < e.viewContainer.length; r++) {
                const o = e.viewContainer.get(r);
                i.push(o.rootNodes[0]);
              }
              return i;
            }
            _getRowDefs(e, i) {
              if (1 == this._rowDefs.length) return [this._rowDefs[0]];
              let r = [];
              if (this.multiTemplateDataRows)
                r = this._rowDefs.filter((o) => !o.when || o.when(i, e));
              else {
                let o =
                  this._rowDefs.find((s) => s.when && s.when(i, e)) ||
                  this._defaultRowDef;
                o && r.push(o);
              }
              return r;
            }
            _getEmbeddedViewArgs(e, i) {
              return {
                templateRef: e.rowDef.template,
                context: { $implicit: e.data },
                index: i,
              };
            }
            _renderRow(e, i, r, o = {}) {
              const s = e.viewContainer.createEmbeddedView(i.template, o, r);
              return this._renderCellTemplateForItem(i, o), s;
            }
            _renderCellTemplateForItem(e, i) {
              for (let r of this._getCellTemplates(e))
                si.mostRecentCellOutlet &&
                  si.mostRecentCellOutlet._viewContainer.createEmbeddedView(
                    r,
                    i
                  );
              this._changeDetectorRef.markForCheck();
            }
            _updateRowIndexContext() {
              const e = this._rowOutlet.viewContainer;
              for (let i = 0, r = e.length; i < r; i++) {
                const s = e.get(i).context;
                (s.count = r),
                  (s.first = 0 === i),
                  (s.last = i === r - 1),
                  (s.even = i % 2 == 0),
                  (s.odd = !s.even),
                  this.multiTemplateDataRows
                    ? ((s.dataIndex = this._renderRows[i].dataIndex),
                      (s.renderIndex = i))
                    : (s.index = this._renderRows[i].dataIndex);
              }
            }
            _getCellTemplates(e) {
              return e && e.columns
                ? Array.from(e.columns, (i) => {
                    const r = this._columnDefsByName.get(i);
                    return e.extractCellTemplate(r);
                  })
                : [];
            }
            _applyNativeTableSections() {
              const e = this._document.createDocumentFragment(),
                i = [
                  { tag: "thead", outlets: [this._headerRowOutlet] },
                  {
                    tag: "tbody",
                    outlets: [this._rowOutlet, this._noDataRowOutlet],
                  },
                  { tag: "tfoot", outlets: [this._footerRowOutlet] },
                ];
              for (const r of i) {
                const o = this._document.createElement(r.tag);
                o.setAttribute("role", "rowgroup");
                for (const s of r.outlets)
                  o.appendChild(s.elementRef.nativeElement);
                e.appendChild(o);
              }
              this._elementRef.nativeElement.appendChild(e);
            }
            _forceRenderDataRows() {
              this._dataDiffer.diff([]),
                this._rowOutlet.viewContainer.clear(),
                this.renderRows();
            }
            _checkStickyStates() {
              const e = (i, r) => i || r.hasStickyChanged();
              this._headerRowDefs.reduce(e, !1) &&
                this.updateStickyHeaderRowStyles(),
                this._footerRowDefs.reduce(e, !1) &&
                  this.updateStickyFooterRowStyles(),
                Array.from(this._columnDefsByName.values()).reduce(e, !1) &&
                  ((this._stickyColumnStylesNeedReset = !0),
                  this.updateStickyColumnStyles());
            }
            _setupStickyStyler() {
              (this._stickyStyler = new z2(
                this._isNativeHtmlTable,
                this.stickyCssClass,
                this._dir ? this._dir.value : "ltr",
                this._coalescedStyleScheduler,
                this._platform.isBrowser,
                this.needsPositionStickyOnElement,
                this._stickyPositioningListener
              )),
                (this._dir ? this._dir.change : qi())
                  .pipe(ge(this._onDestroy))
                  .subscribe((i) => {
                    (this._stickyStyler.direction = i),
                      this.updateStickyColumnStyles();
                  });
            }
            _getOwnDefs(e) {
              return e.filter((i) => !i._table || i._table === this);
            }
            _updateNoDataRow() {
              const e = this._customNoDataRow || this._noDataRow;
              if (!e) return;
              const i = 0 === this._rowOutlet.viewContainer.length;
              if (i === this._isShowingNoDataRow) return;
              const r = this._noDataRowOutlet.viewContainer;
              if (i) {
                const o = r.createEmbeddedView(e.templateRef),
                  s = o.rootNodes[0];
                1 === o.rootNodes.length &&
                  s?.nodeType === this._document.ELEMENT_NODE &&
                  (s.setAttribute("role", "row"),
                  s.classList.add(e._contentClassName));
              } else r.clear();
              this._isShowingNoDataRow = i;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                p(Jn),
                p(zt),
                p(U),
                Eo("role"),
                p(Ut, 8),
                p(ne),
                p(it),
                p(vs),
                p(Cf),
                p(Qr),
                p(Af, 12),
                p(V, 8)
              );
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["cdk-table"], ["table", "cdk-table", ""]],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e &&
                    (He(r, Bl, 5),
                    He(r, oi, 5),
                    He(r, Vl, 5),
                    He(r, Ds, 5),
                    He(r, ws, 5)),
                  2 & e)
                ) {
                  let o;
                  q((o = Y())) && (i._noDataRow = o.first),
                    q((o = Y())) && (i._contentColumnDefs = o),
                    q((o = Y())) && (i._contentRowDefs = o),
                    q((o = Y())) && (i._contentHeaderRowDefs = o),
                    q((o = Y())) && (i._contentFooterRowDefs = o);
                }
              },
              viewQuery: function (e, i) {
                if (
                  (1 & e && (Oe(Hl, 7), Oe(jl, 7), Oe(zl, 7), Oe($l, 7)), 2 & e)
                ) {
                  let r;
                  q((r = Y())) && (i._rowOutlet = r.first),
                    q((r = Y())) && (i._headerRowOutlet = r.first),
                    q((r = Y())) && (i._footerRowOutlet = r.first),
                    q((r = Y())) && (i._noDataRowOutlet = r.first);
                }
              },
              hostAttrs: [1, "cdk-table"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && ke("cdk-table-fixed-layout", i.fixedLayout);
              },
              inputs: {
                trackBy: "trackBy",
                dataSource: "dataSource",
                multiTemplateDataRows: "multiTemplateDataRows",
                fixedLayout: "fixedLayout",
              },
              outputs: { contentChanged: "contentChanged" },
              exportAs: ["cdkTable"],
              features: [
                j([
                  { provide: no, useExisting: n },
                  { provide: vs, useClass: l0 },
                  { provide: Cf, useClass: h0 },
                  { provide: Af, useValue: null },
                ]),
              ],
              ngContentSelectors: k2,
              decls: 6,
              vars: 0,
              consts: [
                ["headerRowOutlet", ""],
                ["rowOutlet", ""],
                ["noDataRowOutlet", ""],
                ["footerRowOutlet", ""],
              ],
              template: function (e, i) {
                1 & e && (Tn(R2), Ve(0), Ve(1, 1), Mn(2, 0)(3, 1)(4, 2)(5, 3));
              },
              dependencies: [Hl, jl, zl, $l],
              styles: [".cdk-table-fixed-layout{table-layout:fixed}"],
              encapsulation: 2,
            })),
            n
          );
        })();
      function Gl(n, t) {
        return n.concat(Array.from(t));
      }
      let U2 = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = le({ type: n })),
          (n.ɵinj = oe({ imports: [qh] })),
          n
        );
      })();
      const G2 = [[["caption"]], [["colgroup"], ["col"]]],
        W2 = ["caption", "colgroup, col"];
      let m0 = (() => {
          class n extends Ul {
            constructor() {
              super(...arguments),
                (this.stickyCssClass = "mat-mdc-table-sticky"),
                (this.needsPositionStickyOnElement = !1);
            }
            ngOnInit() {
              super.ngOnInit(),
                this._isNativeHtmlTable &&
                  this._elementRef.nativeElement
                    .querySelector("tbody")
                    .classList.add("mdc-data-table__content");
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = ue(n)))(i || n);
              };
            })()),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["mat-table"], ["table", "mat-table", ""]],
              hostAttrs: [1, "mat-mdc-table", "mdc-data-table__table"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && ke("mdc-table-fixed-layout", i.fixedLayout);
              },
              exportAs: ["matTable"],
              features: [
                j([
                  { provide: Ul, useExisting: n },
                  { provide: no, useExisting: n },
                  { provide: Cf, useClass: h0 },
                  { provide: vs, useClass: l0 },
                  { provide: Af, useValue: null },
                ]),
                T,
              ],
              ngContentSelectors: W2,
              decls: 6,
              vars: 0,
              consts: [
                ["headerRowOutlet", ""],
                ["rowOutlet", ""],
                ["noDataRowOutlet", ""],
                ["footerRowOutlet", ""],
              ],
              template: function (e, i) {
                1 & e && (Tn(G2), Ve(0), Ve(1, 1), Mn(2, 0)(3, 1)(4, 2)(5, 3));
              },
              dependencies: [Hl, jl, zl, $l],
              styles: [
                ".mdc-data-table{border-radius:var(--mdc-shape-medium, 4px);border-width:1px;border-style:solid}.mdc-data-table .mdc-data-table__header-cell:first-child{border-top-left-radius:var(--mdc-shape-medium, 4px)}[dir=rtl] .mdc-data-table .mdc-data-table__header-cell:first-child,.mdc-data-table .mdc-data-table__header-cell:first-child[dir=rtl]{border-top-right-radius:var(--mdc-shape-medium, 4px);border-top-left-radius:0}.mdc-data-table .mdc-data-table__header-cell:last-child{border-top-right-radius:var(--mdc-shape-medium, 4px)}[dir=rtl] .mdc-data-table .mdc-data-table__header-cell:last-child,.mdc-data-table .mdc-data-table__header-cell:last-child[dir=rtl]{border-top-left-radius:var(--mdc-shape-medium, 4px);border-top-right-radius:0}.mdc-data-table.mdc-data-table--without-footer .mdc-data-table__row:last-child .mdc-data-table__cell:first-child{border-bottom-left-radius:var(--mdc-shape-medium, 4px)}[dir=rtl] .mdc-data-table.mdc-data-table--without-footer .mdc-data-table__row:last-child .mdc-data-table__cell:first-child,.mdc-data-table.mdc-data-table--without-footer .mdc-data-table__row:last-child .mdc-data-table__cell:first-child[dir=rtl]{border-bottom-right-radius:var(--mdc-shape-medium, 4px);border-bottom-left-radius:0}.mdc-data-table.mdc-data-table--without-footer .mdc-data-table__row:last-child .mdc-data-table__cell:last-child{border-bottom-right-radius:var(--mdc-shape-medium, 4px)}[dir=rtl] .mdc-data-table.mdc-data-table--without-footer .mdc-data-table__row:last-child .mdc-data-table__cell:last-child,.mdc-data-table.mdc-data-table--without-footer .mdc-data-table__row:last-child .mdc-data-table__cell:last-child[dir=rtl]{border-bottom-left-radius:var(--mdc-shape-medium, 4px);border-bottom-right-radius:0}.mdc-data-table__cell,.mdc-data-table__header-cell{border-bottom-width:1px;border-bottom-style:solid}.mdc-data-table__pagination{border-top-width:1px;border-top-style:solid}.mdc-data-table__row:last-child .mdc-data-table__cell{border-bottom:none}.mdc-data-table__row{height:52px}.mdc-data-table__pagination{min-height:52px}.mdc-data-table__header-row{height:56px}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px 0 16px}.mdc-data-table__header-cell--checkbox,.mdc-data-table__cell--checkbox{padding-left:4px;padding-right:0}[dir=rtl] .mdc-data-table__header-cell--checkbox,[dir=rtl] .mdc-data-table__cell--checkbox,.mdc-data-table__header-cell--checkbox[dir=rtl],.mdc-data-table__cell--checkbox[dir=rtl]{padding-left:0;padding-right:4px}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell,.mdc-data-table__cell[dir=rtl]{text-align:right}.mdc-data-table__cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__cell--numeric,.mdc-data-table__cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__cell--checkbox{width:1px}.mdc-data-table__header-cell{box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mdc-data-table__header-cell,.mdc-data-table__header-cell[dir=rtl]{text-align:right}.mdc-data-table__header-cell--checkbox{width:1px}.mdc-data-table__header-cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__header-cell--numeric,.mdc-data-table__header-cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__sort-icon-button{width:28px;height:28px;padding:2px;transform:rotate(0.0001deg);margin-left:4px;margin-right:0;opacity:0}.mdc-data-table__sort-icon-button .mdc-icon-button__focus-ring{max-height:28px;max-width:28px}.mdc-data-table__sort-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:28px;height:28px;margin-top:0px;margin-bottom:0px;margin-right:0px;margin-left:0px}.mdc-data-table__sort-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:28px;max-width:28px}.mdc-data-table__sort-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:28px;left:50%;width:28px;transform:translate(-50%, -50%)}[dir=rtl] .mdc-data-table__sort-icon-button,.mdc-data-table__sort-icon-button[dir=rtl]{margin-left:0;margin-right:4px}.mdc-data-table__header-cell--numeric .mdc-data-table__sort-icon-button{margin-left:0;margin-right:4px}[dir=rtl] .mdc-data-table__header-cell--numeric .mdc-data-table__sort-icon-button,.mdc-data-table__header-cell--numeric .mdc-data-table__sort-icon-button[dir=rtl]{margin-left:4px;margin-right:0}.mdc-data-table__header-cell--sorted-descending .mdc-data-table__sort-icon-button{transform:rotate(-180deg)}.mdc-data-table__sort-icon-button:focus,.mdc-data-table__header-cell:hover .mdc-data-table__sort-icon-button,.mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button{opacity:1}.mdc-data-table__header-cell-wrapper{align-items:center;display:inline-flex;vertical-align:middle}.mdc-data-table__header-cell--with-sort{cursor:pointer}.mdc-data-table__sort-status-label{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.mdc-data-table--sticky-header .mdc-data-table__header-cell{position:sticky;top:0;z-index:1}.mdc-data-table{-webkit-overflow-scrolling:touch;display:inline-flex;flex-direction:column;box-sizing:border-box;position:relative}.mdc-data-table__table-container{-webkit-overflow-scrolling:touch;overflow-x:auto;width:100%}.mdc-data-table__table{min-width:100%;border:0;white-space:nowrap;border-spacing:0;table-layout:fixed}.mdc-data-table__header-cell{box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mdc-data-table__header-cell,.mdc-data-table__header-cell[dir=rtl]{text-align:right}.mdc-data-table__header-cell--checkbox{width:1px}.mdc-data-table__header-cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__header-cell--numeric,.mdc-data-table__header-cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__sort-icon-button{width:28px;height:28px;padding:2px;transform:rotate(0.0001deg);margin-left:4px;margin-right:0;opacity:0}.mdc-data-table__sort-icon-button .mdc-icon-button__focus-ring{max-height:28px;max-width:28px}.mdc-data-table__sort-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:28px;height:28px;margin-top:0px;margin-bottom:0px;margin-right:0px;margin-left:0px}.mdc-data-table__sort-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:28px;max-width:28px}.mdc-data-table__sort-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:28px;left:50%;width:28px;transform:translate(-50%, -50%)}[dir=rtl] .mdc-data-table__sort-icon-button,.mdc-data-table__sort-icon-button[dir=rtl]{margin-left:0;margin-right:4px}.mdc-data-table__header-cell--numeric .mdc-data-table__sort-icon-button{margin-left:0;margin-right:4px}[dir=rtl] .mdc-data-table__header-cell--numeric .mdc-data-table__sort-icon-button,.mdc-data-table__header-cell--numeric .mdc-data-table__sort-icon-button[dir=rtl]{margin-left:4px;margin-right:0}.mdc-data-table__header-cell--sorted-descending .mdc-data-table__sort-icon-button{transform:rotate(-180deg)}.mdc-data-table__sort-icon-button:focus,.mdc-data-table__header-cell:hover .mdc-data-table__sort-icon-button,.mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button{opacity:1}.mdc-data-table__header-cell-wrapper{align-items:center;display:inline-flex;vertical-align:middle}.mdc-data-table__header-cell--with-sort{cursor:pointer}.mdc-data-table__sort-status-label{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell,.mdc-data-table__cell[dir=rtl]{text-align:right}.mdc-data-table__cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__cell--numeric,.mdc-data-table__cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__cell--checkbox{width:1px}.mdc-data-table__pagination{box-sizing:border-box;display:flex;justify-content:flex-end}.mdc-data-table__pagination-trailing{margin-left:4px;margin-right:0;align-items:center;display:flex;flex-wrap:wrap;justify-content:flex-end}[dir=rtl] .mdc-data-table__pagination-trailing,.mdc-data-table__pagination-trailing[dir=rtl]{margin-left:0;margin-right:4px}.mdc-data-table__pagination-navigation{align-items:center;display:flex}.mdc-data-table__pagination-button{margin-left:0;margin-right:4px}[dir=rtl] .mdc-data-table__pagination-button .mdc-button__icon,.mdc-data-table__pagination-button .mdc-button__icon[dir=rtl]{transform:rotate(180deg)}[dir=rtl] .mdc-data-table__pagination-button,.mdc-data-table__pagination-button[dir=rtl]{margin-left:4px;margin-right:0}.mdc-data-table__pagination-total{margin-left:14px;margin-right:36px;white-space:nowrap}[dir=rtl] .mdc-data-table__pagination-total,.mdc-data-table__pagination-total[dir=rtl]{margin-left:36px;margin-right:14px}.mdc-data-table__pagination-rows-per-page{margin-left:0;margin-right:22px;align-items:center;display:inline-flex}[dir=rtl] .mdc-data-table__pagination-rows-per-page,.mdc-data-table__pagination-rows-per-page[dir=rtl]{margin-left:22px;margin-right:0}.mdc-data-table__pagination-rows-per-page-label{margin-left:0;margin-right:12px;white-space:nowrap}[dir=rtl] .mdc-data-table__pagination-rows-per-page-label,.mdc-data-table__pagination-rows-per-page-label[dir=rtl]{margin-left:12px;margin-right:0}.mdc-data-table__pagination-rows-per-page-select{min-width:var(--mdc-menu-min-width, 80px);margin:8px 0}.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor{width:100%;min-width:80px}.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor{height:36px}.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor .mdc-floating-label--float-above{transform:translateY(-27.25px) scale(1)}.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor .mdc-floating-label--float-above{font-size:.75rem}.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-24.75px) scale(0.75)}.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-data-table__pagination-rows-per-page-select .mdc-select__anchor .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-data-table__pagination-rows-per-page-select .mdc-select__dropdown-icon{width:20px;height:20px}.mdc-data-table__pagination-rows-per-page-select.mdc-select--outlined .mdc-select__anchor :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 56px)}.mdc-data-table__pagination-rows-per-page-select .mdc-list-item.mdc-list-item--with-one-line{height:36px}.mdc-data-table__progress-indicator{display:none;position:absolute;width:100%}.mdc-data-table--in-progress .mdc-data-table__progress-indicator{display:block}.mdc-data-table__scrim{background-color:var(--mdc-theme-surface, #fff);height:100%;opacity:.32;position:absolute;top:0;width:100%}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table-sticky{position:sticky !important}.mat-mdc-table{table-layout:auto;white-space:normal}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table .mat-mdc-row:hover,.mat-mdc-table .mat-mdc-footer-row:hover{background-color:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}",
              ],
              encapsulation: 2,
            })),
            n
          );
        })(),
        If = (() => {
          class n extends io {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = ue(n)))(i || n);
              };
            })()),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "matCellDef", ""]],
              features: [j([{ provide: io, useExisting: n }]), T],
            })),
            n
          );
        })(),
        Rf = (() => {
          class n extends ro {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = ue(n)))(i || n);
              };
            })()),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "matHeaderCellDef", ""]],
              features: [j([{ provide: ro, useExisting: n }]), T],
            })),
            n
          );
        })(),
        kf = (() => {
          class n extends oi {
            get name() {
              return this._name;
            }
            set name(e) {
              this._setNameInput(e);
            }
            _updateColumnCssClassName() {
              super._updateColumnCssClassName(),
                this._columnCssClassName.push(
                  `mat-column-${this.cssClassFriendlyName}`
                );
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = ue(n)))(i || n);
              };
            })()),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "matColumnDef", ""]],
              inputs: { sticky: "sticky", name: ["matColumnDef", "name"] },
              features: [
                j([
                  { provide: oi, useExisting: n },
                  { provide: "MAT_SORT_HEADER_COLUMN_DEF", useExisting: n },
                ]),
                T,
              ],
            })),
            n
          );
        })(),
        Of = (() => {
          class n extends wf {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = ue(n)))(i || n);
              };
            })()),
            (n.ɵdir = x({
              type: n,
              selectors: [["mat-header-cell"], ["th", "mat-header-cell", ""]],
              hostAttrs: [
                "role",
                "columnheader",
                1,
                "mat-mdc-header-cell",
                "mdc-data-table__header-cell",
              ],
              features: [T],
            })),
            n
          );
        })(),
        Ff = (() => {
          class n extends xf {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = ue(n)))(i || n);
              };
            })()),
            (n.ɵdir = x({
              type: n,
              selectors: [["mat-cell"], ["td", "mat-cell", ""]],
              hostAttrs: [1, "mat-mdc-cell", "mdc-data-table__cell"],
              features: [T],
            })),
            n
          );
        })(),
        g0 = (() => {
          class n extends Ds {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = ue(n)))(i || n);
              };
            })()),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "matHeaderRowDef", ""]],
              inputs: {
                columns: ["matHeaderRowDef", "columns"],
                sticky: ["matHeaderRowDefSticky", "sticky"],
              },
              features: [j([{ provide: Ds, useExisting: n }]), T],
            })),
            n
          );
        })(),
        _0 = (() => {
          class n extends Vl {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = ue(n)))(i || n);
              };
            })()),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "matRowDef", ""]],
              inputs: {
                columns: ["matRowDefColumns", "columns"],
                when: ["matRowDefWhen", "when"],
              },
              features: [j([{ provide: Vl, useExisting: n }]), T],
            })),
            n
          );
        })(),
        b0 = (() => {
          class n extends Sf {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = ue(n)))(i || n);
              };
            })()),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["mat-header-row"], ["tr", "mat-header-row", ""]],
              hostAttrs: [
                "role",
                "row",
                1,
                "mat-mdc-header-row",
                "mdc-data-table__header-row",
              ],
              exportAs: ["matHeaderRow"],
              features: [j([{ provide: Sf, useExisting: n }]), T],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (e, i) {
                1 & e && Mn(0, 0);
              },
              dependencies: [si],
              encapsulation: 2,
            })),
            n
          );
        })(),
        y0 = (() => {
          class n extends Tf {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = ue(n)))(i || n);
              };
            })()),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["mat-row"], ["tr", "mat-row", ""]],
              hostAttrs: [
                "role",
                "row",
                1,
                "mat-mdc-row",
                "mdc-data-table__row",
              ],
              exportAs: ["matRow"],
              features: [j([{ provide: Tf, useExisting: n }]), T],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (e, i) {
                1 & e && Mn(0, 0);
              },
              dependencies: [si],
              encapsulation: 2,
            })),
            n
          );
        })(),
        nV = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ imports: [Xe, U2, Xe] })),
            n
          );
        })();
      class rV extends T2 {
        get data() {
          return this._data.value;
        }
        set data(t) {
          (t = Array.isArray(t) ? t : []),
            this._data.next(t),
            this._renderChangesSubscription || this._filterData(t);
        }
        get filter() {
          return this._filter.value;
        }
        set filter(t) {
          this._filter.next(t),
            this._renderChangesSubscription || this._filterData(this.data);
        }
        get sort() {
          return this._sort;
        }
        set sort(t) {
          (this._sort = t), this._updateChangeSubscription();
        }
        get paginator() {
          return this._paginator;
        }
        set paginator(t) {
          (this._paginator = t), this._updateChangeSubscription();
        }
        constructor(t = []) {
          super(),
            (this._renderData = new ms([])),
            (this._filter = new ms("")),
            (this._internalPageChanges = new A()),
            (this._renderChangesSubscription = null),
            (this.sortingDataAccessor = (e, i) => {
              const r = e[i];
              if (HD(r)) {
                const o = Number(r);
                return o < 9007199254740991 ? o : r;
              }
              return r;
            }),
            (this.sortData = (e, i) => {
              const r = i.active,
                o = i.direction;
              return r && "" != o
                ? e.sort((s, a) => {
                    let l = this.sortingDataAccessor(s, r),
                      c = this.sortingDataAccessor(a, r);
                    const d = typeof l,
                      u = typeof c;
                    d !== u &&
                      ("number" === d && (l += ""),
                      "number" === u && (c += ""));
                    let h = 0;
                    return (
                      null != l && null != c
                        ? l > c
                          ? (h = 1)
                          : l < c && (h = -1)
                        : null != l
                        ? (h = 1)
                        : null != c && (h = -1),
                      h * ("asc" == o ? 1 : -1)
                    );
                  })
                : e;
            }),
            (this.filterPredicate = (e, i) => {
              const r = Object.keys(e)
                  .reduce((s, a) => s + e[a] + "\u25ec", "")
                  .toLowerCase(),
                o = i.trim().toLowerCase();
              return -1 != r.indexOf(o);
            }),
            (this._data = new ms(t)),
            this._updateChangeSubscription();
        }
        _updateChangeSubscription() {
          const t = this._sort
              ? Pt(this._sort.sortChange, this._sort.initialized)
              : qi(null),
            e = this._paginator
              ? Pt(
                  this._paginator.page,
                  this._internalPageChanges,
                  this._paginator.initialized
                )
              : qi(null),
            r = Ml([this._data, this._filter]).pipe(
              Kt(([a]) => this._filterData(a))
            ),
            o = Ml([r, t]).pipe(Kt(([a]) => this._orderData(a))),
            s = Ml([o, e]).pipe(Kt(([a]) => this._pageData(a)));
          this._renderChangesSubscription?.unsubscribe(),
            (this._renderChangesSubscription = s.subscribe((a) =>
              this._renderData.next(a)
            ));
        }
        _filterData(t) {
          return (
            (this.filteredData =
              null == this.filter || "" === this.filter
                ? t
                : t.filter((e) => this.filterPredicate(e, this.filter))),
            this.paginator && this._updatePaginator(this.filteredData.length),
            this.filteredData
          );
        }
        _orderData(t) {
          return this.sort ? this.sortData(t.slice(), this.sort) : t;
        }
        _pageData(t) {
          if (!this.paginator) return t;
          const e = this.paginator.pageIndex * this.paginator.pageSize;
          return t.slice(e, e + this.paginator.pageSize);
        }
        _updatePaginator(t) {
          Promise.resolve().then(() => {
            const e = this.paginator;
            if (e && ((e.length = t), e.pageIndex > 0)) {
              const i = Math.ceil(e.length / e.pageSize) - 1 || 0,
                r = Math.min(e.pageIndex, i);
              r !== e.pageIndex &&
                ((e.pageIndex = r), this._internalPageChanges.next());
            }
          });
        }
        connect() {
          return (
            this._renderChangesSubscription || this._updateChangeSubscription(),
            this._renderData
          );
        }
        disconnect() {
          this._renderChangesSubscription?.unsubscribe(),
            (this._renderChangesSubscription = null);
        }
      }
      class v0 extends rV {}
      const oV = ["mat-sort-header", ""];
      function sV(n, t) {
        if (1 & n) {
          const e = ji();
          F(0, "div", 3),
            ve("@arrowPosition.start", function () {
              return Un(e), Gn((se()._disableViewStateAnimation = !0));
            })("@arrowPosition.done", function () {
              return Un(e), Gn((se()._disableViewStateAnimation = !1));
            }),
            we(1, "div", 4),
            F(2, "div", 5),
            we(3, "div", 6)(4, "div", 7)(5, "div", 8),
            N()();
        }
        if (2 & n) {
          const e = se();
          k("@arrowOpacity", e._getArrowViewState())(
            "@arrowPosition",
            e._getArrowViewState()
          )("@allowChildren", e._getArrowDirectionState()),
            O(2),
            k("@indicator", e._getArrowDirectionState()),
            O(1),
            k("@leftPointer", e._getArrowDirectionState()),
            O(1),
            k("@rightPointer", e._getArrowDirectionState());
        }
      }
      const aV = ["*"],
        D0 = new C("MAT_SORT_DEFAULT_OPTIONS"),
        lV = Vw(gs(class {}));
      let Pf = (() => {
        class n extends lV {
          get direction() {
            return this._direction;
          }
          set direction(e) {
            this._direction = e;
          }
          get disableClear() {
            return this._disableClear;
          }
          set disableClear(e) {
            this._disableClear = ae(e);
          }
          constructor(e) {
            super(),
              (this._defaultOptions = e),
              (this.sortables = new Map()),
              (this._stateChanges = new A()),
              (this.start = "asc"),
              (this._direction = ""),
              (this.sortChange = new Q());
          }
          register(e) {
            this.sortables.set(e.id, e);
          }
          deregister(e) {
            this.sortables.delete(e.id);
          }
          sort(e) {
            this.active != e.id
              ? ((this.active = e.id),
                (this.direction = e.start ? e.start : this.start))
              : (this.direction = this.getNextSortDirection(e)),
              this.sortChange.emit({
                active: this.active,
                direction: this.direction,
              });
          }
          getNextSortDirection(e) {
            if (!e) return "";
            let r = (function cV(n, t) {
                let e = ["asc", "desc"];
                return "desc" == n && e.reverse(), t || e.push(""), e;
              })(
                e.start || this.start,
                e?.disableClear ??
                  this.disableClear ??
                  !!this._defaultOptions?.disableClear
              ),
              o = r.indexOf(this.direction) + 1;
            return o >= r.length && (o = 0), r[o];
          }
          ngOnInit() {
            this._markInitialized();
          }
          ngOnChanges() {
            this._stateChanges.next();
          }
          ngOnDestroy() {
            this._stateChanges.complete();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(p(D0, 8));
          }),
          (n.ɵdir = x({
            type: n,
            selectors: [["", "matSort", ""]],
            hostAttrs: [1, "mat-sort"],
            inputs: {
              disabled: ["matSortDisabled", "disabled"],
              active: ["matSortActive", "active"],
              start: ["matSortStart", "start"],
              direction: ["matSortDirection", "direction"],
              disableClear: ["matSortDisableClear", "disableClear"],
            },
            outputs: { sortChange: "matSortChange" },
            exportAs: ["matSort"],
            features: [T, at],
          })),
          n
        );
      })();
      const Di = WL.ENTERING + " " + GL.STANDARD_CURVE,
        oo = {
          indicator: yn("indicator", [
            rt("active-asc, asc", he({ transform: "translateY(0px)" })),
            rt("active-desc, desc", he({ transform: "translateY(10px)" })),
            ot("active-asc <=> active-desc", gt(Di)),
          ]),
          leftPointer: yn("leftPointer", [
            rt("active-asc, asc", he({ transform: "rotate(-45deg)" })),
            rt("active-desc, desc", he({ transform: "rotate(45deg)" })),
            ot("active-asc <=> active-desc", gt(Di)),
          ]),
          rightPointer: yn("rightPointer", [
            rt("active-asc, asc", he({ transform: "rotate(45deg)" })),
            rt("active-desc, desc", he({ transform: "rotate(-45deg)" })),
            ot("active-asc <=> active-desc", gt(Di)),
          ]),
          arrowOpacity: yn("arrowOpacity", [
            rt("desc-to-active, asc-to-active, active", he({ opacity: 1 })),
            rt("desc-to-hint, asc-to-hint, hint", he({ opacity: 0.54 })),
            rt(
              "hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void",
              he({ opacity: 0 })
            ),
            ot(
              "* => asc, * => desc, * => active, * => hint, * => void",
              gt("0ms")
            ),
            ot("* <=> *", gt(Di)),
          ]),
          arrowPosition: yn("arrowPosition", [
            ot(
              "* => desc-to-hint, * => desc-to-active",
              gt(
                Di,
                Ol([
                  he({ transform: "translateY(-25%)" }),
                  he({ transform: "translateY(0)" }),
                ])
              )
            ),
            ot(
              "* => hint-to-desc, * => active-to-desc",
              gt(
                Di,
                Ol([
                  he({ transform: "translateY(0)" }),
                  he({ transform: "translateY(25%)" }),
                ])
              )
            ),
            ot(
              "* => asc-to-hint, * => asc-to-active",
              gt(
                Di,
                Ol([
                  he({ transform: "translateY(25%)" }),
                  he({ transform: "translateY(0)" }),
                ])
              )
            ),
            ot(
              "* => hint-to-asc, * => active-to-asc",
              gt(
                Di,
                Ol([
                  he({ transform: "translateY(0)" }),
                  he({ transform: "translateY(-25%)" }),
                ])
              )
            ),
            rt(
              "desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active",
              he({ transform: "translateY(0)" })
            ),
            rt(
              "hint-to-desc, active-to-desc, desc",
              he({ transform: "translateY(-25%)" })
            ),
            rt(
              "hint-to-asc, active-to-asc, asc",
              he({ transform: "translateY(25%)" })
            ),
          ]),
          allowChildren: yn("allowChildren", [
            ot("* <=> *", [Pl("@*", Fl(), { optional: !0 })]),
          ]),
        };
      let Wl = (() => {
        class n {
          constructor() {
            this.changes = new A();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const uV = {
          provide: Wl,
          deps: [[new Pi(), new yr(), Wl]],
          useFactory: function dV(n) {
            return n || new Wl();
          },
        },
        hV = gs(class {});
      let fV = (() => {
          class n extends hV {
            get sortActionDescription() {
              return this._sortActionDescription;
            }
            set sortActionDescription(e) {
              this._updateSortActionDescription(e);
            }
            get disableClear() {
              return this._disableClear;
            }
            set disableClear(e) {
              this._disableClear = ae(e);
            }
            constructor(e, i, r, o, s, a, l, c) {
              super(),
                (this._intl = e),
                (this._changeDetectorRef = i),
                (this._sort = r),
                (this._columnDef = o),
                (this._focusMonitor = s),
                (this._elementRef = a),
                (this._ariaDescriber = l),
                (this._showIndicatorHint = !1),
                (this._viewState = {}),
                (this._arrowDirection = ""),
                (this._disableViewStateAnimation = !1),
                (this.arrowPosition = "after"),
                (this._sortActionDescription = "Sort"),
                c?.arrowPosition && (this.arrowPosition = c?.arrowPosition),
                this._handleStateChanges();
            }
            ngOnInit() {
              !this.id && this._columnDef && (this.id = this._columnDef.name),
                this._updateArrowDirection(),
                this._setAnimationTransitionState({
                  toState: this._isSorted() ? "active" : this._arrowDirection,
                }),
                this._sort.register(this),
                (this._sortButton =
                  this._elementRef.nativeElement.querySelector(
                    ".mat-sort-header-container"
                  )),
                this._updateSortActionDescription(this._sortActionDescription);
            }
            ngAfterViewInit() {
              this._focusMonitor
                .monitor(this._elementRef, !0)
                .subscribe((e) => {
                  const i = !!e;
                  i !== this._showIndicatorHint &&
                    (this._setIndicatorHintVisible(i),
                    this._changeDetectorRef.markForCheck());
                });
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef),
                this._sort.deregister(this),
                this._rerenderSubscription.unsubscribe();
            }
            _setIndicatorHintVisible(e) {
              (this._isDisabled() && e) ||
                ((this._showIndicatorHint = e),
                this._isSorted() ||
                  (this._updateArrowDirection(),
                  this._setAnimationTransitionState(
                    this._showIndicatorHint
                      ? { fromState: this._arrowDirection, toState: "hint" }
                      : { fromState: "hint", toState: this._arrowDirection }
                  )));
            }
            _setAnimationTransitionState(e) {
              (this._viewState = e || {}),
                this._disableViewStateAnimation &&
                  (this._viewState = { toState: e.toState });
            }
            _toggleOnInteraction() {
              this._sort.sort(this),
                ("hint" === this._viewState.toState ||
                  "active" === this._viewState.toState) &&
                  (this._disableViewStateAnimation = !0);
            }
            _handleClick() {
              this._isDisabled() || this._sort.sort(this);
            }
            _handleKeydown(e) {
              !this._isDisabled() &&
                (32 === e.keyCode || 13 === e.keyCode) &&
                (e.preventDefault(), this._toggleOnInteraction());
            }
            _isSorted() {
              return (
                this._sort.active == this.id &&
                ("asc" === this._sort.direction ||
                  "desc" === this._sort.direction)
              );
            }
            _getArrowDirectionState() {
              return `${this._isSorted() ? "active-" : ""}${
                this._arrowDirection
              }`;
            }
            _getArrowViewState() {
              const e = this._viewState.fromState;
              return (e ? `${e}-to-` : "") + this._viewState.toState;
            }
            _updateArrowDirection() {
              this._arrowDirection = this._isSorted()
                ? this._sort.direction
                : this.start || this._sort.start;
            }
            _isDisabled() {
              return this._sort.disabled || this.disabled;
            }
            _getAriaSortAttribute() {
              return this._isSorted()
                ? "asc" == this._sort.direction
                  ? "ascending"
                  : "descending"
                : "none";
            }
            _renderArrow() {
              return !this._isDisabled() || this._isSorted();
            }
            _updateSortActionDescription(e) {
              this._sortButton &&
                (this._ariaDescriber?.removeDescription(
                  this._sortButton,
                  this._sortActionDescription
                ),
                this._ariaDescriber?.describe(this._sortButton, e)),
                (this._sortActionDescription = e);
            }
            _handleStateChanges() {
              this._rerenderSubscription = Pt(
                this._sort.sortChange,
                this._sort._stateChanges,
                this._intl.changes
              ).subscribe(() => {
                this._isSorted() &&
                  (this._updateArrowDirection(),
                  ("hint" === this._viewState.toState ||
                    "active" === this._viewState.toState) &&
                    (this._disableViewStateAnimation = !0),
                  this._setAnimationTransitionState({
                    fromState: this._arrowDirection,
                    toState: "active",
                  }),
                  (this._showIndicatorHint = !1)),
                  !this._isSorted() &&
                    this._viewState &&
                    "active" === this._viewState.toState &&
                    ((this._disableViewStateAnimation = !1),
                    this._setAnimationTransitionState({
                      fromState: "active",
                      toState: this._arrowDirection,
                    })),
                  this._changeDetectorRef.markForCheck();
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                p(Wl),
                p(zt),
                p(Pf, 8),
                p("MAT_SORT_HEADER_COLUMN_DEF", 8),
                p(to),
                p(U),
                p(ww, 8),
                p(D0, 8)
              );
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["", "mat-sort-header", ""]],
              hostAttrs: [1, "mat-sort-header"],
              hostVars: 3,
              hostBindings: function (e, i) {
                1 & e &&
                  ve("click", function () {
                    return i._handleClick();
                  })("keydown", function (o) {
                    return i._handleKeydown(o);
                  })("mouseenter", function () {
                    return i._setIndicatorHintVisible(!0);
                  })("mouseleave", function () {
                    return i._setIndicatorHintVisible(!1);
                  }),
                  2 & e &&
                    (Se("aria-sort", i._getAriaSortAttribute()),
                    ke("mat-sort-header-disabled", i._isDisabled()));
              },
              inputs: {
                disabled: "disabled",
                id: ["mat-sort-header", "id"],
                arrowPosition: "arrowPosition",
                start: "start",
                sortActionDescription: "sortActionDescription",
                disableClear: "disableClear",
              },
              exportAs: ["matSortHeader"],
              features: [T],
              attrs: oV,
              ngContentSelectors: aV,
              decls: 4,
              vars: 7,
              consts: [
                [1, "mat-sort-header-container", "mat-focus-indicator"],
                [1, "mat-sort-header-content"],
                ["class", "mat-sort-header-arrow", 4, "ngIf"],
                [1, "mat-sort-header-arrow"],
                [1, "mat-sort-header-stem"],
                [1, "mat-sort-header-indicator"],
                [1, "mat-sort-header-pointer-left"],
                [1, "mat-sort-header-pointer-right"],
                [1, "mat-sort-header-pointer-middle"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Tn(),
                  F(0, "div", 0)(1, "div", 1),
                  Ve(2),
                  N(),
                  W(3, sV, 6, 6, "div", 2),
                  N()),
                  2 & e &&
                    (ke("mat-sort-header-sorted", i._isSorted())(
                      "mat-sort-header-position-before",
                      "before" === i.arrowPosition
                    ),
                    Se("tabindex", i._isDisabled() ? null : 0)(
                      "role",
                      i._isDisabled() ? null : "button"
                    ),
                    O(3),
                    k("ngIf", i._renderArrow()));
              },
              dependencies: [ns],
              styles: [
                ".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}",
              ],
              encapsulation: 2,
              data: {
                animation: [
                  oo.indicator,
                  oo.leftPointer,
                  oo.rightPointer,
                  oo.arrowOpacity,
                  oo.arrowPosition,
                  oo.allowChildren,
                ],
              },
              changeDetection: 0,
            })),
            n
          );
        })(),
        pV = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ providers: [uV], imports: [kn, Xe] })),
            n
          );
        })();
      const gV = ["mat-icon-button", ""],
        _V = ["*"],
        bV = [
          {
            selector: "mat-button",
            mdcClasses: ["mdc-button", "mat-mdc-button"],
          },
          {
            selector: "mat-flat-button",
            mdcClasses: [
              "mdc-button",
              "mdc-button--unelevated",
              "mat-mdc-unelevated-button",
            ],
          },
          {
            selector: "mat-raised-button",
            mdcClasses: [
              "mdc-button",
              "mdc-button--raised",
              "mat-mdc-raised-button",
            ],
          },
          {
            selector: "mat-stroked-button",
            mdcClasses: [
              "mdc-button",
              "mdc-button--outlined",
              "mat-mdc-outlined-button",
            ],
          },
          { selector: "mat-fab", mdcClasses: ["mdc-fab", "mat-mdc-fab"] },
          {
            selector: "mat-mini-fab",
            mdcClasses: ["mdc-fab", "mdc-fab--mini", "mat-mdc-mini-fab"],
          },
          {
            selector: "mat-icon-button",
            mdcClasses: ["mdc-icon-button", "mat-mdc-icon-button"],
          },
        ],
        yV = KL(
          gs(
            Nw(
              class {
                constructor(n) {
                  this._elementRef = n;
                }
              }
            )
          )
        );
      let vV = (() => {
          class n extends yV {
            constructor(e, i, r, o) {
              super(e),
                (this._platform = i),
                (this._ngZone = r),
                (this._animationMode = o),
                (this._focusMonitor = vn(to)),
                (this._isFab = !1);
              const s = e.nativeElement.classList;
              for (const a of bV)
                this._hasHostAttributes(a.selector) &&
                  a.mdcClasses.forEach((l) => {
                    s.add(l);
                  });
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(e = "program", i) {
              e
                ? this._focusMonitor.focusVia(
                    this._elementRef.nativeElement,
                    e,
                    i
                  )
                : this._elementRef.nativeElement.focus(i);
            }
            _hasHostAttributes(...e) {
              return e.some((i) =>
                this._elementRef.nativeElement.hasAttribute(i)
              );
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
          }
          return (
            (n.ɵfac = function (e) {
              Rr();
            }),
            (n.ɵdir = x({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && Oe(mf, 5), 2 & e)) {
                  let r;
                  q((r = Y())) && (i.ripple = r.first);
                }
              },
              features: [T],
            })),
            n
          );
        })(),
        xV = (() => {
          class n extends vV {
            constructor(e, i, r, o) {
              super(e, i, r, o);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(U), p(it), p(V), p(mn, 8));
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["button", "mat-icon-button", ""]],
              hostVars: 7,
              hostBindings: function (e, i) {
                2 & e &&
                  (Se("disabled", i.disabled || null),
                  ke(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  )("mat-unthemed", !i.color)("mat-mdc-button-base", !0));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                color: "color",
              },
              exportAs: ["matButton"],
              features: [T],
              attrs: gV,
              ngContentSelectors: _V,
              decls: 5,
              vars: 3,
              consts: [
                [
                  1,
                  "mat-mdc-button-persistent-ripple",
                  "mdc-icon-button__ripple",
                ],
                [1, "mat-mdc-focus-indicator"],
                [
                  "matRipple",
                  "",
                  1,
                  "mat-mdc-button-ripple",
                  3,
                  "matRippleDisabled",
                  "matRippleCentered",
                  "matRippleTrigger",
                ],
                [1, "mat-mdc-button-touch-target"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Tn(),
                  we(0, "span", 0),
                  Ve(1),
                  we(2, "span", 1)(3, "span", 2)(4, "span", 3)),
                  2 & e &&
                    (O(3),
                    k("matRippleDisabled", i._isRippleDisabled())(
                      "matRippleCentered",
                      !0
                    )("matRippleTrigger", i._elementRef.nativeElement));
              },
              dependencies: [mf],
              styles: [
                '.mdc-icon-button{font-size:24px;width:48px;height:48px;padding:12px}.mdc-icon-button .mdc-icon-button__focus-ring{max-height:48px;max-width:48px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:40px;height:40px;margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:40px;max-width:40px}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-icon-button svg,.mdc-icon-button img{width:24px;height:24px}.mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{height:var(--mdc-icon-button-state-layer-size, 48px);width:var(--mdc-icon-button-state-layer-size, 48px);color:var(--mdc-icon-button-icon-color, inherit);border-radius:50%;flex-shrink:0;text-align:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size, 24px);height:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button:disabled{opacity:var(--mdc-icon-button-disabled-icon-opacity, 0.38)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color, #000)}.mat-mdc-icon-button svg{vertical-align:baseline}.mat-mdc-icon-button[disabled]{cursor:default;pointer-events:none;opacity:1}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
                ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        CV = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ imports: [Xe, Gw, Xe] })),
            n
          );
        })();
      const EV = ["matFormFieldNotchedOutline", ""],
        SV = ["*"],
        MV = ["textField"],
        TV = ["iconPrefixContainer"],
        AV = ["textPrefixContainer"];
      function IV(n, t) {
        1 & n && we(0, "span", 19);
      }
      function RV(n, t) {
        if (1 & n) {
          const e = ji();
          F(0, "label", 17),
            ve("cdkObserveContent", function () {
              return Un(e), Gn(se(2)._refreshOutlineNotchWidth());
            }),
            Ve(1, 1),
            W(2, IV, 1, 0, "span", 18),
            N();
        }
        if (2 & n) {
          const e = se(2);
          k("floating", e._shouldLabelFloat())(
            "cdkObserveContentDisabled",
            !e._hasOutline()
          )("id", e._labelId),
            Se("for", e._control.id)("aria-owns", e._control.id),
            O(2),
            k("ngIf", !e.hideRequiredMarker && e._control.required);
        }
      }
      function kV(n, t) {
        1 & n && W(0, RV, 3, 6, "label", 16),
          2 & n && k("ngIf", se()._hasFloatingLabel());
      }
      function OV(n, t) {
        1 & n && we(0, "div", 20);
      }
      function FV(n, t) {}
      function PV(n, t) {
        1 & n && W(0, FV, 0, 0, "ng-template", 22),
          2 & n && (se(2), k("ngTemplateOutlet", La(1)));
      }
      function NV(n, t) {
        if (
          (1 & n && (F(0, "div", 21), W(1, PV, 1, 1, "ng-template", 9), N()),
          2 & n)
        ) {
          const e = se();
          k("matFormFieldNotchedOutlineOpen", e._shouldLabelFloat())(
            "matFormFieldNotchedOutlineLabelWidth",
            e._labelWidth
          ),
            O(1),
            k("ngIf", !e._forceDisplayInfixLabel());
        }
      }
      function LV(n, t) {
        1 & n && (F(0, "div", 23, 24), Ve(2, 2), N());
      }
      function VV(n, t) {
        1 & n && (F(0, "div", 25, 26), Ve(2, 3), N());
      }
      function BV(n, t) {}
      function HV(n, t) {
        1 & n && W(0, BV, 0, 0, "ng-template", 22),
          2 & n && (se(), k("ngTemplateOutlet", La(1)));
      }
      function jV(n, t) {
        1 & n && (F(0, "div", 27), Ve(1, 4), N());
      }
      function zV(n, t) {
        1 & n && (F(0, "div", 28), Ve(1, 5), N());
      }
      function $V(n, t) {
        1 & n && we(0, "div", 29);
      }
      function UV(n, t) {
        1 & n && (F(0, "div", 30), Ve(1, 6), N()),
          2 & n && k("@transitionMessages", se()._subscriptAnimationState);
      }
      function GV(n, t) {
        if ((1 & n && (F(0, "mat-hint", 34), qe(1), N()), 2 & n)) {
          const e = se(2);
          k("id", e._hintLabelId), O(1), $i(e.hintLabel);
        }
      }
      function WV(n, t) {
        if (
          (1 & n &&
            (F(0, "div", 31),
            W(1, GV, 2, 2, "mat-hint", 32),
            Ve(2, 7),
            we(3, "div", 33),
            Ve(4, 8),
            N()),
          2 & n)
        ) {
          const e = se();
          k("@transitionMessages", e._subscriptAnimationState),
            O(1),
            k("ngIf", e.hintLabel);
        }
      }
      const qV = [
          "*",
          [["mat-label"]],
          [
            ["", "matPrefix", ""],
            ["", "matIconPrefix", ""],
          ],
          [["", "matTextPrefix", ""]],
          [["", "matTextSuffix", ""]],
          [
            ["", "matSuffix", ""],
            ["", "matIconSuffix", ""],
          ],
          [["mat-error"], ["", "matError", ""]],
          [["mat-hint", 3, "align", "end"]],
          [["mat-hint", "align", "end"]],
        ],
        YV = [
          "*",
          "mat-label",
          "[matPrefix], [matIconPrefix]",
          "[matTextPrefix]",
          "[matTextSuffix]",
          "[matSuffix], [matIconSuffix]",
          "mat-error, [matError]",
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let Nf = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵdir = x({ type: n, selectors: [["mat-label"]] })),
          n
        );
      })();
      const KV = new C("MatError");
      let ZV = 0,
        w0 = (() => {
          class n {
            constructor() {
              (this.align = "start"), (this.id = "mat-mdc-hint-" + ZV++);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["mat-hint"]],
              hostAttrs: [
                1,
                "mat-mdc-form-field-hint",
                "mat-mdc-form-field-bottom-align",
              ],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  ($r("id", i.id),
                  Se("align", null),
                  ke("mat-mdc-form-field-hint-end", "end" === i.align));
              },
              inputs: { align: "align", id: "id" },
            })),
            n
          );
        })();
      const XV = new C("MatPrefix"),
        QV = new C("MatSuffix");
      let x0 = (() => {
        class n {
          constructor(e) {
            (this._elementRef = e), (this.floating = !1);
          }
          getWidth() {
            return (function JV(n) {
              if (null !== n.offsetParent) return n.scrollWidth;
              const e = n.cloneNode(!0);
              e.style.setProperty("position", "absolute"),
                e.style.setProperty("transform", "translate(-9999px, -9999px)"),
                document.documentElement.appendChild(e);
              const i = e.scrollWidth;
              return e.remove(), i;
            })(this._elementRef.nativeElement);
          }
          get element() {
            return this._elementRef.nativeElement;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(p(U));
          }),
          (n.ɵdir = x({
            type: n,
            selectors: [["label", "matFormFieldFloatingLabel", ""]],
            hostAttrs: [1, "mdc-floating-label", "mat-mdc-floating-label"],
            hostVars: 2,
            hostBindings: function (e, i) {
              2 & e && ke("mdc-floating-label--float-above", i.floating);
            },
            inputs: { floating: "floating" },
          })),
          n
        );
      })();
      const C0 = "mdc-line-ripple--active",
        ql = "mdc-line-ripple--deactivating";
      let E0 = (() => {
          class n {
            constructor(e, i) {
              (this._elementRef = e),
                (this._handleTransitionEnd = (r) => {
                  const o = this._elementRef.nativeElement.classList,
                    s = o.contains(ql);
                  "opacity" === r.propertyName && s && o.remove(C0, ql);
                }),
                i.runOutsideAngular(() => {
                  e.nativeElement.addEventListener(
                    "transitionend",
                    this._handleTransitionEnd
                  );
                });
            }
            activate() {
              const e = this._elementRef.nativeElement.classList;
              e.remove(ql), e.add(C0);
            }
            deactivate() {
              this._elementRef.nativeElement.classList.add(ql);
            }
            ngOnDestroy() {
              this._elementRef.nativeElement.removeEventListener(
                "transitionend",
                this._handleTransitionEnd
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(U), p(V));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["div", "matFormFieldLineRipple", ""]],
              hostAttrs: [1, "mdc-line-ripple"],
            })),
            n
          );
        })(),
        S0 = (() => {
          class n {
            constructor(e, i) {
              (this._elementRef = e),
                (this._ngZone = i),
                (this.labelWidth = 0),
                (this.open = !1);
            }
            ngAfterViewInit() {
              const e = this._elementRef.nativeElement.querySelector(
                ".mdc-floating-label"
              );
              e
                ? (this._elementRef.nativeElement.classList.add(
                    "mdc-notched-outline--upgraded"
                  ),
                  "function" == typeof requestAnimationFrame &&
                    ((e.style.transitionDuration = "0s"),
                    this._ngZone.runOutsideAngular(() => {
                      requestAnimationFrame(
                        () => (e.style.transitionDuration = "")
                      );
                    })))
                : this._elementRef.nativeElement.classList.add(
                    "mdc-notched-outline--no-label"
                  );
            }
            _getNotchWidth() {
              return this.open
                ? this.labelWidth > 0
                  ? `calc(${this.labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + 9px)`
                  : "0px"
                : null;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(U), p(V));
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["div", "matFormFieldNotchedOutline", ""]],
              hostAttrs: [1, "mdc-notched-outline"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && ke("mdc-notched-outline--notched", i.open);
              },
              inputs: {
                labelWidth: [
                  "matFormFieldNotchedOutlineLabelWidth",
                  "labelWidth",
                ],
                open: ["matFormFieldNotchedOutlineOpen", "open"],
              },
              attrs: EV,
              ngContentSelectors: SV,
              decls: 4,
              vars: 2,
              consts: [
                [1, "mdc-notched-outline__leading"],
                [1, "mdc-notched-outline__notch"],
                [1, "mdc-notched-outline__trailing"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Tn(),
                  we(0, "div", 0),
                  F(1, "div", 1),
                  Ve(2),
                  N(),
                  we(3, "div", 2)),
                  2 & e && (O(1), Xn("width", i._getNotchWidth()));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })();
      const eB = {
        transitionMessages: yn("transitionMessages", [
          rt("enter", he({ opacity: 1, transform: "translateY(0%)" })),
          ot("void => enter", [
            he({ opacity: 0, transform: "translateY(-5px)" }),
            gt("300ms cubic-bezier(0.55, 0, 0.55, 0.2)"),
          ]),
        ]),
      };
      let Lf = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵdir = x({ type: n })),
          n
        );
      })();
      const Vf = new C("MatFormField"),
        tB = new C("MAT_FORM_FIELD_DEFAULT_OPTIONS");
      let M0 = 0,
        I0 = (() => {
          class n {
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(e) {
              this._hideRequiredMarker = ae(e);
            }
            get floatLabel() {
              return this._floatLabel || this._defaults?.floatLabel || "auto";
            }
            set floatLabel(e) {
              e !== this._floatLabel &&
                ((this._floatLabel = e),
                this._changeDetectorRef.markForCheck());
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(e) {
              const i = this._appearance;
              (this._appearance = e || this._defaults?.appearance || "fill"),
                "outline" === this._appearance &&
                  this._appearance !== i &&
                  (this._refreshOutlineNotchWidth(),
                  (this._needsOutlineLabelOffsetUpdateOnStable = !0));
            }
            get subscriptSizing() {
              return (
                this._subscriptSizing ||
                this._defaults?.subscriptSizing ||
                "fixed"
              );
            }
            set subscriptSizing(e) {
              this._subscriptSizing =
                e || this._defaults?.subscriptSizing || "fixed";
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(e) {
              (this._hintLabel = e), this._processHints();
            }
            get _control() {
              return this._explicitFormFieldControl || this._formFieldControl;
            }
            set _control(e) {
              this._explicitFormFieldControl = e;
            }
            constructor(e, i, r, o, s, a, l, c) {
              (this._elementRef = e),
                (this._changeDetectorRef = i),
                (this._ngZone = r),
                (this._dir = o),
                (this._platform = s),
                (this._defaults = a),
                (this._animationMode = l),
                (this._document = c),
                (this._hideRequiredMarker = !1),
                (this.color = "primary"),
                (this._appearance = "fill"),
                (this._subscriptSizing = null),
                (this._hintLabel = ""),
                (this._hasIconPrefix = !1),
                (this._hasTextPrefix = !1),
                (this._hasIconSuffix = !1),
                (this._hasTextSuffix = !1),
                (this._labelId = "mat-mdc-form-field-label-" + M0++),
                (this._hintLabelId = "mat-mdc-hint-" + M0++),
                (this._subscriptAnimationState = ""),
                (this._labelWidth = 0),
                (this._destroyed = new A()),
                (this._isFocused = null),
                (this._needsOutlineLabelOffsetUpdateOnStable = !1),
                a &&
                  (a.appearance && (this.appearance = a.appearance),
                  (this._hideRequiredMarker = Boolean(a?.hideRequiredMarker)),
                  a.color && (this.color = a.color));
            }
            ngAfterViewInit() {
              this._updateFocusState(),
                this._refreshOutlineNotchWidth(),
                this._document?.fonts?.ready
                  ? this._document.fonts.ready.then(() => {
                      this._refreshOutlineNotchWidth(),
                        this._changeDetectorRef.markForCheck();
                    })
                  : setTimeout(() => this._refreshOutlineNotchWidth(), 100),
                (this._subscriptAnimationState = "enter"),
                this._changeDetectorRef.detectChanges();
            }
            ngAfterContentInit() {
              this._assertFormFieldControl(),
                this._initializeControl(),
                this._initializeSubscript(),
                this._initializePrefixAndSuffix(),
                this._initializeOutlineLabelOffsetSubscriptions();
            }
            ngAfterContentChecked() {
              this._assertFormFieldControl();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._textField || this._elementRef;
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() && (this.floatLabel = "always");
            }
            _initializeControl() {
              const e = this._control;
              e.controlType &&
                this._elementRef.nativeElement.classList.add(
                  `mat-mdc-form-field-type-${e.controlType}`
                ),
                e.stateChanges.subscribe(() => {
                  this._updateFocusState(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                e.ngControl &&
                  e.ngControl.valueChanges &&
                  e.ngControl.valueChanges
                    .pipe(ge(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck());
            }
            _checkPrefixAndSuffixTypes() {
              (this._hasIconPrefix = !!this._prefixChildren.find(
                (e) => !e._isText
              )),
                (this._hasTextPrefix = !!this._prefixChildren.find(
                  (e) => e._isText
                )),
                (this._hasIconSuffix = !!this._suffixChildren.find(
                  (e) => !e._isText
                )),
                (this._hasTextSuffix = !!this._suffixChildren.find(
                  (e) => e._isText
                ));
            }
            _initializePrefixAndSuffix() {
              this._checkPrefixAndSuffixTypes(),
                Pt(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes
                ).subscribe(() => {
                  this._checkPrefixAndSuffixTypes(),
                    this._changeDetectorRef.markForCheck();
                });
            }
            _initializeSubscript() {
              this._hintChildren.changes.subscribe(() => {
                this._processHints(), this._changeDetectorRef.markForCheck();
              }),
                this._errorChildren.changes.subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._validateHints(),
                this._syncDescribedByIds();
            }
            _assertFormFieldControl() {}
            _updateFocusState() {
              this._control.focused && !this._isFocused
                ? ((this._isFocused = !0), this._lineRipple?.activate())
                : !this._control.focused &&
                  (this._isFocused || null === this._isFocused) &&
                  ((this._isFocused = !1), this._lineRipple?.deactivate()),
                this._textField?.nativeElement.classList.toggle(
                  "mdc-text-field--focused",
                  this._control.focused
                );
            }
            _initializeOutlineLabelOffsetSubscriptions() {
              this._prefixChildren.changes.subscribe(
                () => (this._needsOutlineLabelOffsetUpdateOnStable = !0)
              ),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .pipe(ge(this._destroyed))
                    .subscribe(() => {
                      this._needsOutlineLabelOffsetUpdateOnStable &&
                        ((this._needsOutlineLabelOffsetUpdateOnStable = !1),
                        this._updateOutlineLabelOffset());
                    });
                }),
                this._dir.change
                  .pipe(ge(this._destroyed))
                  .subscribe(
                    () => (this._needsOutlineLabelOffsetUpdateOnStable = !0)
                  );
            }
            _shouldAlwaysFloat() {
              return "always" === this.floatLabel;
            }
            _hasOutline() {
              return "outline" === this.appearance;
            }
            _forceDisplayInfixLabel() {
              return (
                !this._platform.isBrowser &&
                this._prefixChildren.length &&
                !this._shouldLabelFloat()
              );
            }
            _hasFloatingLabel() {
              return !!this._labelChildNonStatic || !!this._labelChildStatic;
            }
            _shouldLabelFloat() {
              return (
                this._control.shouldLabelFloat || this._shouldAlwaysFloat()
              );
            }
            _shouldForward(e) {
              const i = this._control ? this._control.ngControl : null;
              return i && i[e];
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? "error"
                : "hint";
            }
            _refreshOutlineNotchWidth() {
              !this._hasOutline() ||
                !this._floatingLabel ||
                (this._labelWidth = this._floatingLabel.getWidth());
            }
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _syncDescribedByIds() {
              if (this._control) {
                let e = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    "string" == typeof this._control.userAriaDescribedBy &&
                    e.push(...this._control.userAriaDescribedBy.split(" ")),
                  "hint" === this._getDisplayedMessages())
                ) {
                  const i = this._hintChildren
                      ? this._hintChildren.find((o) => "start" === o.align)
                      : null,
                    r = this._hintChildren
                      ? this._hintChildren.find((o) => "end" === o.align)
                      : null;
                  i
                    ? e.push(i.id)
                    : this._hintLabel && e.push(this._hintLabelId),
                    r && e.push(r.id);
                } else
                  this._errorChildren &&
                    e.push(...this._errorChildren.map((i) => i.id));
                this._control.setDescribedByIds(e);
              }
            }
            _updateOutlineLabelOffset() {
              if (
                !this._platform.isBrowser ||
                !this._hasOutline() ||
                !this._floatingLabel
              )
                return;
              const e = this._floatingLabel.element;
              if (!this._iconPrefixContainer && !this._textPrefixContainer)
                return void (e.style.transform = "");
              if (!this._isAttachedToDom())
                return void (this._needsOutlineLabelOffsetUpdateOnStable = !0);
              const i = this._iconPrefixContainer?.nativeElement,
                r = this._textPrefixContainer?.nativeElement,
                o = i?.getBoundingClientRect().width ?? 0,
                s = r?.getBoundingClientRect().width ?? 0;
              e.style.transform = `var(\n        --mat-mdc-form-field-label-transform,\n        translateY(-50%) translateX(calc(${
                "rtl" === this._dir.value ? "-1" : "1"
              } * (${
                o + s
              }px + var(--mat-mdc-form-field-label-offset-x, 0px))))\n    )`;
            }
            _isAttachedToDom() {
              const e = this._elementRef.nativeElement;
              if (e.getRootNode) {
                const i = e.getRootNode();
                return i && i !== e;
              }
              return document.documentElement.contains(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                p(U),
                p(zt),
                p(V),
                p(Ut),
                p(it),
                p(tB, 8),
                p(mn, 8),
                p(ne)
              );
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["mat-form-field"]],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e &&
                    (He(r, Nf, 5),
                    He(r, Nf, 7),
                    He(r, Lf, 5),
                    He(r, XV, 5),
                    He(r, QV, 5),
                    He(r, KV, 5),
                    He(r, w0, 5)),
                  2 & e)
                ) {
                  let o;
                  q((o = Y())) && (i._labelChildNonStatic = o.first),
                    q((o = Y())) && (i._labelChildStatic = o.first),
                    q((o = Y())) && (i._formFieldControl = o.first),
                    q((o = Y())) && (i._prefixChildren = o),
                    q((o = Y())) && (i._suffixChildren = o),
                    q((o = Y())) && (i._errorChildren = o),
                    q((o = Y())) && (i._hintChildren = o);
                }
              },
              viewQuery: function (e, i) {
                if (
                  (1 & e &&
                    (Oe(MV, 5),
                    Oe(TV, 5),
                    Oe(AV, 5),
                    Oe(x0, 5),
                    Oe(S0, 5),
                    Oe(E0, 5)),
                  2 & e)
                ) {
                  let r;
                  q((r = Y())) && (i._textField = r.first),
                    q((r = Y())) && (i._iconPrefixContainer = r.first),
                    q((r = Y())) && (i._textPrefixContainer = r.first),
                    q((r = Y())) && (i._floatingLabel = r.first),
                    q((r = Y())) && (i._notchedOutline = r.first),
                    q((r = Y())) && (i._lineRipple = r.first);
                }
              },
              hostAttrs: [1, "mat-mdc-form-field"],
              hostVars: 42,
              hostBindings: function (e, i) {
                2 & e &&
                  ke(
                    "mat-mdc-form-field-label-always-float",
                    i._shouldAlwaysFloat()
                  )("mat-mdc-form-field-has-icon-prefix", i._hasIconPrefix)(
                    "mat-mdc-form-field-has-icon-suffix",
                    i._hasIconSuffix
                  )("mat-form-field-invalid", i._control.errorState)(
                    "mat-form-field-disabled",
                    i._control.disabled
                  )("mat-form-field-autofilled", i._control.autofilled)(
                    "mat-form-field-no-animations",
                    "NoopAnimations" === i._animationMode
                  )("mat-form-field-appearance-fill", "fill" == i.appearance)(
                    "mat-form-field-appearance-outline",
                    "outline" == i.appearance
                  )(
                    "mat-form-field-hide-placeholder",
                    i._hasFloatingLabel() && !i._shouldLabelFloat()
                  )("mat-focused", i._control.focused)(
                    "mat-primary",
                    "accent" !== i.color && "warn" !== i.color
                  )("mat-accent", "accent" === i.color)(
                    "mat-warn",
                    "warn" === i.color
                  )("ng-untouched", i._shouldForward("untouched"))(
                    "ng-touched",
                    i._shouldForward("touched")
                  )("ng-pristine", i._shouldForward("pristine"))(
                    "ng-dirty",
                    i._shouldForward("dirty")
                  )("ng-valid", i._shouldForward("valid"))(
                    "ng-invalid",
                    i._shouldForward("invalid")
                  )("ng-pending", i._shouldForward("pending"));
              },
              inputs: {
                hideRequiredMarker: "hideRequiredMarker",
                color: "color",
                floatLabel: "floatLabel",
                appearance: "appearance",
                subscriptSizing: "subscriptSizing",
                hintLabel: "hintLabel",
              },
              exportAs: ["matFormField"],
              features: [j([{ provide: Vf, useExisting: n }])],
              ngContentSelectors: YV,
              decls: 18,
              vars: 23,
              consts: [
                ["labelTemplate", ""],
                [1, "mat-mdc-text-field-wrapper", "mdc-text-field", 3, "click"],
                ["textField", ""],
                ["class", "mat-mdc-form-field-focus-overlay", 4, "ngIf"],
                [1, "mat-mdc-form-field-flex"],
                [
                  "matFormFieldNotchedOutline",
                  "",
                  3,
                  "matFormFieldNotchedOutlineOpen",
                  "matFormFieldNotchedOutlineLabelWidth",
                  4,
                  "ngIf",
                ],
                ["class", "mat-mdc-form-field-icon-prefix", 4, "ngIf"],
                ["class", "mat-mdc-form-field-text-prefix", 4, "ngIf"],
                [1, "mat-mdc-form-field-infix"],
                [3, "ngIf"],
                ["class", "mat-mdc-form-field-text-suffix", 4, "ngIf"],
                ["class", "mat-mdc-form-field-icon-suffix", 4, "ngIf"],
                ["matFormFieldLineRipple", "", 4, "ngIf"],
                [
                  1,
                  "mat-mdc-form-field-subscript-wrapper",
                  "mat-mdc-form-field-bottom-align",
                  3,
                  "ngSwitch",
                ],
                [
                  "class",
                  "mat-mdc-form-field-error-wrapper",
                  4,
                  "ngSwitchCase",
                ],
                ["class", "mat-mdc-form-field-hint-wrapper", 4, "ngSwitchCase"],
                [
                  "matFormFieldFloatingLabel",
                  "",
                  3,
                  "floating",
                  "cdkObserveContentDisabled",
                  "id",
                  "cdkObserveContent",
                  4,
                  "ngIf",
                ],
                [
                  "matFormFieldFloatingLabel",
                  "",
                  3,
                  "floating",
                  "cdkObserveContentDisabled",
                  "id",
                  "cdkObserveContent",
                ],
                [
                  "aria-hidden",
                  "true",
                  "class",
                  "mat-mdc-form-field-required-marker mdc-floating-label--required",
                  4,
                  "ngIf",
                ],
                [
                  "aria-hidden",
                  "true",
                  1,
                  "mat-mdc-form-field-required-marker",
                  "mdc-floating-label--required",
                ],
                [1, "mat-mdc-form-field-focus-overlay"],
                [
                  "matFormFieldNotchedOutline",
                  "",
                  3,
                  "matFormFieldNotchedOutlineOpen",
                  "matFormFieldNotchedOutlineLabelWidth",
                ],
                [3, "ngTemplateOutlet"],
                [1, "mat-mdc-form-field-icon-prefix"],
                ["iconPrefixContainer", ""],
                [1, "mat-mdc-form-field-text-prefix"],
                ["textPrefixContainer", ""],
                [1, "mat-mdc-form-field-text-suffix"],
                [1, "mat-mdc-form-field-icon-suffix"],
                ["matFormFieldLineRipple", ""],
                [1, "mat-mdc-form-field-error-wrapper"],
                [1, "mat-mdc-form-field-hint-wrapper"],
                [3, "id", 4, "ngIf"],
                [1, "mat-mdc-form-field-hint-spacer"],
                [3, "id"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Tn(qV),
                  W(0, kV, 1, 1, "ng-template", null, 0, ev),
                  F(2, "div", 1, 2),
                  ve("click", function (o) {
                    return (
                      i._control.onContainerClick &&
                      i._control.onContainerClick(o)
                    );
                  }),
                  W(4, OV, 1, 0, "div", 3),
                  F(5, "div", 4),
                  W(6, NV, 2, 3, "div", 5),
                  W(7, LV, 3, 0, "div", 6),
                  W(8, VV, 3, 0, "div", 7),
                  F(9, "div", 8),
                  W(10, HV, 1, 1, "ng-template", 9),
                  Ve(11),
                  N(),
                  W(12, jV, 2, 0, "div", 10),
                  W(13, zV, 2, 0, "div", 11),
                  N(),
                  W(14, $V, 1, 0, "div", 12),
                  N(),
                  F(15, "div", 13),
                  W(16, UV, 2, 1, "div", 14),
                  W(17, WV, 5, 2, "div", 15),
                  N()),
                  2 & e &&
                    (O(2),
                    ke("mdc-text-field--filled", !i._hasOutline())(
                      "mdc-text-field--outlined",
                      i._hasOutline()
                    )("mdc-text-field--no-label", !i._hasFloatingLabel())(
                      "mdc-text-field--disabled",
                      i._control.disabled
                    )("mdc-text-field--invalid", i._control.errorState),
                    O(2),
                    k("ngIf", !i._hasOutline() && !i._control.disabled),
                    O(2),
                    k("ngIf", i._hasOutline()),
                    O(1),
                    k("ngIf", i._hasIconPrefix),
                    O(1),
                    k("ngIf", i._hasTextPrefix),
                    O(2),
                    k("ngIf", !i._hasOutline() || i._forceDisplayInfixLabel()),
                    O(2),
                    k("ngIf", i._hasTextSuffix),
                    O(1),
                    k("ngIf", i._hasIconSuffix),
                    O(1),
                    k("ngIf", !i._hasOutline()),
                    O(1),
                    ke(
                      "mat-mdc-form-field-subscript-dynamic-size",
                      "dynamic" === i.subscriptSizing
                    ),
                    k("ngSwitch", i._getDisplayedMessages()),
                    O(1),
                    k("ngSwitchCase", "error"),
                    O(1),
                    k("ngSwitchCase", "hint"));
              },
              dependencies: [ns, fD, is, xh, XN, w0, x0, S0, E0],
              styles: [
                '.mdc-text-field{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:0;border-bottom-left-radius:0;display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-text-field__input{height:28px;width:100%;min-width:0;border:none;border-radius:0;background:none;appearance:none;padding:0}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}@media all{.mdc-text-field__input::placeholder{opacity:0}}@media all{.mdc-text-field__input:-ms-input-placeholder{opacity:0}}@media all{.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}}@media all{.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}}.mdc-text-field__affix{height:28px;opacity:0;white-space:nowrap}.mdc-text-field--label-floating .mdc-text-field__affix,.mdc-text-field--no-label .mdc-text-field__affix{opacity:1}@supports(-webkit-hyphens: none){.mdc-text-field--outlined .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field__affix--prefix,.mdc-text-field__affix--prefix[dir=rtl]{padding-left:2px;padding-right:0}.mdc-text-field--end-aligned .mdc-text-field__affix--prefix{padding-left:0;padding-right:12px}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--end-aligned .mdc-text-field__affix--prefix[dir=rtl]{padding-left:12px;padding-right:0}.mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field__affix--suffix,.mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:12px}.mdc-text-field--end-aligned .mdc-text-field__affix--suffix{padding-left:2px;padding-right:0}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--end-aligned .mdc-text-field__affix--suffix[dir=rtl]{padding-left:0;padding-right:2px}.mdc-text-field--filled{height:56px}.mdc-text-field--filled::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}.mdc-text-field--filled .mdc-floating-label{left:16px;right:initial}[dir=rtl] .mdc-text-field--filled .mdc-floating-label,.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:16px}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled.mdc-text-field--no-label::before{display:none}@supports(-webkit-hyphens: none){.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__affix{align-items:center;align-self:center;display:inline-flex;height:100%}}.mdc-text-field--outlined{height:56px;overflow:visible}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1)}.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--outlined .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl]{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:calc(100% - max(12px, var(--mdc-shape-small, 4px))*2)}}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing{border-top-left-radius:0;border-top-right-radius:var(--mdc-shape-small, 4px);border-bottom-right-radius:var(--mdc-shape-small, 4px);border-bottom-left-radius:0}[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing,.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl]{border-top-left-radius:var(--mdc-shape-small, 4px);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:var(--mdc-shape-small, 4px)}@supports(top: max(0%)){.mdc-text-field--outlined{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined{padding-right:max(16px, var(--mdc-shape-small, 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}@supports(top: max(0%)){.mdc-text-field--outlined+.mdc-text-field-helper-line{padding-right:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-left:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-leading-icon{padding-right:max(16px, var(--mdc-shape-small, 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-right:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon,.mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:max(16px, var(--mdc-shape-small, 4px))}}.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-right:0}@supports(top: max(0%)){.mdc-text-field--outlined.mdc-text-field--with-trailing-icon{padding-left:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0}@supports(top: max(0%)){[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon,.mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl]{padding-right:max(16px, calc(var(--mdc-shape-small, 4px) + 4px))}}.mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:initial}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:4px}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mdc-text-field--textarea{flex-direction:column;align-items:center;width:auto;height:auto;padding:0}.mdc-text-field--textarea .mdc-floating-label{top:19px}.mdc-text-field--textarea .mdc-floating-label:not(.mdc-floating-label--float-above){transform:none}.mdc-text-field--textarea .mdc-text-field__input{flex-grow:1;height:auto;min-height:1.5rem;overflow-x:hidden;overflow-y:auto;box-sizing:border-box;resize:none;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--filled::before{display:none}.mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-10.25px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--filled .mdc-text-field__input{margin-top:23px;margin-bottom:9px}.mdc-text-field--textarea.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-27.25px) scale(1)}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-24.75px) scale(0.75)}.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-text-field__input{margin-top:16px;margin-bottom:16px}.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label{top:18px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field__input{margin-bottom:2px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter{align-self:flex-end;padding:0 16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::after{display:inline-block;width:0;height:16px;content:"";vertical-align:-16px}.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::before{display:none}.mdc-text-field__resizer{align-self:stretch;display:inline-flex;flex-direction:column;flex-grow:1;max-height:100%;max-width:100%;min-height:56px;min-width:fit-content;min-width:-moz-available;min-width:-webkit-fill-available;overflow:hidden;resize:both}.mdc-text-field--filled .mdc-text-field__resizer{transform:translateY(-1px)}.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateY(1px)}.mdc-text-field--outlined .mdc-text-field__resizer{transform:translateX(-1px) translateY(-1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer,.mdc-text-field--outlined .mdc-text-field__resizer[dir=rtl]{transform:translateX(1px) translateY(-1px)}.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter{transform:translateX(1px) translateY(1px)}[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter,.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input[dir=rtl],.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter[dir=rtl]{transform:translateX(-1px) translateY(1px)}.mdc-text-field--with-leading-icon{padding-left:0;padding-right:16px}[dir=rtl] .mdc-text-field--with-leading-icon,.mdc-text-field--with-leading-icon[dir=rtl]{padding-left:16px;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 48px);left:48px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label[dir=rtl]{left:initial;right:48px}.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label{left:36px;right:initial}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label[dir=rtl]{left:initial;right:36px}.mdc-text-field--with-leading-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) translateX(-32px) scale(1)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-37.25px) translateX(32px) scale(1)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above{font-size:.75rem}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) translateX(-32px) scale(0.75)}[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl],.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl]{transform:translateY(-34.75px) translateX(32px) scale(0.75)}.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-text-field--with-trailing-icon{padding-left:16px;padding-right:0}[dir=rtl] .mdc-text-field--with-trailing-icon,.mdc-text-field--with-trailing-icon[dir=rtl]{padding-left:0;padding-right:16px}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 64px)}.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 64px / 0.75)}.mdc-text-field--with-trailing-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon{padding-left:0;padding-right:0}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label{max-width:calc(100% - 96px)}.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 96px / 0.75)}.mdc-text-field-helper-line{display:flex;justify-content:space-between;box-sizing:border-box}.mdc-text-field+.mdc-text-field-helper-line{padding-right:16px;padding-left:16px}.mdc-form-field>.mdc-text-field+label{align-self:flex-start}.mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--focused .mdc-notched-outline__trailing{border-width:2px}.mdc-text-field--focused+.mdc-text-field-helper-line .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg){opacity:1}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-text-field--focused.mdc-text-field--outlined.mdc-text-field--textarea .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:0}.mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{opacity:1}.mdc-text-field--disabled{pointer-events:none}@media screen and (forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.mdc-text-field--disabled.mdc-text-field--filled .mdc-text-field__ripple{display:none}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--end-aligned .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl]{text-align:left}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix{direction:ltr}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{padding-left:0;padding-right:2px}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{padding-left:12px;padding-right:0}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--leading,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--leading{order:1}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix{order:2}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input{order:3}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix{order:4}[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--trailing,.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--trailing{order:5}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__input,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__input{text-align:right}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--prefix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--prefix{padding-right:12px}[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--suffix,.mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--suffix{padding-left:2px}.mdc-floating-label{position:absolute;left:0;-webkit-transform-origin:left top;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label,.mdc-floating-label[dir=rtl]{right:0;left:auto;-webkit-transform-origin:right top;transform-origin:right top;text-align:right}.mdc-floating-label--float-above{cursor:auto}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0px;content:"*"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after,.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)[dir=rtl]::after{margin-left:0;margin-right:1px}.mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline,.mdc-notched-outline[dir=rtl]{text-align:right}.mdc-notched-outline__leading,.mdc-notched-outline__notch,.mdc-notched-outline__trailing{box-sizing:border-box;height:100%;border-top:1px solid;border-bottom:1px solid;pointer-events:none}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;width:12px}[dir=rtl] .mdc-notched-outline__leading,.mdc-notched-outline__leading[dir=rtl]{border-left:none;border-right:1px solid}.mdc-notched-outline__trailing{border-left:none;border-right:1px solid;flex-grow:1}[dir=rtl] .mdc-notched-outline__trailing,.mdc-notched-outline__trailing[dir=rtl]{border-left:1px solid;border-right:none}.mdc-notched-outline__notch{flex:0 0 auto;width:auto;max-width:calc(100% - 12px * 2)}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch,.mdc-notched-outline--notched .mdc-notched-outline__notch[dir=rtl]{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:""}.mdc-line-ripple::before{border-bottom-width:1px}.mdc-line-ripple::after{border-bottom-width:2px}.mdc-line-ripple::before{z-index:1}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{line-height:normal;pointer-events:all}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-text-field-wrapper::before{content:none}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:"";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:12px;box-sizing:content-box}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}}@media all{.mdc-text-field--no-label .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__affix{transition:opacity 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea{transition:none}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-filled 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-filled{0%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-10.25px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-10.25px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-textarea-outlined 250ms 1}@keyframes mdc-floating-label-shake-float-above-textarea-outlined{0%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-24.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-24.75px) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon{0%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75)}}[dir=rtl] .mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake,.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] .mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1}@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl{0%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - -32px)) translateY(-34.75px) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - -32px)) translateY(-34.75px) scale(0.75)}100%{transform:translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-floating-label--shake{animation:mdc-floating-label-shake-float-above-standard 250ms 1}@keyframes mdc-floating-label-shake-float-above-standard{0%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}33%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(calc(4% - 0%)) translateY(-106%) scale(0.75)}66%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75)}100%{transform:translateX(calc(0 - 0%)) translateY(-106%) scale(0.75)}}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}',
              ],
              encapsulation: 2,
              data: { animation: [eB.transitionMessages] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        xs = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ imports: [Xe, kn, pw, Xe] })),
            n
          );
        })();
      const cB = !1;
      function wi(n) {
        return (
          null == n ||
          (("string" == typeof n || Array.isArray(n)) && 0 === n.length)
        );
      }
      function O0(n) {
        return null != n && "number" == typeof n.length;
      }
      const _t = new C("NgValidators"),
        xi = new C("NgAsyncValidators"),
        dB =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class F0 {
        static min(t) {
          return (function P0(n) {
            return (t) => {
              if (wi(t.value) || wi(n)) return null;
              const e = parseFloat(t.value);
              return !isNaN(e) && e < n
                ? { min: { min: n, actual: t.value } }
                : null;
            };
          })(t);
        }
        static max(t) {
          return (function N0(n) {
            return (t) => {
              if (wi(t.value) || wi(n)) return null;
              const e = parseFloat(t.value);
              return !isNaN(e) && e > n
                ? { max: { max: n, actual: t.value } }
                : null;
            };
          })(t);
        }
        static required(t) {
          return (function L0(n) {
            return wi(n.value) ? { required: !0 } : null;
          })(t);
        }
        static requiredTrue(t) {
          return (function V0(n) {
            return !0 === n.value ? null : { required: !0 };
          })(t);
        }
        static email(t) {
          return (function B0(n) {
            return wi(n.value) || dB.test(n.value) ? null : { email: !0 };
          })(t);
        }
        static minLength(t) {
          return (function H0(n) {
            return (t) =>
              wi(t.value) || !O0(t.value)
                ? null
                : t.value.length < n
                ? {
                    minlength: {
                      requiredLength: n,
                      actualLength: t.value.length,
                    },
                  }
                : null;
          })(t);
        }
        static maxLength(t) {
          return (function j0(n) {
            return (t) =>
              O0(t.value) && t.value.length > n
                ? {
                    maxlength: {
                      requiredLength: n,
                      actualLength: t.value.length,
                    },
                  }
                : null;
          })(t);
        }
        static pattern(t) {
          return (function z0(n) {
            if (!n) return Yl;
            let t, e;
            return (
              "string" == typeof n
                ? ((e = ""),
                  "^" !== n.charAt(0) && (e += "^"),
                  (e += n),
                  "$" !== n.charAt(n.length - 1) && (e += "$"),
                  (t = new RegExp(e)))
                : ((e = n.toString()), (t = n)),
              (i) => {
                if (wi(i.value)) return null;
                const r = i.value;
                return t.test(r)
                  ? null
                  : { pattern: { requiredPattern: e, actualValue: r } };
              }
            );
          })(t);
        }
        static nullValidator(t) {
          return null;
        }
        static compose(t) {
          return Y0(t);
        }
        static composeAsync(t) {
          return K0(t);
        }
      }
      function Yl(n) {
        return null;
      }
      function $0(n) {
        return null != n;
      }
      function U0(n) {
        const t = Va(n) ? Ai(n) : n;
        if (cB && !hb(t)) {
          let e = "Expected async validator to return Promise or Observable.";
          throw (
            ("object" == typeof n &&
              (e +=
                " Are you using a synchronous validator where an async validator is expected?"),
            new w(-1101, e))
          );
        }
        return t;
      }
      function G0(n) {
        let t = {};
        return (
          n.forEach((e) => {
            t = null != e ? { ...t, ...e } : t;
          }),
          0 === Object.keys(t).length ? null : t
        );
      }
      function W0(n, t) {
        return t.map((e) => e(n));
      }
      function q0(n) {
        return n.map((t) =>
          (function uB(n) {
            return !n.validate;
          })(t)
            ? t
            : (e) => t.validate(e)
        );
      }
      function Y0(n) {
        if (!n) return null;
        const t = n.filter($0);
        return 0 == t.length
          ? null
          : function (e) {
              return G0(W0(e, t));
            };
      }
      function Hf(n) {
        return null != n ? Y0(q0(n)) : null;
      }
      function K0(n) {
        if (!n) return null;
        const t = n.filter($0);
        return 0 == t.length
          ? null
          : function (e) {
              return (function rB(...n) {
                const t = dm(n),
                  { args: e, keys: i } = mw(n),
                  r = new De((o) => {
                    const { length: s } = e;
                    if (!s) return void o.complete();
                    const a = new Array(s);
                    let l = s,
                      c = s;
                    for (let d = 0; d < s; d++) {
                      let u = !1;
                      St(e[d]).subscribe(
                        Qe(
                          o,
                          (h) => {
                            u || ((u = !0), c--), (a[d] = h);
                          },
                          () => l--,
                          void 0,
                          () => {
                            (!l || !u) &&
                              (c || o.next(i ? gw(i, a) : a), o.complete());
                          }
                        )
                      );
                    }
                  });
                return t ? r.pipe(Nh(t)) : r;
              })(W0(e, t).map(U0)).pipe(Kt(G0));
            };
      }
      function jf(n) {
        return null != n ? K0(q0(n)) : null;
      }
      function Z0(n, t) {
        return null === n ? [t] : Array.isArray(n) ? [...n, t] : [n, t];
      }
      function X0(n) {
        return n._rawValidators;
      }
      function Q0(n) {
        return n._rawAsyncValidators;
      }
      function zf(n) {
        return n ? (Array.isArray(n) ? n : [n]) : [];
      }
      function Kl(n, t) {
        return Array.isArray(n) ? n.includes(t) : n === t;
      }
      function J0(n, t) {
        const e = zf(t);
        return (
          zf(n).forEach((r) => {
            Kl(e, r) || e.push(r);
          }),
          e
        );
      }
      function ex(n, t) {
        return zf(t).filter((e) => !Kl(n, e));
      }
      class tx {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(t) {
          (this._rawValidators = t || []),
            (this._composedValidatorFn = Hf(this._rawValidators));
        }
        _setAsyncValidators(t) {
          (this._rawAsyncValidators = t || []),
            (this._composedAsyncValidatorFn = jf(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(t) {
          this._onDestroyCallbacks.push(t);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((t) => t()),
            (this._onDestroyCallbacks = []);
        }
        reset(t) {
          this.control && this.control.reset(t);
        }
        hasError(t, e) {
          return !!this.control && this.control.hasError(t, e);
        }
        getError(t, e) {
          return this.control ? this.control.getError(t, e) : null;
        }
      }
      class Et extends tx {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class Nn extends tx {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      function ix(n, t) {
        return n ? `with name: '${t}'` : `at index: ${t}`;
      }
      const Gf = !1,
        Cs = "VALID",
        Xl = "INVALID",
        so = "PENDING",
        Es = "DISABLED";
      function Wf(n) {
        return (Ql(n) ? n.validators : n) || null;
      }
      function qf(n, t) {
        return (Ql(t) ? t.asyncValidators : n) || null;
      }
      function Ql(n) {
        return null != n && !Array.isArray(n) && "object" == typeof n;
      }
      class sx {
        constructor(t, e) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            this._assignValidators(t),
            this._assignAsyncValidators(e);
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(t) {
          this._rawValidators = this._composedValidatorFn = t;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(t) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = t;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === Cs;
        }
        get invalid() {
          return this.status === Xl;
        }
        get pending() {
          return this.status == so;
        }
        get disabled() {
          return this.status === Es;
        }
        get enabled() {
          return this.status !== Es;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(t) {
          this._assignValidators(t);
        }
        setAsyncValidators(t) {
          this._assignAsyncValidators(t);
        }
        addValidators(t) {
          this.setValidators(J0(t, this._rawValidators));
        }
        addAsyncValidators(t) {
          this.setAsyncValidators(J0(t, this._rawAsyncValidators));
        }
        removeValidators(t) {
          this.setValidators(ex(t, this._rawValidators));
        }
        removeAsyncValidators(t) {
          this.setAsyncValidators(ex(t, this._rawAsyncValidators));
        }
        hasValidator(t) {
          return Kl(this._rawValidators, t);
        }
        hasAsyncValidator(t) {
          return Kl(this._rawAsyncValidators, t);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(t = {}) {
          (this.touched = !0),
            this._parent && !t.onlySelf && this._parent.markAsTouched(t);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((t) => t.markAllAsTouched());
        }
        markAsUntouched(t = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((e) => {
              e.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        markAsDirty(t = {}) {
          (this.pristine = !1),
            this._parent && !t.onlySelf && this._parent.markAsDirty(t);
        }
        markAsPristine(t = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((e) => {
              e.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        markAsPending(t = {}) {
          (this.status = so),
            !1 !== t.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !t.onlySelf && this._parent.markAsPending(t);
        }
        disable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = Es),
            (this.errors = null),
            this._forEachChild((i) => {
              i.disable({ ...t, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== t.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...t, skipPristineCheck: e }),
            this._onDisabledChange.forEach((i) => i(!0));
        }
        enable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = Cs),
            this._forEachChild((i) => {
              i.enable({ ...t, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: t.emitEvent,
            }),
            this._updateAncestors({ ...t, skipPristineCheck: e }),
            this._onDisabledChange.forEach((i) => i(!1));
        }
        _updateAncestors(t) {
          this._parent &&
            !t.onlySelf &&
            (this._parent.updateValueAndValidity(t),
            t.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(t) {
          this._parent = t;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(t = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === Cs || this.status === so) &&
                this._runAsyncValidator(t.emitEvent)),
            !1 !== t.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !t.onlySelf &&
              this._parent.updateValueAndValidity(t);
        }
        _updateTreeValidity(t = { emitEvent: !0 }) {
          this._forEachChild((e) => e._updateTreeValidity(t)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: t.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? Es : Cs;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(t) {
          if (this.asyncValidator) {
            (this.status = so), (this._hasOwnPendingAsyncValidator = !0);
            const e = U0(this.asyncValidator(this));
            this._asyncValidationSubscription = e.subscribe((i) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(i, { emitEvent: t });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(t, e = {}) {
          (this.errors = t), this._updateControlsErrors(!1 !== e.emitEvent);
        }
        get(t) {
          let e = t;
          return null == e ||
            (Array.isArray(e) || (e = e.split(".")), 0 === e.length)
            ? null
            : e.reduce((i, r) => i && i._find(r), this);
        }
        getError(t, e) {
          const i = e ? this.get(e) : this;
          return i && i.errors ? i.errors[t] : null;
        }
        hasError(t, e) {
          return !!this.getError(t, e);
        }
        get root() {
          let t = this;
          for (; t._parent; ) t = t._parent;
          return t;
        }
        _updateControlsErrors(t) {
          (this.status = this._calculateStatus()),
            t && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(t);
        }
        _initObservables() {
          (this.valueChanges = new Q()), (this.statusChanges = new Q());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? Es
            : this.errors
            ? Xl
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(so)
            ? so
            : this._anyControlsHaveStatus(Xl)
            ? Xl
            : Cs;
        }
        _anyControlsHaveStatus(t) {
          return this._anyControls((e) => e.status === t);
        }
        _anyControlsDirty() {
          return this._anyControls((t) => t.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((t) => t.touched);
        }
        _updatePristine(t = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        _updateTouched(t = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        _registerOnCollectionChange(t) {
          this._onCollectionChange = t;
        }
        _setUpdateStrategy(t) {
          Ql(t) && null != t.updateOn && (this._updateOn = t.updateOn);
        }
        _parentMarkedDirty(t) {
          return (
            !t &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(t) {
          return null;
        }
        _assignValidators(t) {
          (this._rawValidators = Array.isArray(t) ? t.slice() : t),
            (this._composedValidatorFn = (function vB(n) {
              return Array.isArray(n) ? Hf(n) : n || null;
            })(this._rawValidators));
        }
        _assignAsyncValidators(t) {
          (this._rawAsyncValidators = Array.isArray(t) ? t.slice() : t),
            (this._composedAsyncValidatorFn = (function DB(n) {
              return Array.isArray(n) ? jf(n) : n || null;
            })(this._rawAsyncValidators));
        }
      }
      class Yf extends sx {
        constructor(t, e, i) {
          super(Wf(e), qf(i, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(t, e) {
          return this.controls[t]
            ? this.controls[t]
            : ((this.controls[t] = e),
              e.setParent(this),
              e._registerOnCollectionChange(this._onCollectionChange),
              e);
        }
        addControl(t, e, i = {}) {
          this.registerControl(t, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(t, e = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            this.updateValueAndValidity({ emitEvent: e.emitEvent }),
            this._onCollectionChange();
        }
        setControl(t, e, i = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            e && this.registerControl(t, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        contains(t) {
          return this.controls.hasOwnProperty(t) && this.controls[t].enabled;
        }
        setValue(t, e = {}) {
          (function ox(n, t, e) {
            n._forEachChild((i, r) => {
              if (void 0 === e[r])
                throw new w(
                  1002,
                  Gf
                    ? (function yB(n, t) {
                        return `Must supply a value for form control ${ix(
                          n,
                          t
                        )}`;
                      })(t, r)
                    : ""
                );
            });
          })(this, !0, t),
            Object.keys(t).forEach((i) => {
              (function rx(n, t, e) {
                const i = n.controls;
                if (!(t ? Object.keys(i) : i).length)
                  throw new w(
                    1e3,
                    Gf
                      ? (function _B(n) {
                          return `\n    There are no form controls registered with this ${
                            n ? "group" : "array"
                          } yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;
                        })(t)
                      : ""
                  );
                if (!i[e])
                  throw new w(
                    1001,
                    Gf
                      ? (function bB(n, t) {
                          return `Cannot find form control ${ix(n, t)}`;
                        })(t, e)
                      : ""
                  );
              })(this, !0, i),
                this.controls[i].setValue(t[i], {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          null != t &&
            (Object.keys(t).forEach((i) => {
              const r = this.controls[i];
              r && r.patchValue(t[i], { onlySelf: !0, emitEvent: e.emitEvent });
            }),
            this.updateValueAndValidity(e));
        }
        reset(t = {}, e = {}) {
          this._forEachChild((i, r) => {
            i.reset(t[r], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (t, e, i) => ((t[i] = e.getRawValue()), t)
          );
        }
        _syncPendingControls() {
          let t = this._reduceChildren(
            !1,
            (e, i) => !!i._syncPendingControls() || e
          );
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _forEachChild(t) {
          Object.keys(this.controls).forEach((e) => {
            const i = this.controls[e];
            i && t(i, e);
          });
        }
        _setUpControls() {
          this._forEachChild((t) => {
            t.setParent(this),
              t._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(t) {
          for (const [e, i] of Object.entries(this.controls))
            if (this.contains(e) && t(i)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (e, i, r) => ((i.enabled || this.disabled) && (e[r] = i.value), e)
          );
        }
        _reduceChildren(t, e) {
          let i = t;
          return (
            this._forEachChild((r, o) => {
              i = e(i, r, o);
            }),
            i
          );
        }
        _allControlsDisabled() {
          for (const t of Object.keys(this.controls))
            if (this.controls[t].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(t) {
          return this.controls.hasOwnProperty(t) ? this.controls[t] : null;
        }
      }
      const ao = new C("CallSetDisabledState", {
          providedIn: "root",
          factory: () => Jl,
        }),
        Jl = "always";
      function Ss(n, t, e = Jl) {
        Kf(n, t),
          t.valueAccessor.writeValue(n.value),
          (n.disabled || "always" === e) &&
            t.valueAccessor.setDisabledState?.(n.disabled),
          (function CB(n, t) {
            t.valueAccessor.registerOnChange((e) => {
              (n._pendingValue = e),
                (n._pendingChange = !0),
                (n._pendingDirty = !0),
                "change" === n.updateOn && ax(n, t);
            });
          })(n, t),
          (function SB(n, t) {
            const e = (i, r) => {
              t.valueAccessor.writeValue(i), r && t.viewToModelUpdate(i);
            };
            n.registerOnChange(e),
              t._registerOnDestroy(() => {
                n._unregisterOnChange(e);
              });
          })(n, t),
          (function EB(n, t) {
            t.valueAccessor.registerOnTouched(() => {
              (n._pendingTouched = !0),
                "blur" === n.updateOn && n._pendingChange && ax(n, t),
                "submit" !== n.updateOn && n.markAsTouched();
            });
          })(n, t),
          (function xB(n, t) {
            if (t.valueAccessor.setDisabledState) {
              const e = (i) => {
                t.valueAccessor.setDisabledState(i);
              };
              n.registerOnDisabledChange(e),
                t._registerOnDestroy(() => {
                  n._unregisterOnDisabledChange(e);
                });
            }
          })(n, t);
      }
      function tc(n, t, e = !0) {
        const i = () => {};
        t.valueAccessor &&
          (t.valueAccessor.registerOnChange(i),
          t.valueAccessor.registerOnTouched(i)),
          ic(n, t),
          n &&
            (t._invokeOnDestroyCallbacks(),
            n._registerOnCollectionChange(() => {}));
      }
      function nc(n, t) {
        n.forEach((e) => {
          e.registerOnValidatorChange && e.registerOnValidatorChange(t);
        });
      }
      function Kf(n, t) {
        const e = X0(n);
        null !== t.validator
          ? n.setValidators(Z0(e, t.validator))
          : "function" == typeof e && n.setValidators([e]);
        const i = Q0(n);
        null !== t.asyncValidator
          ? n.setAsyncValidators(Z0(i, t.asyncValidator))
          : "function" == typeof i && n.setAsyncValidators([i]);
        const r = () => n.updateValueAndValidity();
        nc(t._rawValidators, r), nc(t._rawAsyncValidators, r);
      }
      function ic(n, t) {
        let e = !1;
        if (null !== n) {
          if (null !== t.validator) {
            const r = X0(n);
            if (Array.isArray(r) && r.length > 0) {
              const o = r.filter((s) => s !== t.validator);
              o.length !== r.length && ((e = !0), n.setValidators(o));
            }
          }
          if (null !== t.asyncValidator) {
            const r = Q0(n);
            if (Array.isArray(r) && r.length > 0) {
              const o = r.filter((s) => s !== t.asyncValidator);
              o.length !== r.length && ((e = !0), n.setAsyncValidators(o));
            }
          }
        }
        const i = () => {};
        return nc(t._rawValidators, i), nc(t._rawAsyncValidators, i), e;
      }
      function ax(n, t) {
        n._pendingDirty && n.markAsDirty(),
          n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
          t.viewToModelUpdate(n._pendingValue),
          (n._pendingChange = !1);
      }
      function lx(n, t) {
        Kf(n, t);
      }
      function cx(n, t) {
        n._syncPendingControls(),
          t.forEach((e) => {
            const i = e.control;
            "submit" === i.updateOn &&
              i._pendingChange &&
              (e.viewToModelUpdate(i._pendingValue), (i._pendingChange = !1));
          });
      }
      const RB = { provide: Et, useExisting: Te(() => Ts) },
        Ms = (() => Promise.resolve())();
      let Ts = (() => {
        class n extends Et {
          constructor(e, i, r) {
            super(),
              (this.callSetDisabledState = r),
              (this.submitted = !1),
              (this._directives = new Set()),
              (this.ngSubmit = new Q()),
              (this.form = new Yf({}, Hf(e), jf(i)));
          }
          ngAfterViewInit() {
            this._setUpdateStrategy();
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          get controls() {
            return this.form.controls;
          }
          addControl(e) {
            Ms.then(() => {
              const i = this._findContainer(e.path);
              (e.control = i.registerControl(e.name, e.control)),
                Ss(e.control, e, this.callSetDisabledState),
                e.control.updateValueAndValidity({ emitEvent: !1 }),
                this._directives.add(e);
            });
          }
          getControl(e) {
            return this.form.get(e.path);
          }
          removeControl(e) {
            Ms.then(() => {
              const i = this._findContainer(e.path);
              i && i.removeControl(e.name), this._directives.delete(e);
            });
          }
          addFormGroup(e) {
            Ms.then(() => {
              const i = this._findContainer(e.path),
                r = new Yf({});
              lx(r, e),
                i.registerControl(e.name, r),
                r.updateValueAndValidity({ emitEvent: !1 });
            });
          }
          removeFormGroup(e) {
            Ms.then(() => {
              const i = this._findContainer(e.path);
              i && i.removeControl(e.name);
            });
          }
          getFormGroup(e) {
            return this.form.get(e.path);
          }
          updateModel(e, i) {
            Ms.then(() => {
              this.form.get(e.path).setValue(i);
            });
          }
          setValue(e) {
            this.control.setValue(e);
          }
          onSubmit(e) {
            return (
              (this.submitted = !0),
              cx(this.form, this._directives),
              this.ngSubmit.emit(e),
              "dialog" === e?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(e) {
            this.form.reset(e), (this.submitted = !1);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.form._updateOn = this.options.updateOn);
          }
          _findContainer(e) {
            return e.pop(), e.length ? this.form.get(e) : this.form;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(p(_t, 10), p(xi, 10), p(ao, 8));
          }),
          (n.ɵdir = x({
            type: n,
            selectors: [
              ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
              ["ng-form"],
              ["", "ngForm", ""],
            ],
            hostBindings: function (e, i) {
              1 & e &&
                ve("submit", function (o) {
                  return i.onSubmit(o);
                })("reset", function () {
                  return i.onReset();
                });
            },
            inputs: { options: ["ngFormOptions", "options"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [j([RB]), T],
          })),
          n
        );
      })();
      function dx(n, t) {
        const e = n.indexOf(t);
        e > -1 && n.splice(e, 1);
      }
      function ux(n) {
        return (
          "object" == typeof n &&
          null !== n &&
          2 === Object.keys(n).length &&
          "value" in n &&
          "disabled" in n
        );
      }
      const hx = class extends sx {
        constructor(t = null, e, i) {
          super(Wf(e), qf(i, e)),
            (this.defaultValue = null),
            (this._onChange = []),
            (this._pendingChange = !1),
            this._applyFormState(t),
            this._setUpdateStrategy(e),
            this._initObservables(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            }),
            Ql(e) &&
              (e.nonNullable || e.initialValueIsDefault) &&
              (this.defaultValue = ux(t) ? t.value : t);
        }
        setValue(t, e = {}) {
          (this.value = this._pendingValue = t),
            this._onChange.length &&
              !1 !== e.emitModelToViewChange &&
              this._onChange.forEach((i) =>
                i(this.value, !1 !== e.emitViewToModelChange)
              ),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          this.setValue(t, e);
        }
        reset(t = this.defaultValue, e = {}) {
          this._applyFormState(t),
            this.markAsPristine(e),
            this.markAsUntouched(e),
            this.setValue(this.value, e),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(t) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(t) {
          this._onChange.push(t);
        }
        _unregisterOnChange(t) {
          dx(this._onChange, t);
        }
        registerOnDisabledChange(t) {
          this._onDisabledChange.push(t);
        }
        _unregisterOnDisabledChange(t) {
          dx(this._onDisabledChange, t);
        }
        _forEachChild(t) {}
        _syncPendingControls() {
          return !(
            "submit" !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, {
              onlySelf: !0,
              emitModelToViewChange: !1,
            }),
            0)
          );
        }
        _applyFormState(t) {
          ux(t)
            ? ((this.value = this._pendingValue = t.value),
              t.disabled
                ? this.disable({ onlySelf: !0, emitEvent: !1 })
                : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = t);
        }
      };
      let bx = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = le({ type: n })),
          (n.ɵinj = oe({})),
          n
        );
      })();
      const jB = { provide: Et, useExisting: Te(() => As) };
      let As = (() => {
          class n extends Et {
            constructor(e, i, r) {
              super(),
                (this.callSetDisabledState = r),
                (this.submitted = !1),
                (this._onCollectionChange = () => this._updateDomValue()),
                (this.directives = []),
                (this.form = null),
                (this.ngSubmit = new Q()),
                this._setValidators(e),
                this._setAsyncValidators(i);
            }
            ngOnChanges(e) {
              this._checkFormPresent(),
                e.hasOwnProperty("form") &&
                  (this._updateValidators(),
                  this._updateDomValue(),
                  this._updateRegistrations(),
                  (this._oldForm = this.form));
            }
            ngOnDestroy() {
              this.form &&
                (ic(this.form, this),
                this.form._onCollectionChange === this._onCollectionChange &&
                  this.form._registerOnCollectionChange(() => {}));
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            addControl(e) {
              const i = this.form.get(e.path);
              return (
                Ss(i, e, this.callSetDisabledState),
                i.updateValueAndValidity({ emitEvent: !1 }),
                this.directives.push(e),
                i
              );
            }
            getControl(e) {
              return this.form.get(e.path);
            }
            removeControl(e) {
              tc(e.control || null, e, !1),
                (function IB(n, t) {
                  const e = n.indexOf(t);
                  e > -1 && n.splice(e, 1);
                })(this.directives, e);
            }
            addFormGroup(e) {
              this._setUpFormContainer(e);
            }
            removeFormGroup(e) {
              this._cleanUpFormContainer(e);
            }
            getFormGroup(e) {
              return this.form.get(e.path);
            }
            addFormArray(e) {
              this._setUpFormContainer(e);
            }
            removeFormArray(e) {
              this._cleanUpFormContainer(e);
            }
            getFormArray(e) {
              return this.form.get(e.path);
            }
            updateModel(e, i) {
              this.form.get(e.path).setValue(i);
            }
            onSubmit(e) {
              return (
                (this.submitted = !0),
                cx(this.form, this.directives),
                this.ngSubmit.emit(e),
                "dialog" === e?.target?.method
              );
            }
            onReset() {
              this.resetForm();
            }
            resetForm(e) {
              this.form.reset(e), (this.submitted = !1);
            }
            _updateDomValue() {
              this.directives.forEach((e) => {
                const i = e.control,
                  r = this.form.get(e.path);
                i !== r &&
                  (tc(i || null, e),
                  ((n) => n instanceof hx)(r) &&
                    (Ss(r, e, this.callSetDisabledState), (e.control = r)));
              }),
                this.form._updateTreeValidity({ emitEvent: !1 });
            }
            _setUpFormContainer(e) {
              const i = this.form.get(e.path);
              lx(i, e), i.updateValueAndValidity({ emitEvent: !1 });
            }
            _cleanUpFormContainer(e) {
              if (this.form) {
                const i = this.form.get(e.path);
                i &&
                  (function MB(n, t) {
                    return ic(n, t);
                  })(i, e) &&
                  i.updateValueAndValidity({ emitEvent: !1 });
              }
            }
            _updateRegistrations() {
              this.form._registerOnCollectionChange(this._onCollectionChange),
                this._oldForm &&
                  this._oldForm._registerOnCollectionChange(() => {});
            }
            _updateValidators() {
              Kf(this.form, this), this._oldForm && ic(this._oldForm, this);
            }
            _checkFormPresent() {}
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(_t, 10), p(xi, 10), p(ao, 8));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "formGroup", ""]],
              hostBindings: function (e, i) {
                1 & e &&
                  ve("submit", function (o) {
                    return i.onSubmit(o);
                  })("reset", function () {
                    return i.onReset();
                  });
              },
              inputs: { form: ["formGroup", "form"] },
              outputs: { ngSubmit: "ngSubmit" },
              exportAs: ["ngForm"],
              features: [j([jB]), T, at],
            })),
            n
          );
        })(),
        oH = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ imports: [bx] })),
            n
          );
        })(),
        aH = (() => {
          class n {
            static withConfig(e) {
              return {
                ngModule: n,
                providers: [
                  { provide: ao, useValue: e.callSetDisabledState ?? Jl },
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ imports: [oH] })),
            n
          );
        })();
      function rp(n, t) {
        return dt((e, i) => {
          let r = null,
            o = 0,
            s = !1;
          const a = () => s && !r && i.complete();
          e.subscribe(
            Qe(
              i,
              (l) => {
                r?.unsubscribe();
                let c = 0;
                const d = o++;
                St(n(l, d)).subscribe(
                  (r = Qe(
                    i,
                    (u) => i.next(t ? t(l, u, d, c++) : u),
                    () => {
                      (r = null), a();
                    }
                  ))
                );
              },
              () => {
                (s = !0), a();
              }
            )
          );
        });
      }
      const lH = ["trigger"],
        cH = ["panel"];
      function dH(n, t) {
        if ((1 & n && (F(0, "span", 10), qe(1), N()), 2 & n)) {
          const e = se();
          O(1), $i(e.placeholder);
        }
      }
      function uH(n, t) {
        if ((1 & n && (F(0, "span", 14), qe(1), N()), 2 & n)) {
          const e = se(2);
          O(1), $i(e.triggerValue);
        }
      }
      function hH(n, t) {
        1 & n && Ve(0, 0, ["*ngSwitchCase", "true"]);
      }
      function fH(n, t) {
        1 & n &&
          (F(0, "span", 11),
          W(1, uH, 2, 1, "span", 12),
          W(2, hH, 1, 0, "ng-content", 13),
          N()),
          2 & n &&
            (k("ngSwitch", !!se().customTrigger), O(2), k("ngSwitchCase", !0));
      }
      function pH(n, t) {
        if (1 & n) {
          const e = ji();
          pi(),
            oa(),
            F(0, "div", 15, 16),
            ve("@transformPanel.done", function (r) {
              return Un(e), Gn(se()._panelDoneAnimatingStream.next(r.toState));
            })("keydown", function (r) {
              return Un(e), Gn(se()._handleKeydown(r));
            }),
            Ve(2, 1),
            N();
        }
        if (2 & n) {
          const e = se();
          Wb(
            "mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open ",
            e._getPanelTheme(),
            ""
          ),
            k("ngClass", e.panelClass)("@transformPanel", "showing"),
            Se("id", e.id + "-panel")("aria-multiselectable", e.multiple)(
              "aria-label",
              e.ariaLabel || null
            )("aria-labelledby", e._getPanelAriaLabelledby());
        }
      }
      const mH = [[["mat-select-trigger"]], "*"],
        gH = ["mat-select-trigger", "*"],
        _H = {
          transformPanelWrap: yn("transformPanelWrap", [
            ot("* => void", Pl("@transformPanel", [Fl()], { optional: !0 })),
          ]),
          transformPanel: yn("transformPanel", [
            rt("void", he({ opacity: 0, transform: "scale(1, 0.8)" })),
            ot(
              "void => showing",
              gt(
                "120ms cubic-bezier(0, 0, 0.2, 1)",
                he({ opacity: 1, transform: "scale(1, 1)" })
              )
            ),
            ot("* => void", gt("100ms linear", he({ opacity: 0 }))),
          ]),
        };
      let Nx = 0;
      const Lx = new C("mat-select-scroll-strategy"),
        yH = new C("MAT_SELECT_CONFIG"),
        vH = {
          provide: Lx,
          deps: [Fn],
          useFactory: function bH(n) {
            return () => n.scrollStrategies.reposition();
          },
        },
        DH = new C("MatSelectTrigger");
      class wH {
        constructor(t, e) {
          (this.source = t), (this.value = e);
        }
      }
      const xH = Nw(
        ZL(
          gs(
            Lw(
              class {
                constructor(n, t, e, i, r) {
                  (this._elementRef = n),
                    (this._defaultErrorStateMatcher = t),
                    (this._parentForm = e),
                    (this._parentFormGroup = i),
                    (this.ngControl = r),
                    (this.stateChanges = new A());
                }
              }
            )
          )
        )
      );
      let CH = (() => {
          class n extends xH {
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(e) {
              (this._placeholder = e), this.stateChanges.next();
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(F0.required) ??
                !1
              );
            }
            set required(e) {
              (this._required = ae(e)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(e) {
              this._multiple = ae(e);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(e) {
              this._disableOptionCentering = ae(e);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(e) {
              (this._compareWith = e),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(e) {
              this._assignValue(e) && this._onChange(e);
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(e) {
              this._typeaheadDebounceInterval = $t(e);
            }
            get id() {
              return this._id;
            }
            set id(e) {
              (this._id = e || this._uid), this.stateChanges.next();
            }
            constructor(e, i, r, o, s, a, l, c, d, u, h, f, m, g) {
              super(s, o, l, c, u),
                (this._viewportRuler = e),
                (this._changeDetectorRef = i),
                (this._ngZone = r),
                (this._dir = a),
                (this._parentFormField = d),
                (this._liveAnnouncer = m),
                (this._defaultOptions = g),
                (this._panelOpen = !1),
                (this._compareWith = (_, v) => _ === v),
                (this._uid = "mat-select-" + Nx++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new A()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = "mat-select-value-" + Nx++),
                (this._panelDoneAnimatingStream = new A()),
                (this._overlayPanelClass =
                  this._defaultOptions?.overlayPanelClass || ""),
                (this._focused = !1),
                (this.controlType = "mat-select"),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  this._defaultOptions?.disableOptionCentering ?? !1),
                (this.ariaLabel = ""),
                (this.optionSelectionChanges = hf(() => {
                  const _ = this.options;
                  return _
                    ? _.changes.pipe(
                        ni(_),
                        rp(() => Pt(..._.map((v) => v.onSelectionChange)))
                      )
                    : this._ngZone.onStable.pipe(
                        Gt(1),
                        rp(() => this.optionSelectionChanges)
                      );
                })),
                (this.openedChange = new Q()),
                (this._openedStream = this.openedChange.pipe(
                  On((_) => _),
                  Kt(() => {})
                )),
                (this._closedStream = this.openedChange.pipe(
                  On((_) => !_),
                  Kt(() => {})
                )),
                (this.selectionChange = new Q()),
                (this.valueChange = new Q()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != g?.typeaheadDebounceInterval &&
                  (this._typeaheadDebounceInterval =
                    g.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = f),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(h) || 0),
                (this.id = this.id);
            }
            ngOnInit() {
              (this._selectionModel = new A2(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe(hw(), ge(this._destroy))
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe(ge(this._destroy))
                  .subscribe((e) => {
                    e.added.forEach((i) => i.select()),
                      e.removed.forEach((i) => i.deselect());
                  }),
                this.options.changes
                  .pipe(ni(null), ge(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              const e = this._getTriggerAriaLabelledby(),
                i = this.ngControl;
              if (e !== this._triggerAriaLabelledBy) {
                const r = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = e),
                  e
                    ? r.setAttribute("aria-labelledby", e)
                    : r.removeAttribute("aria-labelledby");
              }
              i &&
                (this._previousControl !== i.control &&
                  (void 0 !== this._previousControl &&
                    null !== i.disabled &&
                    i.disabled !== this.disabled &&
                    (this.disabled = i.disabled),
                  (this._previousControl = i.control)),
                this.updateErrorState());
            }
            ngOnChanges(e) {
              (e.disabled || e.userAriaDescribedBy) && this.stateChanges.next(),
                e.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval
                  );
            }
            ngOnDestroy() {
              this._keyManager?.destroy(),
                this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                ((this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? "rtl" : "ltr"
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(e) {
              this._assignValue(e);
            }
            registerOnChange(e) {
              this._onChange = e;
            }
            registerOnTouched(e) {
              this._onTouched = e;
            }
            setDisabledState(e) {
              (this.disabled = e),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple
                ? this._selectionModel?.selected || []
                : this._selectionModel?.selected[0];
            }
            get triggerValue() {
              if (this.empty) return "";
              if (this._multiple) {
                const e = this._selectionModel.selected.map((i) => i.viewValue);
                return this._isRtl() && e.reverse(), e.join(", ");
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && "rtl" === this._dir.value;
            }
            _handleKeydown(e) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(e)
                  : this._handleClosedKeydown(e));
            }
            _handleClosedKeydown(e) {
              const i = e.keyCode,
                r = 40 === i || 38 === i || 37 === i || 39 === i,
                o = 13 === i || 32 === i,
                s = this._keyManager;
              if (
                (!s.isTyping() && o && !vi(e)) ||
                ((this.multiple || e.altKey) && r)
              )
                e.preventDefault(), this.open();
              else if (!this.multiple) {
                const a = this.selected;
                s.onKeydown(e);
                const l = this.selected;
                l && a !== l && this._liveAnnouncer.announce(l.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(e) {
              const i = this._keyManager,
                r = e.keyCode,
                o = 40 === r || 38 === r,
                s = i.isTyping();
              if (o && e.altKey) e.preventDefault(), this.close();
              else if (s || (13 !== r && 32 !== r) || !i.activeItem || vi(e))
                if (!s && this._multiple && 65 === r && e.ctrlKey) {
                  e.preventDefault();
                  const a = this.options.some(
                    (l) => !l.disabled && !l.selected
                  );
                  this.options.forEach((l) => {
                    l.disabled || (a ? l.select() : l.deselect());
                  });
                } else {
                  const a = i.activeItemIndex;
                  i.onKeydown(e),
                    this._multiple &&
                      o &&
                      e.shiftKey &&
                      i.activeItem &&
                      i.activeItemIndex !== a &&
                      i.activeItem._selectViaInteraction();
                }
              else e.preventDefault(), i.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                this._keyManager?.cancelTypeahead(),
                !this.disabled &&
                  !this.panelOpen &&
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this._overlayDir.positionChange.pipe(Gt(1)).subscribe(() => {
                this._changeDetectorRef.detectChanges(),
                  this._positioningSettled();
              });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? `mat-${this._parentFormField.color}`
                : "";
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this.ngControl && (this._value = this.ngControl.value),
                  this._setSelectionByValue(this._value),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(e) {
              if (
                (this.options.forEach((i) => i.setInactiveStyles()),
                this._selectionModel.clear(),
                this.multiple && e)
              )
                Array.isArray(e),
                  e.forEach((i) => this._selectOptionByValue(i)),
                  this._sortValues();
              else {
                const i = this._selectOptionByValue(e);
                i
                  ? this._keyManager.updateActiveItem(i)
                  : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectOptionByValue(e) {
              const i = this.options.find((r) => {
                if (this._selectionModel.isSelected(r)) return !1;
                try {
                  return null != r.value && this._compareWith(r.value, e);
                } catch {
                  return !1;
                }
              });
              return i && this._selectionModel.select(i), i;
            }
            _assignValue(e) {
              return (
                !!(e !== this._value || (this._multiple && Array.isArray(e))) &&
                (this.options && this._setSelectionByValue(e),
                (this._value = e),
                !0)
              );
            }
            _initKeyManager() {
              (this._keyManager = new uL(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? "rtl" : "ltr")
                .withHomeAndEnd()
                .withPageUpDown()
                .withAllowedModifierKeys(["shiftKey"])),
                this._keyManager.tabOut.subscribe(() => {
                  this.panelOpen &&
                    (!this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction(),
                    this.focus(),
                    this.close());
                }),
                this._keyManager.change.subscribe(() => {
                  this._panelOpen && this.panel
                    ? this._scrollOptionIntoView(
                        this._keyManager.activeItemIndex || 0
                      )
                    : !this._panelOpen &&
                      !this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction();
                });
            }
            _resetOptions() {
              const e = Pt(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe(ge(e)).subscribe((i) => {
                this._onSelect(i.source, i.isUserInput),
                  i.isUserInput &&
                    !this.multiple &&
                    this._panelOpen &&
                    (this.close(), this.focus());
              }),
                Pt(...this.options.map((i) => i._stateChanges))
                  .pipe(ge(e))
                  .subscribe(() => {
                    this._changeDetectorRef.detectChanges(),
                      this.stateChanges.next();
                  });
            }
            _onSelect(e, i) {
              const r = this._selectionModel.isSelected(e);
              null != e.value || this._multiple
                ? (r !== e.selected &&
                    (e.selected
                      ? this._selectionModel.select(e)
                      : this._selectionModel.deselect(e)),
                  i && this._keyManager.setActiveItem(e),
                  this.multiple && (this._sortValues(), i && this.focus()))
                : (e.deselect(),
                  this._selectionModel.clear(),
                  null != this.value && this._propagateChanges(e.value)),
                r !== this._selectionModel.isSelected(e) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const e = this.options.toArray();
                this._selectionModel.sort((i, r) =>
                  this.sortComparator
                    ? this.sortComparator(i, r, e)
                    : e.indexOf(i) - e.indexOf(r)
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(e) {
              let i = null;
              (i = this.multiple
                ? this.selected.map((r) => r.value)
                : this.selected
                ? this.selected.value
                : e),
                (this._value = i),
                this.valueChange.emit(i),
                this._onChange(i),
                this.selectionChange.emit(this._getChangeEvent(i)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(
                      this._selectionModel.selected[0]
                    ));
            }
            _canOpen() {
              return (
                !this._panelOpen && !this.disabled && this.options?.length > 0
              );
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _getPanelAriaLabelledby() {
              if (this.ariaLabel) return null;
              const e = this._parentFormField?.getLabelId();
              return this.ariaLabelledby
                ? (e ? e + " " : "") + this.ariaLabelledby
                : e;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              if (this.ariaLabel) return null;
              const e = this._parentFormField?.getLabelId();
              let i = (e ? e + " " : "") + this._valueId;
              return this.ariaLabelledby && (i += " " + this.ariaLabelledby), i;
            }
            _panelDoneAnimating(e) {
              this.openedChange.emit(e);
            }
            setDescribedByIds(e) {
              e.length
                ? this._elementRef.nativeElement.setAttribute(
                    "aria-describedby",
                    e.join(" ")
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    "aria-describedby"
                  );
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return (
                this._panelOpen ||
                !this.empty ||
                (this._focused && !!this._placeholder)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                p(Qr),
                p(zt),
                p(V),
                p(Bw),
                p(U),
                p(Ut, 8),
                p(Ts, 8),
                p(As, 8),
                p(Vf, 8),
                p(Nn, 10),
                Eo("tabindex"),
                p(Lx),
                p(IL),
                p(yH, 8)
              );
            }),
            (n.ɵdir = x({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && (Oe(lH, 5), Oe(cH, 5), Oe(cw, 5)), 2 & e)) {
                  let r;
                  q((r = Y())) && (i.trigger = r.first),
                    q((r = Y())) && (i.panel = r.first),
                    q((r = Y())) && (i._overlayDir = r.first);
                }
              },
              inputs: {
                userAriaDescribedBy: [
                  "aria-describedby",
                  "userAriaDescribedBy",
                ],
                panelClass: "panelClass",
                placeholder: "placeholder",
                required: "required",
                multiple: "multiple",
                disableOptionCentering: "disableOptionCentering",
                compareWith: "compareWith",
                value: "value",
                ariaLabel: ["aria-label", "ariaLabel"],
                ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                errorStateMatcher: "errorStateMatcher",
                typeaheadDebounceInterval: "typeaheadDebounceInterval",
                sortComparator: "sortComparator",
                id: "id",
              },
              outputs: {
                openedChange: "openedChange",
                _openedStream: "opened",
                _closedStream: "closed",
                selectionChange: "selectionChange",
                valueChange: "valueChange",
              },
              features: [T, at],
            })),
            n
          );
        })(),
        EH = (() => {
          class n extends CH {
            constructor() {
              super(...arguments),
                (this._positions = [
                  {
                    originX: "start",
                    originY: "bottom",
                    overlayX: "start",
                    overlayY: "top",
                  },
                  {
                    originX: "start",
                    originY: "top",
                    overlayX: "start",
                    overlayY: "bottom",
                    panelClass: "mat-mdc-select-panel-above",
                  },
                ]),
                (this._hideSingleSelectionIndicator =
                  this._defaultOptions?.hideSingleSelectionIndicator ?? !1);
            }
            get shouldLabelFloat() {
              return (
                this.panelOpen ||
                !this.empty ||
                (this.focused && !!this.placeholder)
              );
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe(ge(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._overlayWidth = this._getOverlayWidth()),
                      this._changeDetectorRef.detectChanges());
                  });
            }
            ngAfterViewInit() {
              this._parentFormField &&
                (this._preferredOverlayOrigin =
                  this._parentFormField.getConnectedOverlayOrigin());
            }
            open() {
              (this._overlayWidth = this._getOverlayWidth()),
                super.open(),
                this.stateChanges.next();
            }
            close() {
              super.close(), this.stateChanges.next();
            }
            _scrollOptionIntoView(e) {
              const i = this.options.toArray()[e];
              if (i) {
                const r = this.panel.nativeElement,
                  o = (function c2(n, t, e) {
                    if (e.length) {
                      let i = t.toArray(),
                        r = e.toArray(),
                        o = 0;
                      for (let s = 0; s < n + 1; s++)
                        i[s].group && i[s].group === r[o] && o++;
                      return o;
                    }
                    return 0;
                  })(e, this.options, this.optionGroups),
                  s = i._getHostElement();
                r.scrollTop =
                  0 === e && 1 === o
                    ? 0
                    : (function d2(n, t, e, i) {
                        return n < e
                          ? n
                          : n + t > e + i
                          ? Math.max(0, n - i + t)
                          : e;
                      })(
                        s.offsetTop,
                        s.offsetHeight,
                        r.scrollTop,
                        r.offsetHeight
                      );
              }
            }
            _positioningSettled() {
              this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);
            }
            _getChangeEvent(e) {
              return new wH(this, e);
            }
            _getOverlayWidth() {
              return (
                this._preferredOverlayOrigin instanceof nf
                  ? this._preferredOverlayOrigin.elementRef
                  : this._preferredOverlayOrigin || this._elementRef
              ).nativeElement.getBoundingClientRect().width;
            }
            get hideSingleSelectionIndicator() {
              return this._hideSingleSelectionIndicator;
            }
            set hideSingleSelectionIndicator(e) {
              (this._hideSingleSelectionIndicator = ae(e)),
                this._syncParentProperties();
            }
            _syncParentProperties() {
              if (this.options)
                for (const e of this.options)
                  e._changeDetectorRef.markForCheck();
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = ue(n)))(i || n);
              };
            })()),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["mat-select"]],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e && (He(r, DH, 5), He(r, Yw, 5), He(r, qw, 5)), 2 & e)
                ) {
                  let o;
                  q((o = Y())) && (i.customTrigger = o.first),
                    q((o = Y())) && (i.options = o),
                    q((o = Y())) && (i.optionGroups = o);
                }
              },
              hostAttrs: [
                "role",
                "combobox",
                "aria-autocomplete",
                "none",
                "aria-haspopup",
                "listbox",
                1,
                "mat-mdc-select",
              ],
              hostVars: 19,
              hostBindings: function (e, i) {
                1 & e &&
                  ve("keydown", function (o) {
                    return i._handleKeydown(o);
                  })("focus", function () {
                    return i._onFocus();
                  })("blur", function () {
                    return i._onBlur();
                  }),
                  2 & e &&
                    (Se("id", i.id)("tabindex", i.tabIndex)(
                      "aria-controls",
                      i.panelOpen ? i.id + "-panel" : null
                    )("aria-expanded", i.panelOpen)(
                      "aria-label",
                      i.ariaLabel || null
                    )("aria-required", i.required.toString())(
                      "aria-disabled",
                      i.disabled.toString()
                    )("aria-invalid", i.errorState)(
                      "aria-activedescendant",
                      i._getAriaActiveDescendant()
                    ),
                    ke("mat-mdc-select-disabled", i.disabled)(
                      "mat-mdc-select-invalid",
                      i.errorState
                    )("mat-mdc-select-required", i.required)(
                      "mat-mdc-select-empty",
                      i.empty
                    )("mat-mdc-select-multiple", i.multiple));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                tabIndex: "tabIndex",
                hideSingleSelectionIndicator: "hideSingleSelectionIndicator",
              },
              exportAs: ["matSelect"],
              features: [
                j([
                  { provide: Lf, useExisting: n },
                  { provide: Ww, useExisting: n },
                ]),
                T,
              ],
              ngContentSelectors: gH,
              decls: 11,
              vars: 11,
              consts: [
                [
                  "cdk-overlay-origin",
                  "",
                  1,
                  "mat-mdc-select-trigger",
                  3,
                  "click",
                ],
                ["fallbackOverlayOrigin", "cdkOverlayOrigin", "trigger", ""],
                [1, "mat-mdc-select-value", 3, "ngSwitch"],
                [
                  "class",
                  "mat-mdc-select-placeholder mat-mdc-select-min-line",
                  4,
                  "ngSwitchCase",
                ],
                [
                  "class",
                  "mat-mdc-select-value-text",
                  3,
                  "ngSwitch",
                  4,
                  "ngSwitchCase",
                ],
                [1, "mat-mdc-select-arrow-wrapper"],
                [1, "mat-mdc-select-arrow"],
                [
                  "viewBox",
                  "0 0 24 24",
                  "width",
                  "24px",
                  "height",
                  "24px",
                  "focusable",
                  "false",
                ],
                ["d", "M7 10l5 5 5-5z"],
                [
                  "cdk-connected-overlay",
                  "",
                  "cdkConnectedOverlayLockPosition",
                  "",
                  "cdkConnectedOverlayHasBackdrop",
                  "",
                  "cdkConnectedOverlayBackdropClass",
                  "cdk-overlay-transparent-backdrop",
                  3,
                  "cdkConnectedOverlayPanelClass",
                  "cdkConnectedOverlayScrollStrategy",
                  "cdkConnectedOverlayOrigin",
                  "cdkConnectedOverlayOpen",
                  "cdkConnectedOverlayPositions",
                  "cdkConnectedOverlayWidth",
                  "backdropClick",
                  "attach",
                  "detach",
                ],
                [1, "mat-mdc-select-placeholder", "mat-mdc-select-min-line"],
                [1, "mat-mdc-select-value-text", 3, "ngSwitch"],
                ["class", "mat-mdc-select-min-line", 4, "ngSwitchDefault"],
                [4, "ngSwitchCase"],
                [1, "mat-mdc-select-min-line"],
                ["role", "listbox", "tabindex", "-1", 3, "ngClass", "keydown"],
                ["panel", ""],
              ],
              template: function (e, i) {
                if (
                  (1 & e &&
                    (Tn(mH),
                    F(0, "div", 0, 1),
                    ve("click", function () {
                      return i.toggle();
                    }),
                    F(3, "div", 2),
                    W(4, dH, 2, 1, "span", 3),
                    W(5, fH, 3, 2, "span", 4),
                    N(),
                    F(6, "div", 5)(7, "div", 6),
                    pi(),
                    F(8, "svg", 7),
                    we(9, "path", 8),
                    N()()()(),
                    W(10, pH, 3, 9, "ng-template", 9),
                    ve("backdropClick", function () {
                      return i.close();
                    })("attach", function () {
                      return i._onAttached();
                    })("detach", function () {
                      return i.close();
                    })),
                  2 & e)
                ) {
                  const r = La(1);
                  Se("aria-owns", i.panelOpen ? i.id + "-panel" : null),
                    O(3),
                    k("ngSwitch", i.empty),
                    Se("id", i._valueId),
                    O(1),
                    k("ngSwitchCase", !0),
                    O(1),
                    k("ngSwitchCase", !1),
                    O(5),
                    k("cdkConnectedOverlayPanelClass", i._overlayPanelClass)(
                      "cdkConnectedOverlayScrollStrategy",
                      i._scrollStrategy
                    )(
                      "cdkConnectedOverlayOrigin",
                      i._preferredOverlayOrigin || r
                    )("cdkConnectedOverlayOpen", i.panelOpen)(
                      "cdkConnectedOverlayPositions",
                      i._positions
                    )("cdkConnectedOverlayWidth", i._overlayWidth);
                }
              },
              dependencies: [vh, is, xh, uD, cw, nf],
              styles: [
                '.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:calc(100vw - 32px);max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:calc(100vh - 32px);max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}.mat-mdc-select{display:inline-block;width:100%;outline:none}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}.mdc-menu-surface.mat-mdc-select-panel{width:100%;max-height:275px;position:static;outline:0;margin:0;padding:8px 0;list-style-type:none}.mdc-menu-surface.mat-mdc-select-panel:focus{outline:none}.cdk-high-contrast-active .mdc-menu-surface.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) .mdc-menu-surface.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above .mdc-menu-surface.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}',
              ],
              encapsulation: 2,
              data: { animation: [_H.transformPanel] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        Vx = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({
              providers: [vH],
              imports: [kn, Sl, Kw, Xe, fs, xs, Kw, Xe],
            })),
            n
          );
        })();
      const SH = ["tooltip"],
        Bx = new C("mat-tooltip-scroll-strategy"),
        AH = {
          provide: Bx,
          deps: [Fn],
          useFactory: function TH(n) {
            return () => n.scrollStrategies.reposition({ scrollThrottle: 20 });
          },
        },
        RH = new C("mat-tooltip-default-options", {
          providedIn: "root",
          factory: function IH() {
            return { showDelay: 0, hideDelay: 0, touchendHideDelay: 1500 };
          },
        }),
        Hx = "tooltip-panel",
        jx = ii({ passive: !0 });
      let LH = (() => {
          class n {
            get position() {
              return this._position;
            }
            set position(e) {
              e !== this._position &&
                ((this._position = e),
                this._overlayRef &&
                  (this._updatePosition(this._overlayRef),
                  this._tooltipInstance?.show(0),
                  this._overlayRef.updatePosition()));
            }
            get positionAtOrigin() {
              return this._positionAtOrigin;
            }
            set positionAtOrigin(e) {
              (this._positionAtOrigin = ae(e)),
                this._detach(),
                (this._overlayRef = null);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = ae(e)),
                this._disabled
                  ? this.hide(0)
                  : this._setupPointerEnterEventsIfNeeded();
            }
            get showDelay() {
              return this._showDelay;
            }
            set showDelay(e) {
              this._showDelay = $t(e);
            }
            get hideDelay() {
              return this._hideDelay;
            }
            set hideDelay(e) {
              (this._hideDelay = $t(e)),
                this._tooltipInstance &&
                  (this._tooltipInstance._mouseLeaveHideDelay =
                    this._hideDelay);
            }
            get message() {
              return this._message;
            }
            set message(e) {
              this._ariaDescriber.removeDescription(
                this._elementRef.nativeElement,
                this._message,
                "tooltip"
              ),
                (this._message = null != e ? String(e).trim() : ""),
                !this._message && this._isTooltipVisible()
                  ? this.hide(0)
                  : (this._setupPointerEnterEventsIfNeeded(),
                    this._updateTooltipMessage(),
                    this._ngZone.runOutsideAngular(() => {
                      Promise.resolve().then(() => {
                        this._ariaDescriber.describe(
                          this._elementRef.nativeElement,
                          this.message,
                          "tooltip"
                        );
                      });
                    }));
            }
            get tooltipClass() {
              return this._tooltipClass;
            }
            set tooltipClass(e) {
              (this._tooltipClass = e),
                this._tooltipInstance &&
                  this._setTooltipClass(this._tooltipClass);
            }
            constructor(e, i, r, o, s, a, l, c, d, u, h, f) {
              (this._overlay = e),
                (this._elementRef = i),
                (this._scrollDispatcher = r),
                (this._viewContainerRef = o),
                (this._ngZone = s),
                (this._platform = a),
                (this._ariaDescriber = l),
                (this._focusMonitor = c),
                (this._dir = u),
                (this._defaultOptions = h),
                (this._position = "below"),
                (this._positionAtOrigin = !1),
                (this._disabled = !1),
                (this._viewInitialized = !1),
                (this._pointerExitEventsInitialized = !1),
                (this._viewportMargin = 8),
                (this._cssClassPrefix = "mat"),
                (this._showDelay = this._defaultOptions.showDelay),
                (this._hideDelay = this._defaultOptions.hideDelay),
                (this.touchGestures = "auto"),
                (this._message = ""),
                (this._passiveListeners = []),
                (this._destroyed = new A()),
                (this._scrollStrategy = d),
                (this._document = f),
                h &&
                  (h.position && (this.position = h.position),
                  h.positionAtOrigin &&
                    (this.positionAtOrigin = h.positionAtOrigin),
                  h.touchGestures && (this.touchGestures = h.touchGestures)),
                u.change.pipe(ge(this._destroyed)).subscribe(() => {
                  this._overlayRef && this._updatePosition(this._overlayRef);
                });
            }
            ngAfterViewInit() {
              (this._viewInitialized = !0),
                this._setupPointerEnterEventsIfNeeded(),
                this._focusMonitor
                  .monitor(this._elementRef)
                  .pipe(ge(this._destroyed))
                  .subscribe((e) => {
                    e
                      ? "keyboard" === e && this._ngZone.run(() => this.show())
                      : this._ngZone.run(() => this.hide(0));
                  });
            }
            ngOnDestroy() {
              const e = this._elementRef.nativeElement;
              clearTimeout(this._touchstartTimeout),
                this._overlayRef &&
                  (this._overlayRef.dispose(), (this._tooltipInstance = null)),
                this._passiveListeners.forEach(([i, r]) => {
                  e.removeEventListener(i, r, jx);
                }),
                (this._passiveListeners.length = 0),
                this._destroyed.next(),
                this._destroyed.complete(),
                this._ariaDescriber.removeDescription(
                  e,
                  this.message,
                  "tooltip"
                ),
                this._focusMonitor.stopMonitoring(e);
            }
            show(e = this.showDelay, i) {
              if (this.disabled || !this.message || this._isTooltipVisible())
                return void this._tooltipInstance?._cancelPendingAnimations();
              const r = this._createOverlay(i);
              this._detach(),
                (this._portal =
                  this._portal ||
                  new vl(this._tooltipComponent, this._viewContainerRef));
              const o = (this._tooltipInstance = r.attach(
                this._portal
              ).instance);
              (o._triggerElement = this._elementRef.nativeElement),
                (o._mouseLeaveHideDelay = this._hideDelay),
                o
                  .afterHidden()
                  .pipe(ge(this._destroyed))
                  .subscribe(() => this._detach()),
                this._setTooltipClass(this._tooltipClass),
                this._updateTooltipMessage(),
                o.show(e);
            }
            hide(e = this.hideDelay) {
              const i = this._tooltipInstance;
              i &&
                (i.isVisible()
                  ? i.hide(e)
                  : (i._cancelPendingAnimations(), this._detach()));
            }
            toggle(e) {
              this._isTooltipVisible() ? this.hide() : this.show(void 0, e);
            }
            _isTooltipVisible() {
              return (
                !!this._tooltipInstance && this._tooltipInstance.isVisible()
              );
            }
            _createOverlay(e) {
              if (this._overlayRef) {
                const o = this._overlayRef.getConfig().positionStrategy;
                if ((!this.positionAtOrigin || !e) && o._origin instanceof U)
                  return this._overlayRef;
                this._detach();
              }
              const i = this._scrollDispatcher.getAncestorScrollContainers(
                  this._elementRef
                ),
                r = this._overlay
                  .position()
                  .flexibleConnectedTo(
                    (this.positionAtOrigin && e) || this._elementRef
                  )
                  .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)
                  .withFlexibleDimensions(!1)
                  .withViewportMargin(this._viewportMargin)
                  .withScrollableContainers(i);
              return (
                r.positionChanges.pipe(ge(this._destroyed)).subscribe((o) => {
                  this._updateCurrentPositionClass(o.connectionPair),
                    this._tooltipInstance &&
                      o.scrollableViewProperties.isOverlayClipped &&
                      this._tooltipInstance.isVisible() &&
                      this._ngZone.run(() => this.hide(0));
                }),
                (this._overlayRef = this._overlay.create({
                  direction: this._dir,
                  positionStrategy: r,
                  panelClass: `${this._cssClassPrefix}-${Hx}`,
                  scrollStrategy: this._scrollStrategy(),
                })),
                this._updatePosition(this._overlayRef),
                this._overlayRef
                  .detachments()
                  .pipe(ge(this._destroyed))
                  .subscribe(() => this._detach()),
                this._overlayRef
                  .outsidePointerEvents()
                  .pipe(ge(this._destroyed))
                  .subscribe(() =>
                    this._tooltipInstance?._handleBodyInteraction()
                  ),
                this._overlayRef
                  .keydownEvents()
                  .pipe(ge(this._destroyed))
                  .subscribe((o) => {
                    this._isTooltipVisible() &&
                      27 === o.keyCode &&
                      !vi(o) &&
                      (o.preventDefault(),
                      o.stopPropagation(),
                      this._ngZone.run(() => this.hide(0)));
                  }),
                this._defaultOptions?.disableTooltipInteractivity &&
                  this._overlayRef.addPanelClass(
                    `${this._cssClassPrefix}-tooltip-panel-non-interactive`
                  ),
                this._overlayRef
              );
            }
            _detach() {
              this._overlayRef &&
                this._overlayRef.hasAttached() &&
                this._overlayRef.detach(),
                (this._tooltipInstance = null);
            }
            _updatePosition(e) {
              const i = e.getConfig().positionStrategy,
                r = this._getOrigin(),
                o = this._getOverlayPosition();
              i.withPositions([
                this._addOffset({ ...r.main, ...o.main }),
                this._addOffset({ ...r.fallback, ...o.fallback }),
              ]);
            }
            _addOffset(e) {
              return e;
            }
            _getOrigin() {
              const e = !this._dir || "ltr" == this._dir.value,
                i = this.position;
              let r;
              "above" == i || "below" == i
                ? (r = {
                    originX: "center",
                    originY: "above" == i ? "top" : "bottom",
                  })
                : "before" == i || ("left" == i && e) || ("right" == i && !e)
                ? (r = { originX: "start", originY: "center" })
                : ("after" == i ||
                    ("right" == i && e) ||
                    ("left" == i && !e)) &&
                  (r = { originX: "end", originY: "center" });
              const { x: o, y: s } = this._invertPosition(r.originX, r.originY);
              return { main: r, fallback: { originX: o, originY: s } };
            }
            _getOverlayPosition() {
              const e = !this._dir || "ltr" == this._dir.value,
                i = this.position;
              let r;
              "above" == i
                ? (r = { overlayX: "center", overlayY: "bottom" })
                : "below" == i
                ? (r = { overlayX: "center", overlayY: "top" })
                : "before" == i || ("left" == i && e) || ("right" == i && !e)
                ? (r = { overlayX: "end", overlayY: "center" })
                : ("after" == i ||
                    ("right" == i && e) ||
                    ("left" == i && !e)) &&
                  (r = { overlayX: "start", overlayY: "center" });
              const { x: o, y: s } = this._invertPosition(
                r.overlayX,
                r.overlayY
              );
              return { main: r, fallback: { overlayX: o, overlayY: s } };
            }
            _updateTooltipMessage() {
              this._tooltipInstance &&
                ((this._tooltipInstance.message = this.message),
                this._tooltipInstance._markForCheck(),
                this._ngZone.onMicrotaskEmpty
                  .pipe(Gt(1), ge(this._destroyed))
                  .subscribe(() => {
                    this._tooltipInstance && this._overlayRef.updatePosition();
                  }));
            }
            _setTooltipClass(e) {
              this._tooltipInstance &&
                ((this._tooltipInstance.tooltipClass = e),
                this._tooltipInstance._markForCheck());
            }
            _invertPosition(e, i) {
              return (
                "above" === this.position || "below" === this.position
                  ? "top" === i
                    ? (i = "bottom")
                    : "bottom" === i && (i = "top")
                  : "end" === e
                  ? (e = "start")
                  : "start" === e && (e = "end"),
                { x: e, y: i }
              );
            }
            _updateCurrentPositionClass(e) {
              const { overlayY: i, originX: r, originY: o } = e;
              let s;
              if (
                ((s =
                  "center" === i
                    ? this._dir && "rtl" === this._dir.value
                      ? "end" === r
                        ? "left"
                        : "right"
                      : "start" === r
                      ? "left"
                      : "right"
                    : "bottom" === i && "top" === o
                    ? "above"
                    : "below"),
                s !== this._currentPosition)
              ) {
                const a = this._overlayRef;
                if (a) {
                  const l = `${this._cssClassPrefix}-${Hx}-`;
                  a.removePanelClass(l + this._currentPosition),
                    a.addPanelClass(l + s);
                }
                this._currentPosition = s;
              }
            }
            _setupPointerEnterEventsIfNeeded() {
              this._disabled ||
                !this.message ||
                !this._viewInitialized ||
                this._passiveListeners.length ||
                (this._platformSupportsMouseEvents()
                  ? this._passiveListeners.push([
                      "mouseenter",
                      (e) => {
                        let i;
                        this._setupPointerExitEventsIfNeeded(),
                          void 0 !== e.x && void 0 !== e.y && (i = e),
                          this.show(void 0, i);
                      },
                    ])
                  : "off" !== this.touchGestures &&
                    (this._disableNativeGesturesIfNecessary(),
                    this._passiveListeners.push([
                      "touchstart",
                      (e) => {
                        const i = e.targetTouches?.[0],
                          r = i ? { x: i.clientX, y: i.clientY } : void 0;
                        this._setupPointerExitEventsIfNeeded(),
                          clearTimeout(this._touchstartTimeout),
                          (this._touchstartTimeout = setTimeout(
                            () => this.show(void 0, r),
                            500
                          ));
                      },
                    ])),
                this._addListeners(this._passiveListeners));
            }
            _setupPointerExitEventsIfNeeded() {
              if (this._pointerExitEventsInitialized) return;
              this._pointerExitEventsInitialized = !0;
              const e = [];
              if (this._platformSupportsMouseEvents())
                e.push(
                  [
                    "mouseleave",
                    (i) => {
                      const r = i.relatedTarget;
                      (!r || !this._overlayRef?.overlayElement.contains(r)) &&
                        this.hide();
                    },
                  ],
                  ["wheel", (i) => this._wheelListener(i)]
                );
              else if ("off" !== this.touchGestures) {
                this._disableNativeGesturesIfNecessary();
                const i = () => {
                  clearTimeout(this._touchstartTimeout),
                    this.hide(this._defaultOptions.touchendHideDelay);
                };
                e.push(["touchend", i], ["touchcancel", i]);
              }
              this._addListeners(e), this._passiveListeners.push(...e);
            }
            _addListeners(e) {
              e.forEach(([i, r]) => {
                this._elementRef.nativeElement.addEventListener(i, r, jx);
              });
            }
            _platformSupportsMouseEvents() {
              return !this._platform.IOS && !this._platform.ANDROID;
            }
            _wheelListener(e) {
              if (this._isTooltipVisible()) {
                const i = this._document.elementFromPoint(e.clientX, e.clientY),
                  r = this._elementRef.nativeElement;
                i !== r && !r.contains(i) && this.hide();
              }
            }
            _disableNativeGesturesIfNecessary() {
              const e = this.touchGestures;
              if ("off" !== e) {
                const i = this._elementRef.nativeElement,
                  r = i.style;
                ("on" === e ||
                  ("INPUT" !== i.nodeName && "TEXTAREA" !== i.nodeName)) &&
                  (r.userSelect =
                    r.msUserSelect =
                    r.webkitUserSelect =
                    r.MozUserSelect =
                      "none"),
                  ("on" === e || !i.draggable) && (r.webkitUserDrag = "none"),
                  (r.touchAction = "none"),
                  (r.webkitTapHighlightColor = "transparent");
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              Rr();
            }),
            (n.ɵdir = x({
              type: n,
              inputs: {
                position: ["matTooltipPosition", "position"],
                positionAtOrigin: [
                  "matTooltipPositionAtOrigin",
                  "positionAtOrigin",
                ],
                disabled: ["matTooltipDisabled", "disabled"],
                showDelay: ["matTooltipShowDelay", "showDelay"],
                hideDelay: ["matTooltipHideDelay", "hideDelay"],
                touchGestures: ["matTooltipTouchGestures", "touchGestures"],
                message: ["matTooltip", "message"],
                tooltipClass: ["matTooltipClass", "tooltipClass"],
              },
            })),
            n
          );
        })(),
        VH = (() => {
          class n extends LH {
            constructor(e, i, r, o, s, a, l, c, d, u, h, f) {
              super(e, i, r, o, s, a, l, c, d, u, h, f),
                (this._tooltipComponent = HH),
                (this._cssClassPrefix = "mat-mdc"),
                (this._viewportMargin = 8);
            }
            _addOffset(e) {
              const r = !this._dir || "ltr" == this._dir.value;
              return (
                "top" === e.originY
                  ? (e.offsetY = -8)
                  : "bottom" === e.originY
                  ? (e.offsetY = 8)
                  : "start" === e.originX
                  ? (e.offsetX = r ? -8 : 8)
                  : "end" === e.originX && (e.offsetX = r ? 8 : -8),
                e
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                p(Fn),
                p(U),
                p(Xr),
                p(tt),
                p(V),
                p(it),
                p(ww),
                p(to),
                p(Bx),
                p(Ut, 8),
                p(RH, 8),
                p(ne)
              );
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "matTooltip", ""]],
              hostAttrs: [1, "mat-mdc-tooltip-trigger"],
              exportAs: ["matTooltip"],
              features: [T],
            })),
            n
          );
        })(),
        BH = (() => {
          class n {
            constructor(e, i) {
              (this._changeDetectorRef = e),
                (this._closeOnInteraction = !1),
                (this._isVisible = !1),
                (this._onHide = new A()),
                (this._animationsDisabled = "NoopAnimations" === i);
            }
            show(e) {
              clearTimeout(this._hideTimeoutId),
                (this._showTimeoutId = setTimeout(() => {
                  this._toggleVisibility(!0), (this._showTimeoutId = void 0);
                }, e));
            }
            hide(e) {
              clearTimeout(this._showTimeoutId),
                (this._hideTimeoutId = setTimeout(() => {
                  this._toggleVisibility(!1), (this._hideTimeoutId = void 0);
                }, e));
            }
            afterHidden() {
              return this._onHide;
            }
            isVisible() {
              return this._isVisible;
            }
            ngOnDestroy() {
              this._cancelPendingAnimations(),
                this._onHide.complete(),
                (this._triggerElement = null);
            }
            _handleBodyInteraction() {
              this._closeOnInteraction && this.hide(0);
            }
            _markForCheck() {
              this._changeDetectorRef.markForCheck();
            }
            _handleMouseLeave({ relatedTarget: e }) {
              (!e || !this._triggerElement.contains(e)) &&
                (this.isVisible()
                  ? this.hide(this._mouseLeaveHideDelay)
                  : this._finalizeAnimation(!1));
            }
            _onShow() {}
            _handleAnimationEnd({ animationName: e }) {
              (e === this._showAnimation || e === this._hideAnimation) &&
                this._finalizeAnimation(e === this._showAnimation);
            }
            _cancelPendingAnimations() {
              clearTimeout(this._showTimeoutId),
                clearTimeout(this._hideTimeoutId),
                (this._showTimeoutId = this._hideTimeoutId = void 0);
            }
            _finalizeAnimation(e) {
              e
                ? (this._closeOnInteraction = !0)
                : this.isVisible() || this._onHide.next();
            }
            _toggleVisibility(e) {
              const i = this._tooltip.nativeElement,
                r = this._showAnimation,
                o = this._hideAnimation;
              if (
                (i.classList.remove(e ? o : r),
                i.classList.add(e ? r : o),
                (this._isVisible = e),
                e &&
                  !this._animationsDisabled &&
                  "function" == typeof getComputedStyle)
              ) {
                const s = getComputedStyle(i);
                ("0s" === s.getPropertyValue("animation-duration") ||
                  "none" === s.getPropertyValue("animation-name")) &&
                  (this._animationsDisabled = !0);
              }
              e && this._onShow(),
                this._animationsDisabled &&
                  (i.classList.add("_mat-animation-noopable"),
                  this._finalizeAnimation(e));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(zt), p(mn, 8));
            }),
            (n.ɵdir = x({ type: n })),
            n
          );
        })(),
        HH = (() => {
          class n extends BH {
            constructor(e, i, r) {
              super(e, r),
                (this._elementRef = i),
                (this._isMultiline = !1),
                (this._showAnimation = "mat-mdc-tooltip-show"),
                (this._hideAnimation = "mat-mdc-tooltip-hide");
            }
            _onShow() {
              (this._isMultiline = this._isTooltipMultiline()),
                this._markForCheck();
            }
            _isTooltipMultiline() {
              const e = this._elementRef.nativeElement.getBoundingClientRect();
              return e.height > 24 && e.width >= 200;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(zt), p(U), p(mn, 8));
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["mat-tooltip-component"]],
              viewQuery: function (e, i) {
                if ((1 & e && Oe(SH, 7), 2 & e)) {
                  let r;
                  q((r = Y())) && (i._tooltip = r.first);
                }
              },
              hostAttrs: ["aria-hidden", "true"],
              hostVars: 2,
              hostBindings: function (e, i) {
                1 & e &&
                  ve("mouseleave", function (o) {
                    return i._handleMouseLeave(o);
                  }),
                  2 & e && Xn("zoom", i.isVisible() ? 1 : null);
              },
              features: [T],
              decls: 4,
              vars: 4,
              consts: [
                [
                  1,
                  "mdc-tooltip",
                  "mdc-tooltip--shown",
                  "mat-mdc-tooltip",
                  3,
                  "ngClass",
                  "animationend",
                ],
                ["tooltip", ""],
                [1, "mdc-tooltip__surface", "mdc-tooltip__surface-animation"],
              ],
              template: function (e, i) {
                1 & e &&
                  (F(0, "div", 0, 1),
                  ve("animationend", function (o) {
                    return i._handleAnimationEnd(o);
                  }),
                  F(2, "div", 2),
                  qe(3),
                  N()()),
                  2 & e &&
                    (ke("mdc-tooltip--multiline", i._isMultiline),
                    k("ngClass", i.tooltipClass),
                    O(3),
                    $i(i.message));
              },
              dependencies: [vh],
              styles: [
                '.mdc-tooltip__surface{word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - (2 * 8px));margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - (2 * 8px));align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color, #fff)}.mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape, var(--mdc-shape-small, 4px))}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape, var(--mdc-shape-small, 4px))}.mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color, #000)}.mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font, inherit);font-size:var(--mdc-plain-tooltip-supporting-text-size, inherit);font-weight:var(--mdc-plain-tooltip-supporting-text-weight, inherit);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, inherit)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:"";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        jH = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({
              providers: [AH],
              imports: [Iw, kn, Sl, Xe, Xe, fs],
            })),
            n
          );
        })();
      function zH(n, t) {
        if ((1 & n && (F(0, "mat-option", 19), qe(1), N()), 2 & n)) {
          const e = t.$implicit;
          k("value", e), O(1), Ot(" ", e, " ");
        }
      }
      function $H(n, t) {
        if (1 & n) {
          const e = ji();
          F(0, "mat-form-field", 16)(1, "mat-select", 17),
            ve("selectionChange", function (r) {
              return Un(e), Gn(se(2)._changePageSize(r.value));
            }),
            W(2, zH, 2, 2, "mat-option", 18),
            N()();
        }
        if (2 & n) {
          const e = se(2);
          k("appearance", e._formFieldAppearance)("color", e.color),
            O(1),
            k("value", e.pageSize)("disabled", e.disabled)(
              "aria-labelledby",
              e._pageSizeLabelId
            )("panelClass", e.selectConfig.panelClass || "")(
              "disableOptionCentering",
              e.selectConfig.disableOptionCentering
            ),
            O(1),
            k("ngForOf", e._displayedPageSizeOptions);
        }
      }
      function UH(n, t) {
        if ((1 & n && (F(0, "div", 20), qe(1), N()), 2 & n)) {
          const e = se(2);
          O(1), $i(e.pageSize);
        }
      }
      function GH(n, t) {
        if (
          (1 & n &&
            (F(0, "div", 12)(1, "div", 13),
            qe(2),
            N(),
            W(3, $H, 3, 8, "mat-form-field", 14),
            W(4, UH, 2, 1, "div", 15),
            N()),
          2 & n)
        ) {
          const e = se();
          O(1),
            Du("id", e._pageSizeLabelId),
            O(1),
            Ot(" ", e._intl.itemsPerPageLabel, " "),
            O(1),
            k("ngIf", e._displayedPageSizeOptions.length > 1),
            O(1),
            k("ngIf", e._displayedPageSizeOptions.length <= 1);
        }
      }
      function WH(n, t) {
        if (1 & n) {
          const e = ji();
          F(0, "button", 21),
            ve("click", function () {
              return Un(e), Gn(se().firstPage());
            }),
            pi(),
            F(1, "svg", 7),
            we(2, "path", 22),
            N()();
        }
        if (2 & n) {
          const e = se();
          k("matTooltip", e._intl.firstPageLabel)(
            "matTooltipDisabled",
            e._previousButtonsDisabled()
          )("matTooltipPosition", "above")(
            "disabled",
            e._previousButtonsDisabled()
          ),
            Se("aria-label", e._intl.firstPageLabel);
        }
      }
      function qH(n, t) {
        if (1 & n) {
          const e = ji();
          pi(),
            oa(),
            F(0, "button", 23),
            ve("click", function () {
              return Un(e), Gn(se().lastPage());
            }),
            pi(),
            F(1, "svg", 7),
            we(2, "path", 24),
            N()();
        }
        if (2 & n) {
          const e = se();
          k("matTooltip", e._intl.lastPageLabel)(
            "matTooltipDisabled",
            e._nextButtonsDisabled()
          )("matTooltipPosition", "above")(
            "disabled",
            e._nextButtonsDisabled()
          ),
            Se("aria-label", e._intl.lastPageLabel);
        }
      }
      let rc = (() => {
        class n {
          constructor() {
            (this.changes = new A()),
              (this.itemsPerPageLabel = "Items per page:"),
              (this.nextPageLabel = "Next page"),
              (this.previousPageLabel = "Previous page"),
              (this.firstPageLabel = "First page"),
              (this.lastPageLabel = "Last page"),
              (this.getRangeLabel = (e, i, r) => {
                if (0 == r || 0 == i) return `0 of ${r}`;
                const o = e * i;
                return `${o + 1} \u2013 ${
                  o < (r = Math.max(r, 0)) ? Math.min(o + i, r) : o + i
                } of ${r}`;
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const KH = {
          provide: rc,
          deps: [[new Pi(), new yr(), rc]],
          useFactory: function YH(n) {
            return n || new rc();
          },
        },
        XH = new C("MAT_PAGINATOR_DEFAULT_OPTIONS"),
        QH = gs(Vw(class {}));
      let JH = (() => {
          class n extends QH {
            get pageIndex() {
              return this._pageIndex;
            }
            set pageIndex(e) {
              (this._pageIndex = Math.max($t(e), 0)),
                this._changeDetectorRef.markForCheck();
            }
            get length() {
              return this._length;
            }
            set length(e) {
              (this._length = $t(e)), this._changeDetectorRef.markForCheck();
            }
            get pageSize() {
              return this._pageSize;
            }
            set pageSize(e) {
              (this._pageSize = Math.max($t(e), 0)),
                this._updateDisplayedPageSizeOptions();
            }
            get pageSizeOptions() {
              return this._pageSizeOptions;
            }
            set pageSizeOptions(e) {
              (this._pageSizeOptions = (e || []).map((i) => $t(i))),
                this._updateDisplayedPageSizeOptions();
            }
            get hidePageSize() {
              return this._hidePageSize;
            }
            set hidePageSize(e) {
              this._hidePageSize = ae(e);
            }
            get showFirstLastButtons() {
              return this._showFirstLastButtons;
            }
            set showFirstLastButtons(e) {
              this._showFirstLastButtons = ae(e);
            }
            constructor(e, i, r) {
              if (
                (super(),
                (this._intl = e),
                (this._changeDetectorRef = i),
                (this._pageIndex = 0),
                (this._length = 0),
                (this._pageSizeOptions = []),
                (this._hidePageSize = !1),
                (this._showFirstLastButtons = !1),
                (this.selectConfig = {}),
                (this.page = new Q()),
                (this._intlChanges = e.changes.subscribe(() =>
                  this._changeDetectorRef.markForCheck()
                )),
                r)
              ) {
                const {
                  pageSize: o,
                  pageSizeOptions: s,
                  hidePageSize: a,
                  showFirstLastButtons: l,
                } = r;
                null != o && (this._pageSize = o),
                  null != s && (this._pageSizeOptions = s),
                  null != a && (this._hidePageSize = a),
                  null != l && (this._showFirstLastButtons = l);
              }
            }
            ngOnInit() {
              (this._initialized = !0),
                this._updateDisplayedPageSizeOptions(),
                this._markInitialized();
            }
            ngOnDestroy() {
              this._intlChanges.unsubscribe();
            }
            nextPage() {
              if (!this.hasNextPage()) return;
              const e = this.pageIndex;
              (this.pageIndex = this.pageIndex + 1), this._emitPageEvent(e);
            }
            previousPage() {
              if (!this.hasPreviousPage()) return;
              const e = this.pageIndex;
              (this.pageIndex = this.pageIndex - 1), this._emitPageEvent(e);
            }
            firstPage() {
              if (!this.hasPreviousPage()) return;
              const e = this.pageIndex;
              (this.pageIndex = 0), this._emitPageEvent(e);
            }
            lastPage() {
              if (!this.hasNextPage()) return;
              const e = this.pageIndex;
              (this.pageIndex = this.getNumberOfPages() - 1),
                this._emitPageEvent(e);
            }
            hasPreviousPage() {
              return this.pageIndex >= 1 && 0 != this.pageSize;
            }
            hasNextPage() {
              const e = this.getNumberOfPages() - 1;
              return this.pageIndex < e && 0 != this.pageSize;
            }
            getNumberOfPages() {
              return this.pageSize ? Math.ceil(this.length / this.pageSize) : 0;
            }
            _changePageSize(e) {
              const r = this.pageIndex;
              (this.pageIndex =
                Math.floor((this.pageIndex * this.pageSize) / e) || 0),
                (this.pageSize = e),
                this._emitPageEvent(r);
            }
            _nextButtonsDisabled() {
              return this.disabled || !this.hasNextPage();
            }
            _previousButtonsDisabled() {
              return this.disabled || !this.hasPreviousPage();
            }
            _updateDisplayedPageSizeOptions() {
              this._initialized &&
                (this.pageSize ||
                  (this._pageSize =
                    0 != this.pageSizeOptions.length
                      ? this.pageSizeOptions[0]
                      : 50),
                (this._displayedPageSizeOptions = this.pageSizeOptions.slice()),
                -1 === this._displayedPageSizeOptions.indexOf(this.pageSize) &&
                  this._displayedPageSizeOptions.push(this.pageSize),
                this._displayedPageSizeOptions.sort((e, i) => e - i),
                this._changeDetectorRef.markForCheck());
            }
            _emitPageEvent(e) {
              this.page.emit({
                previousPageIndex: e,
                pageIndex: this.pageIndex,
                pageSize: this.pageSize,
                length: this.length,
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              Rr();
            }),
            (n.ɵdir = x({
              type: n,
              inputs: {
                color: "color",
                pageIndex: "pageIndex",
                length: "length",
                pageSize: "pageSize",
                pageSizeOptions: "pageSizeOptions",
                hidePageSize: "hidePageSize",
                showFirstLastButtons: "showFirstLastButtons",
                selectConfig: "selectConfig",
              },
              outputs: { page: "page" },
              features: [T],
            })),
            n
          );
        })(),
        ej = 0,
        zx = (() => {
          class n extends JH {
            constructor(e, i, r) {
              super(e, i, r),
                (this._pageSizeLabelId =
                  "mat-paginator-page-size-label-" + ej++),
                (this._formFieldAppearance =
                  r?.formFieldAppearance || "outline");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(rc), p(zt), p(XH, 8));
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["mat-paginator"]],
              hostAttrs: ["role", "group", 1, "mat-mdc-paginator"],
              inputs: { disabled: "disabled" },
              exportAs: ["matPaginator"],
              features: [T],
              decls: 14,
              vars: 14,
              consts: [
                [1, "mat-mdc-paginator-outer-container"],
                [1, "mat-mdc-paginator-container"],
                ["class", "mat-mdc-paginator-page-size", 4, "ngIf"],
                [1, "mat-mdc-paginator-range-actions"],
                ["aria-live", "polite", 1, "mat-mdc-paginator-range-label"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  "class",
                  "mat-mdc-paginator-navigation-first",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-mdc-paginator-navigation-previous",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                [
                  "viewBox",
                  "0 0 24 24",
                  "focusable",
                  "false",
                  1,
                  "mat-mdc-paginator-icon",
                ],
                ["d", "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-mdc-paginator-navigation-next",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                ["d", "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  "class",
                  "mat-mdc-paginator-navigation-last",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [1, "mat-mdc-paginator-page-size"],
                [1, "mat-mdc-paginator-page-size-label", 3, "id"],
                [
                  "class",
                  "mat-mdc-paginator-page-size-select",
                  3,
                  "appearance",
                  "color",
                  4,
                  "ngIf",
                ],
                ["class", "mat-mdc-paginator-page-size-value", 4, "ngIf"],
                [
                  1,
                  "mat-mdc-paginator-page-size-select",
                  3,
                  "appearance",
                  "color",
                ],
                [
                  "hideSingleSelectionIndicator",
                  "",
                  3,
                  "value",
                  "disabled",
                  "aria-labelledby",
                  "panelClass",
                  "disableOptionCentering",
                  "selectionChange",
                ],
                [3, "value", 4, "ngFor", "ngForOf"],
                [3, "value"],
                [1, "mat-mdc-paginator-page-size-value"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-mdc-paginator-navigation-first",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                [
                  "d",
                  "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z",
                ],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-mdc-paginator-navigation-last",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                [
                  "d",
                  "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (F(0, "div", 0)(1, "div", 1),
                  W(2, GH, 5, 4, "div", 2),
                  F(3, "div", 3)(4, "div", 4),
                  qe(5),
                  N(),
                  W(6, WH, 3, 5, "button", 5),
                  F(7, "button", 6),
                  ve("click", function () {
                    return i.previousPage();
                  }),
                  pi(),
                  F(8, "svg", 7),
                  we(9, "path", 8),
                  N()(),
                  oa(),
                  F(10, "button", 9),
                  ve("click", function () {
                    return i.nextPage();
                  }),
                  pi(),
                  F(11, "svg", 7),
                  we(12, "path", 10),
                  N()(),
                  W(13, qH, 3, 5, "button", 11),
                  N()()()),
                  2 & e &&
                    (O(2),
                    k("ngIf", !i.hidePageSize),
                    O(3),
                    Ot(
                      " ",
                      i._intl.getRangeLabel(i.pageIndex, i.pageSize, i.length),
                      " "
                    ),
                    O(1),
                    k("ngIf", i.showFirstLastButtons),
                    O(1),
                    k("matTooltip", i._intl.previousPageLabel)(
                      "matTooltipDisabled",
                      i._previousButtonsDisabled()
                    )("matTooltipPosition", "above")(
                      "disabled",
                      i._previousButtonsDisabled()
                    ),
                    Se("aria-label", i._intl.previousPageLabel),
                    O(3),
                    k("matTooltip", i._intl.nextPageLabel)(
                      "matTooltipDisabled",
                      i._nextButtonsDisabled()
                    )("matTooltipPosition", "above")(
                      "disabled",
                      i._nextButtonsDisabled()
                    ),
                    Se("aria-label", i._intl.nextPageLabel),
                    O(3),
                    k("ngIf", i.showFirstLastButtons));
              },
              dependencies: [Dh, ns, xV, I0, EH, Yw, VH],
              styles: [
                ".mat-mdc-paginator{display:block}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        $x = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ providers: [KH], imports: [kn, CV, Vx, jH] })),
            n
          );
        })();
      const Ux = ii({ passive: !0 });
      let tj = (() => {
          class n {
            constructor(e, i) {
              (this._platform = e),
                (this._ngZone = i),
                (this._monitoredElements = new Map());
            }
            monitor(e) {
              if (!this._platform.isBrowser) return $s;
              const i = je(e),
                r = this._monitoredElements.get(i);
              if (r) return r.subject;
              const o = new A(),
                s = "cdk-text-field-autofilled",
                a = (l) => {
                  "cdk-text-field-autofill-start" !== l.animationName ||
                  i.classList.contains(s)
                    ? "cdk-text-field-autofill-end" === l.animationName &&
                      i.classList.contains(s) &&
                      (i.classList.remove(s),
                      this._ngZone.run(() =>
                        o.next({ target: l.target, isAutofilled: !1 })
                      ))
                    : (i.classList.add(s),
                      this._ngZone.run(() =>
                        o.next({ target: l.target, isAutofilled: !0 })
                      ));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  i.addEventListener("animationstart", a, Ux),
                    i.classList.add("cdk-text-field-autofill-monitored");
                }),
                this._monitoredElements.set(i, {
                  subject: o,
                  unlisten: () => {
                    i.removeEventListener("animationstart", a, Ux);
                  },
                }),
                o
              );
            }
            stopMonitoring(e) {
              const i = je(e),
                r = this._monitoredElements.get(i);
              r &&
                (r.unlisten(),
                r.subject.complete(),
                i.classList.remove("cdk-text-field-autofill-monitored"),
                i.classList.remove("cdk-text-field-autofilled"),
                this._monitoredElements.delete(i));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((e, i) => this.stopMonitoring(i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(it), b(V));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        nj = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({})),
            n
          );
        })();
      const ij = new C("MAT_INPUT_VALUE_ACCESSOR"),
        rj = [
          "button",
          "checkbox",
          "file",
          "hidden",
          "image",
          "radio",
          "range",
          "reset",
          "submit",
        ];
      let oj = 0;
      const sj = Lw(
        class {
          constructor(n, t, e, i) {
            (this._defaultErrorStateMatcher = n),
              (this._parentForm = t),
              (this._parentFormGroup = e),
              (this.ngControl = i),
              (this.stateChanges = new A());
          }
        }
      );
      let aj = (() => {
          class n extends sj {
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = ae(e)),
                this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(e) {
              this._id = e || this._uid;
            }
            get required() {
              return (
                this._required ??
                this.ngControl?.control?.hasValidator(F0.required) ??
                !1
              );
            }
            set required(e) {
              this._required = ae(e);
            }
            get type() {
              return this._type;
            }
            set type(e) {
              (this._type = e || "text"),
                this._validateType(),
                !this._isTextarea &&
                  qD().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(e) {
              e !== this.value &&
                ((this._inputValueAccessor.value = e),
                this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(e) {
              this._readonly = ae(e);
            }
            constructor(e, i, r, o, s, a, l, c, d, u) {
              super(a, o, s, r),
                (this._elementRef = e),
                (this._platform = i),
                (this._autofillMonitor = c),
                (this._formField = u),
                (this._uid = "mat-input-" + oj++),
                (this.focused = !1),
                (this.stateChanges = new A()),
                (this.controlType = "mat-input"),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._type = "text"),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  "date",
                  "datetime",
                  "datetime-local",
                  "month",
                  "time",
                  "week",
                ].filter((m) => qD().has(m))),
                (this._iOSKeyupListener = (m) => {
                  const g = m.target;
                  !g.value &&
                    0 === g.selectionStart &&
                    0 === g.selectionEnd &&
                    (g.setSelectionRange(1, 1), g.setSelectionRange(0, 0));
                });
              const h = this._elementRef.nativeElement,
                f = h.nodeName.toLowerCase();
              (this._inputValueAccessor = l || h),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                i.IOS &&
                  d.runOutsideAngular(() => {
                    e.nativeElement.addEventListener(
                      "keyup",
                      this._iOSKeyupListener
                    );
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = "select" === f),
                (this._isTextarea = "textarea" === f),
                (this._isInFormField = !!u),
                this._isNativeSelect &&
                  (this.controlType = h.multiple
                    ? "mat-native-select-multiple"
                    : "mat-native-select");
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor
                  .monitor(this._elementRef.nativeElement)
                  .subscribe((e) => {
                    (this.autofilled = e.isAutofilled),
                      this.stateChanges.next();
                  });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser &&
                  this._autofillMonitor.stopMonitoring(
                    this._elementRef.nativeElement
                  ),
                this._platform.IOS &&
                  this._elementRef.nativeElement.removeEventListener(
                    "keyup",
                    this._iOSKeyupListener
                  );
            }
            ngDoCheck() {
              this.ngControl &&
                (this.updateErrorState(),
                null !== this.ngControl.disabled &&
                  this.ngControl.disabled !== this.disabled &&
                  ((this.disabled = this.ngControl.disabled),
                  this.stateChanges.next())),
                this._dirtyCheckNativeValue(),
                this._dirtyCheckPlaceholder();
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _focusChanged(e) {
              e !== this.focused &&
                ((this.focused = e), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckNativeValue() {
              const e = this._elementRef.nativeElement.value;
              this._previousNativeValue !== e &&
                ((this._previousNativeValue = e), this.stateChanges.next());
            }
            _dirtyCheckPlaceholder() {
              const e = this._getPlaceholder();
              if (e !== this._previousPlaceholder) {
                const i = this._elementRef.nativeElement;
                (this._previousPlaceholder = e),
                  e
                    ? i.setAttribute("placeholder", e)
                    : i.removeAttribute("placeholder");
              }
            }
            _getPlaceholder() {
              return this.placeholder || null;
            }
            _validateType() {
              rj.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let e = this._elementRef.nativeElement.validity;
              return e && e.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const e = this._elementRef.nativeElement,
                  i = e.options[0];
                return (
                  this.focused ||
                  e.multiple ||
                  !this.empty ||
                  !!(e.selectedIndex > -1 && i && i.label)
                );
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(e) {
              e.length
                ? this._elementRef.nativeElement.setAttribute(
                    "aria-describedby",
                    e.join(" ")
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    "aria-describedby"
                  );
            }
            onContainerClick() {
              this.focused || this.focus();
            }
            _isInlineSelect() {
              const e = this._elementRef.nativeElement;
              return this._isNativeSelect && (e.multiple || e.size > 1);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                p(U),
                p(it),
                p(Nn, 10),
                p(Ts, 8),
                p(As, 8),
                p(Bw),
                p(ij, 10),
                p(tj),
                p(V),
                p(Vf, 8)
              );
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [
                ["input", "matInput", ""],
                ["textarea", "matInput", ""],
                ["select", "matNativeControl", ""],
                ["input", "matNativeControl", ""],
                ["textarea", "matNativeControl", ""],
              ],
              hostAttrs: [1, "mat-mdc-input-element"],
              hostVars: 18,
              hostBindings: function (e, i) {
                1 & e &&
                  ve("focus", function () {
                    return i._focusChanged(!0);
                  })("blur", function () {
                    return i._focusChanged(!1);
                  })("input", function () {
                    return i._onInput();
                  }),
                  2 & e &&
                    ($r("id", i.id)("disabled", i.disabled)(
                      "required",
                      i.required
                    ),
                    Se("name", i.name || null)(
                      "readonly",
                      (i.readonly && !i._isNativeSelect) || null
                    )(
                      "aria-invalid",
                      i.empty && i.required ? null : i.errorState
                    )("aria-required", i.required)("id", i.id),
                    ke("mat-input-server", i._isServer)(
                      "mat-mdc-form-field-textarea-control",
                      i._isInFormField && i._isTextarea
                    )("mat-mdc-form-field-input-control", i._isInFormField)(
                      "mdc-text-field__input",
                      i._isInFormField
                    )("mat-mdc-native-select-inline", i._isInlineSelect()));
              },
              inputs: {
                disabled: "disabled",
                id: "id",
                placeholder: "placeholder",
                name: "name",
                required: "required",
                type: "type",
                errorStateMatcher: "errorStateMatcher",
                userAriaDescribedBy: [
                  "aria-describedby",
                  "userAriaDescribedBy",
                ],
                value: "value",
                readonly: "readonly",
              },
              exportAs: ["matInput"],
              features: [j([{ provide: Lf, useExisting: n }]), T, at],
            })),
            n
          );
        })(),
        Gx = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ imports: [Xe, xs, xs, nj, Xe] })),
            n
          );
        })();
      function Wx(n) {
        return new w(3e3, !1);
      }
      function zj() {
        return typeof window < "u" && typeof window.document < "u";
      }
      function op() {
        return (
          typeof process < "u" &&
          "[object process]" === {}.toString.call(process)
        );
      }
      function Ci(n) {
        switch (n.length) {
          case 0:
            return new ys();
          case 1:
            return n[0];
          default:
            return new e0(n);
        }
      }
      function qx(n, t, e, i, r = new Map(), o = new Map()) {
        const s = [],
          a = [];
        let l = -1,
          c = null;
        if (
          (i.forEach((d) => {
            const u = d.get("offset"),
              h = u == l,
              f = (h && c) || new Map();
            d.forEach((m, g) => {
              let _ = g,
                v = m;
              if ("offset" !== g)
                switch (((_ = t.normalizePropertyName(_, s)), v)) {
                  case gf:
                    v = r.get(g);
                    break;
                  case ri:
                    v = o.get(g);
                    break;
                  default:
                    v = t.normalizeStyleValue(g, _, v, s);
                }
              f.set(_, v);
            }),
              h || a.push(f),
              (c = f),
              (l = u);
          }),
          s.length)
        )
          throw (function Ij(n) {
            return new w(3502, !1);
          })();
        return a;
      }
      function sp(n, t, e, i) {
        switch (t) {
          case "start":
            n.onStart(() => i(e && ap(e, "start", n)));
            break;
          case "done":
            n.onDone(() => i(e && ap(e, "done", n)));
            break;
          case "destroy":
            n.onDestroy(() => i(e && ap(e, "destroy", n)));
        }
      }
      function ap(n, t, e) {
        const o = lp(
            n.element,
            n.triggerName,
            n.fromState,
            n.toState,
            t || n.phaseName,
            e.totalTime ?? n.totalTime,
            !!e.disabled
          ),
          s = n._data;
        return null != s && (o._data = s), o;
      }
      function lp(n, t, e, i, r = "", o = 0, s) {
        return {
          element: n,
          triggerName: t,
          fromState: e,
          toState: i,
          phaseName: r,
          totalTime: o,
          disabled: !!s,
        };
      }
      function Wt(n, t, e) {
        let i = n.get(t);
        return i || n.set(t, (i = e)), i;
      }
      function Yx(n) {
        const t = n.indexOf(":");
        return [n.substring(1, t), n.slice(t + 1)];
      }
      let cp = (n, t) => !1,
        Kx = (n, t, e) => [],
        Zx = null;
      function dp(n) {
        const t = n.parentNode || n.host;
        return t === Zx ? null : t;
      }
      (op() || typeof Element < "u") &&
        (zj()
          ? ((Zx = (() => document.documentElement)()),
            (cp = (n, t) => {
              for (; t; ) {
                if (t === n) return !0;
                t = dp(t);
              }
              return !1;
            }))
          : (cp = (n, t) => n.contains(t)),
        (Kx = (n, t, e) => {
          if (e) return Array.from(n.querySelectorAll(t));
          const i = n.querySelector(t);
          return i ? [i] : [];
        }));
      let Qi = null,
        Xx = !1;
      const Qx = cp,
        Jx = Kx;
      let eC = (() => {
          class n {
            validateStyleProperty(e) {
              return (function Uj(n) {
                Qi ||
                  ((Qi =
                    (function Gj() {
                      return typeof document < "u" ? document.body : null;
                    })() || {}),
                  (Xx = !!Qi.style && "WebkitAppearance" in Qi.style));
                let t = !0;
                return (
                  Qi.style &&
                    !(function $j(n) {
                      return "ebkit" == n.substring(1, 6);
                    })(n) &&
                    ((t = n in Qi.style),
                    !t &&
                      Xx &&
                      (t =
                        "Webkit" + n.charAt(0).toUpperCase() + n.slice(1) in
                        Qi.style)),
                  t
                );
              })(e);
            }
            matchesElement(e, i) {
              return !1;
            }
            containsElement(e, i) {
              return Qx(e, i);
            }
            getParentElement(e) {
              return dp(e);
            }
            query(e, i, r) {
              return Jx(e, i, r);
            }
            computeStyle(e, i, r) {
              return r || "";
            }
            animate(e, i, r, o, s, a = [], l) {
              return new ys(r, o);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        up = (() => {
          class n {}
          return (n.NOOP = new eC()), n;
        })();
      const Wj = 1e3,
        hp = "ng-enter",
        oc = "ng-leave",
        sc = "ng-trigger",
        ac = ".ng-trigger",
        nC = "ng-animating",
        fp = ".ng-animating";
      function ai(n) {
        if ("number" == typeof n) return n;
        const t = n.match(/^(-?[\.\d]+)(m?s)/);
        return !t || t.length < 2 ? 0 : pp(parseFloat(t[1]), t[2]);
      }
      function pp(n, t) {
        return "s" === t ? n * Wj : n;
      }
      function lc(n, t, e) {
        return n.hasOwnProperty("duration")
          ? n
          : (function Yj(n, t, e) {
              let r,
                o = 0,
                s = "";
              if ("string" == typeof n) {
                const a = n.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === a)
                  return t.push(Wx()), { duration: 0, delay: 0, easing: "" };
                r = pp(parseFloat(a[1]), a[2]);
                const l = a[3];
                null != l && (o = pp(parseFloat(l), a[4]));
                const c = a[5];
                c && (s = c);
              } else r = n;
              if (!e) {
                let a = !1,
                  l = t.length;
                r < 0 &&
                  (t.push(
                    (function lj() {
                      return new w(3100, !1);
                    })()
                  ),
                  (a = !0)),
                  o < 0 &&
                    (t.push(
                      (function cj() {
                        return new w(3101, !1);
                      })()
                    ),
                    (a = !0)),
                  a && t.splice(l, 0, Wx());
              }
              return { duration: r, delay: o, easing: s };
            })(n, t, e);
      }
      function Is(n, t = {}) {
        return (
          Object.keys(n).forEach((e) => {
            t[e] = n[e];
          }),
          t
        );
      }
      function iC(n) {
        const t = new Map();
        return (
          Object.keys(n).forEach((e) => {
            t.set(e, n[e]);
          }),
          t
        );
      }
      function Ei(n, t = new Map(), e) {
        if (e) for (let [i, r] of e) t.set(i, r);
        for (let [i, r] of n) t.set(i, r);
        return t;
      }
      function oC(n, t, e) {
        return e ? t + ":" + e + ";" : "";
      }
      function sC(n) {
        let t = "";
        for (let e = 0; e < n.style.length; e++) {
          const i = n.style.item(e);
          t += oC(0, i, n.style.getPropertyValue(i));
        }
        for (const e in n.style)
          n.style.hasOwnProperty(e) &&
            !e.startsWith("_") &&
            (t += oC(0, Qj(e), n.style[e]));
        n.setAttribute("style", t);
      }
      function Ln(n, t, e) {
        n.style &&
          (t.forEach((i, r) => {
            const o = gp(r);
            e && !e.has(r) && e.set(r, n.style[o]), (n.style[o] = i);
          }),
          op() && sC(n));
      }
      function Ji(n, t) {
        n.style &&
          (t.forEach((e, i) => {
            const r = gp(i);
            n.style[r] = "";
          }),
          op() && sC(n));
      }
      function Rs(n) {
        return Array.isArray(n) ? (1 == n.length ? n[0] : Qw(n)) : n;
      }
      const mp = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function aC(n) {
        let t = [];
        if ("string" == typeof n) {
          let e;
          for (; (e = mp.exec(n)); ) t.push(e[1]);
          mp.lastIndex = 0;
        }
        return t;
      }
      function ks(n, t, e) {
        const i = n.toString(),
          r = i.replace(mp, (o, s) => {
            let a = t[s];
            return (
              null == a &&
                (e.push(
                  (function uj(n) {
                    return new w(3003, !1);
                  })()
                ),
                (a = "")),
              a.toString()
            );
          });
        return r == i ? n : r;
      }
      function cc(n) {
        const t = [];
        let e = n.next();
        for (; !e.done; ) t.push(e.value), (e = n.next());
        return t;
      }
      const Xj = /-+([a-z0-9])/g;
      function gp(n) {
        return n.replace(Xj, (...t) => t[1].toUpperCase());
      }
      function Qj(n) {
        return n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
      }
      function qt(n, t, e) {
        switch (t.type) {
          case 7:
            return n.visitTrigger(t, e);
          case 0:
            return n.visitState(t, e);
          case 1:
            return n.visitTransition(t, e);
          case 2:
            return n.visitSequence(t, e);
          case 3:
            return n.visitGroup(t, e);
          case 4:
            return n.visitAnimate(t, e);
          case 5:
            return n.visitKeyframes(t, e);
          case 6:
            return n.visitStyle(t, e);
          case 8:
            return n.visitReference(t, e);
          case 9:
            return n.visitAnimateChild(t, e);
          case 10:
            return n.visitAnimateRef(t, e);
          case 11:
            return n.visitQuery(t, e);
          case 12:
            return n.visitStagger(t, e);
          default:
            throw (function hj(n) {
              return new w(3004, !1);
            })();
        }
      }
      function lC(n, t) {
        return window.getComputedStyle(n)[t];
      }
      const hc = "*";
      function rz(n, t) {
        const e = [];
        return (
          "string" == typeof n
            ? n.split(/\s*,\s*/).forEach((i) =>
                (function oz(n, t, e) {
                  if (":" == n[0]) {
                    const l = (function sz(n, t) {
                      switch (n) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (e, i) => parseFloat(i) > parseFloat(e);
                        case ":decrement":
                          return (e, i) => parseFloat(i) < parseFloat(e);
                        default:
                          return (
                            t.push(
                              (function Sj(n) {
                                return new w(3016, !1);
                              })()
                            ),
                            "* => *"
                          );
                      }
                    })(n, e);
                    if ("function" == typeof l) return void t.push(l);
                    n = l;
                  }
                  const i = n.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return (
                      e.push(
                        (function Ej(n) {
                          return new w(3015, !1);
                        })()
                      ),
                      t
                    );
                  const r = i[1],
                    o = i[2],
                    s = i[3];
                  t.push(cC(r, s));
                  "<" == o[0] && !(r == hc && s == hc) && t.push(cC(s, r));
                })(i, e, t)
              )
            : e.push(n),
          e
        );
      }
      const fc = new Set(["true", "1"]),
        pc = new Set(["false", "0"]);
      function cC(n, t) {
        const e = fc.has(n) || pc.has(n),
          i = fc.has(t) || pc.has(t);
        return (r, o) => {
          let s = n == hc || n == r,
            a = t == hc || t == o;
          return (
            !s && e && "boolean" == typeof r && (s = r ? fc.has(n) : pc.has(n)),
            !a && i && "boolean" == typeof o && (a = o ? fc.has(t) : pc.has(t)),
            s && a
          );
        };
      }
      const az = new RegExp("s*:selfs*,?", "g");
      function _p(n, t, e, i) {
        return new lz(n).build(t, e, i);
      }
      class lz {
        constructor(t) {
          this._driver = t;
        }
        build(t, e, i) {
          const r = new uz(e);
          return this._resetContextStyleTimingState(r), qt(this, Rs(t), r);
        }
        _resetContextStyleTimingState(t) {
          (t.currentQuerySelector = ""),
            (t.collectedStyles = new Map()),
            t.collectedStyles.set("", new Map()),
            (t.currentTime = 0);
        }
        visitTrigger(t, e) {
          let i = (e.queryCount = 0),
            r = (e.depCount = 0);
          const o = [],
            s = [];
          return (
            "@" == t.name.charAt(0) &&
              e.errors.push(
                (function pj() {
                  return new w(3006, !1);
                })()
              ),
            t.definitions.forEach((a) => {
              if ((this._resetContextStyleTimingState(e), 0 == a.type)) {
                const l = a,
                  c = l.name;
                c
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((d) => {
                    (l.name = d), o.push(this.visitState(l, e));
                  }),
                  (l.name = c);
              } else if (1 == a.type) {
                const l = this.visitTransition(a, e);
                (i += l.queryCount), (r += l.depCount), s.push(l);
              } else
                e.errors.push(
                  (function mj() {
                    return new w(3007, !1);
                  })()
                );
            }),
            {
              type: 7,
              name: t.name,
              states: o,
              transitions: s,
              queryCount: i,
              depCount: r,
              options: null,
            }
          );
        }
        visitState(t, e) {
          const i = this.visitStyle(t.styles, e),
            r = (t.options && t.options.params) || null;
          if (i.containsDynamicStyles) {
            const o = new Set(),
              s = r || {};
            i.styles.forEach((a) => {
              a instanceof Map &&
                a.forEach((l) => {
                  aC(l).forEach((c) => {
                    s.hasOwnProperty(c) || o.add(c);
                  });
                });
            }),
              o.size &&
                (cc(o.values()),
                e.errors.push(
                  (function gj(n, t) {
                    return new w(3008, !1);
                  })()
                ));
          }
          return {
            type: 0,
            name: t.name,
            style: i,
            options: r ? { params: r } : null,
          };
        }
        visitTransition(t, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const i = qt(this, Rs(t.animation), e);
          return {
            type: 1,
            matchers: rz(t.expr, e.errors),
            animation: i,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: er(t.options),
          };
        }
        visitSequence(t, e) {
          return {
            type: 2,
            steps: t.steps.map((i) => qt(this, i, e)),
            options: er(t.options),
          };
        }
        visitGroup(t, e) {
          const i = e.currentTime;
          let r = 0;
          const o = t.steps.map((s) => {
            e.currentTime = i;
            const a = qt(this, s, e);
            return (r = Math.max(r, e.currentTime)), a;
          });
          return (
            (e.currentTime = r), { type: 3, steps: o, options: er(t.options) }
          );
        }
        visitAnimate(t, e) {
          const i = (function fz(n, t) {
            if (n.hasOwnProperty("duration")) return n;
            if ("number" == typeof n) return bp(lc(n, t).duration, 0, "");
            const e = n;
            if (
              e
                .split(/\s+/)
                .some((o) => "{" == o.charAt(0) && "{" == o.charAt(1))
            ) {
              const o = bp(0, 0, "");
              return (o.dynamic = !0), (o.strValue = e), o;
            }
            const r = lc(e, t);
            return bp(r.duration, r.delay, r.easing);
          })(t.timings, e.errors);
          e.currentAnimateTimings = i;
          let r,
            o = t.styles ? t.styles : he({});
          if (5 == o.type) r = this.visitKeyframes(o, e);
          else {
            let s = t.styles,
              a = !1;
            if (!s) {
              a = !0;
              const c = {};
              i.easing && (c.easing = i.easing), (s = he(c));
            }
            e.currentTime += i.duration + i.delay;
            const l = this.visitStyle(s, e);
            (l.isEmptyStep = a), (r = l);
          }
          return (
            (e.currentAnimateTimings = null),
            { type: 4, timings: i, style: r, options: null }
          );
        }
        visitStyle(t, e) {
          const i = this._makeStyleAst(t, e);
          return this._validateStyleAst(i, e), i;
        }
        _makeStyleAst(t, e) {
          const i = [],
            r = Array.isArray(t.styles) ? t.styles : [t.styles];
          for (let a of r)
            "string" == typeof a
              ? a === ri
                ? i.push(a)
                : e.errors.push(new w(3002, !1))
              : i.push(iC(a));
          let o = !1,
            s = null;
          return (
            i.forEach((a) => {
              if (
                a instanceof Map &&
                (a.has("easing") && ((s = a.get("easing")), a.delete("easing")),
                !o)
              )
                for (let l of a.values())
                  if (l.toString().indexOf("{{") >= 0) {
                    o = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: i,
              easing: s,
              offset: t.offset,
              containsDynamicStyles: o,
              options: null,
            }
          );
        }
        _validateStyleAst(t, e) {
          const i = e.currentAnimateTimings;
          let r = e.currentTime,
            o = e.currentTime;
          i && o > 0 && (o -= i.duration + i.delay),
            t.styles.forEach((s) => {
              "string" != typeof s &&
                s.forEach((a, l) => {
                  const c = e.collectedStyles.get(e.currentQuerySelector),
                    d = c.get(l);
                  let u = !0;
                  d &&
                    (o != r &&
                      o >= d.startTime &&
                      r <= d.endTime &&
                      (e.errors.push(
                        (function bj(n, t, e, i, r) {
                          return new w(3010, !1);
                        })()
                      ),
                      (u = !1)),
                    (o = d.startTime)),
                    u && c.set(l, { startTime: o, endTime: r }),
                    e.options &&
                      (function Zj(n, t, e) {
                        const i = t.params || {},
                          r = aC(n);
                        r.length &&
                          r.forEach((o) => {
                            i.hasOwnProperty(o) ||
                              e.push(
                                (function dj(n) {
                                  return new w(3001, !1);
                                })()
                              );
                          });
                      })(a, e.options, e.errors);
                });
            });
        }
        visitKeyframes(t, e) {
          const i = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return (
              e.errors.push(
                (function yj() {
                  return new w(3011, !1);
                })()
              ),
              i
            );
          let o = 0;
          const s = [];
          let a = !1,
            l = !1,
            c = 0;
          const d = t.steps.map((v) => {
            const E = this._makeStyleAst(v, e);
            let y =
                null != E.offset
                  ? E.offset
                  : (function hz(n) {
                      if ("string" == typeof n) return null;
                      let t = null;
                      if (Array.isArray(n))
                        n.forEach((e) => {
                          if (e instanceof Map && e.has("offset")) {
                            const i = e;
                            (t = parseFloat(i.get("offset"))),
                              i.delete("offset");
                          }
                        });
                      else if (n instanceof Map && n.has("offset")) {
                        const e = n;
                        (t = parseFloat(e.get("offset"))), e.delete("offset");
                      }
                      return t;
                    })(E.styles),
              S = 0;
            return (
              null != y && (o++, (S = E.offset = y)),
              (l = l || S < 0 || S > 1),
              (a = a || S < c),
              (c = S),
              s.push(S),
              E
            );
          });
          l &&
            e.errors.push(
              (function vj() {
                return new w(3012, !1);
              })()
            ),
            a &&
              e.errors.push(
                (function Dj() {
                  return new w(3200, !1);
                })()
              );
          const u = t.steps.length;
          let h = 0;
          o > 0 && o < u
            ? e.errors.push(
                (function wj() {
                  return new w(3202, !1);
                })()
              )
            : 0 == o && (h = 1 / (u - 1));
          const f = u - 1,
            m = e.currentTime,
            g = e.currentAnimateTimings,
            _ = g.duration;
          return (
            d.forEach((v, E) => {
              const y = h > 0 ? (E == f ? 1 : h * E) : s[E],
                S = y * _;
              (e.currentTime = m + g.delay + S),
                (g.duration = S),
                this._validateStyleAst(v, e),
                (v.offset = y),
                i.styles.push(v);
            }),
            i
          );
        }
        visitReference(t, e) {
          return {
            type: 8,
            animation: qt(this, Rs(t.animation), e),
            options: er(t.options),
          };
        }
        visitAnimateChild(t, e) {
          return e.depCount++, { type: 9, options: er(t.options) };
        }
        visitAnimateRef(t, e) {
          return {
            type: 10,
            animation: this.visitReference(t.animation, e),
            options: er(t.options),
          };
        }
        visitQuery(t, e) {
          const i = e.currentQuerySelector,
            r = t.options || {};
          e.queryCount++, (e.currentQuery = t);
          const [o, s] = (function cz(n) {
            const t = !!n.split(/\s*,\s*/).find((e) => ":self" == e);
            return (
              t && (n = n.replace(az, "")),
              (n = n
                .replace(/@\*/g, ac)
                .replace(/@\w+/g, (e) => ac + "-" + e.slice(1))
                .replace(/:animating/g, fp)),
              [n, t]
            );
          })(t.selector);
          (e.currentQuerySelector = i.length ? i + " " + o : o),
            Wt(e.collectedStyles, e.currentQuerySelector, new Map());
          const a = qt(this, Rs(t.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = i),
            {
              type: 11,
              selector: o,
              limit: r.limit || 0,
              optional: !!r.optional,
              includeSelf: s,
              animation: a,
              originalSelector: t.selector,
              options: er(t.options),
            }
          );
        }
        visitStagger(t, e) {
          e.currentQuery ||
            e.errors.push(
              (function xj() {
                return new w(3013, !1);
              })()
            );
          const i =
            "full" === t.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : lc(t.timings, e.errors, !0);
          return {
            type: 12,
            animation: qt(this, Rs(t.animation), e),
            timings: i,
            options: null,
          };
        }
      }
      class uz {
        constructor(t) {
          (this.errors = t),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function er(n) {
        return (
          n
            ? (n = Is(n)).params &&
              (n.params = (function dz(n) {
                return n ? Is(n) : null;
              })(n.params))
            : (n = {}),
          n
        );
      }
      function bp(n, t, e) {
        return { duration: n, delay: t, easing: e };
      }
      function yp(n, t, e, i, r, o, s = null, a = !1) {
        return {
          type: 1,
          element: n,
          keyframes: t,
          preStyleProps: e,
          postStyleProps: i,
          duration: r,
          delay: o,
          totalTime: r + o,
          easing: s,
          subTimeline: a,
        };
      }
      class mc {
        constructor() {
          this._map = new Map();
        }
        get(t) {
          return this._map.get(t) || [];
        }
        append(t, e) {
          let i = this._map.get(t);
          i || this._map.set(t, (i = [])), i.push(...e);
        }
        has(t) {
          return this._map.has(t);
        }
        clear() {
          this._map.clear();
        }
      }
      const gz = new RegExp(":enter", "g"),
        bz = new RegExp(":leave", "g");
      function vp(n, t, e, i, r, o = new Map(), s = new Map(), a, l, c = []) {
        return new yz().buildKeyframes(n, t, e, i, r, o, s, a, l, c);
      }
      class yz {
        buildKeyframes(t, e, i, r, o, s, a, l, c, d = []) {
          c = c || new mc();
          const u = new Dp(t, e, c, r, o, d, []);
          u.options = l;
          const h = l.delay ? ai(l.delay) : 0;
          u.currentTimeline.delayNextStep(h),
            u.currentTimeline.setStyles([s], null, u.errors, l),
            qt(this, i, u);
          const f = u.timelines.filter((m) => m.containsAnimation());
          if (f.length && a.size) {
            let m;
            for (let g = f.length - 1; g >= 0; g--) {
              const _ = f[g];
              if (_.element === e) {
                m = _;
                break;
              }
            }
            m &&
              !m.allowOnlyTimelineStyles() &&
              m.setStyles([a], null, u.errors, l);
          }
          return f.length
            ? f.map((m) => m.buildKeyframes())
            : [yp(e, [], [], [], 0, h, "", !1)];
        }
        visitTrigger(t, e) {}
        visitState(t, e) {}
        visitTransition(t, e) {}
        visitAnimateChild(t, e) {
          const i = e.subInstructions.get(e.element);
          if (i) {
            const r = e.createSubContext(t.options),
              o = e.currentTimeline.currentTime,
              s = this._visitSubInstructions(i, r, r.options);
            o != s && e.transformIntoNewTimeline(s);
          }
          e.previousNode = t;
        }
        visitAnimateRef(t, e) {
          const i = e.createSubContext(t.options);
          i.transformIntoNewTimeline(),
            this._applyAnimationRefDelays(
              [t.options, t.animation.options],
              e,
              i
            ),
            this.visitReference(t.animation, i),
            e.transformIntoNewTimeline(i.currentTimeline.currentTime),
            (e.previousNode = t);
        }
        _applyAnimationRefDelays(t, e, i) {
          for (const r of t) {
            const o = r?.delay;
            if (o) {
              const s =
                "number" == typeof o ? o : ai(ks(o, r?.params ?? {}, e.errors));
              i.delayNextStep(s);
            }
          }
        }
        _visitSubInstructions(t, e, i) {
          let o = e.currentTimeline.currentTime;
          const s = null != i.duration ? ai(i.duration) : null,
            a = null != i.delay ? ai(i.delay) : null;
          return (
            0 !== s &&
              t.forEach((l) => {
                const c = e.appendInstructionToTimeline(l, s, a);
                o = Math.max(o, c.duration + c.delay);
              }),
            o
          );
        }
        visitReference(t, e) {
          e.updateOptions(t.options, !0),
            qt(this, t.animation, e),
            (e.previousNode = t);
        }
        visitSequence(t, e) {
          const i = e.subContextCount;
          let r = e;
          const o = t.options;
          if (
            o &&
            (o.params || o.delay) &&
            ((r = e.createSubContext(o)),
            r.transformIntoNewTimeline(),
            null != o.delay)
          ) {
            6 == r.previousNode.type &&
              (r.currentTimeline.snapshotCurrentStyles(),
              (r.previousNode = gc));
            const s = ai(o.delay);
            r.delayNextStep(s);
          }
          t.steps.length &&
            (t.steps.forEach((s) => qt(this, s, r)),
            r.currentTimeline.applyStylesToKeyframe(),
            r.subContextCount > i && r.transformIntoNewTimeline()),
            (e.previousNode = t);
        }
        visitGroup(t, e) {
          const i = [];
          let r = e.currentTimeline.currentTime;
          const o = t.options && t.options.delay ? ai(t.options.delay) : 0;
          t.steps.forEach((s) => {
            const a = e.createSubContext(t.options);
            o && a.delayNextStep(o),
              qt(this, s, a),
              (r = Math.max(r, a.currentTimeline.currentTime)),
              i.push(a.currentTimeline);
          }),
            i.forEach((s) => e.currentTimeline.mergeTimelineCollectedStyles(s)),
            e.transformIntoNewTimeline(r),
            (e.previousNode = t);
        }
        _visitTiming(t, e) {
          if (t.dynamic) {
            const i = t.strValue;
            return lc(e.params ? ks(i, e.params, e.errors) : i, e.errors);
          }
          return { duration: t.duration, delay: t.delay, easing: t.easing };
        }
        visitAnimate(t, e) {
          const i = (e.currentAnimateTimings = this._visitTiming(t.timings, e)),
            r = e.currentTimeline;
          i.delay && (e.incrementTime(i.delay), r.snapshotCurrentStyles());
          const o = t.style;
          5 == o.type
            ? this.visitKeyframes(o, e)
            : (e.incrementTime(i.duration),
              this.visitStyle(o, e),
              r.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = t);
        }
        visitStyle(t, e) {
          const i = e.currentTimeline,
            r = e.currentAnimateTimings;
          !r && i.hasCurrentStyleProperties() && i.forwardFrame();
          const o = (r && r.easing) || t.easing;
          t.isEmptyStep
            ? i.applyEmptyStep(o)
            : i.setStyles(t.styles, o, e.errors, e.options),
            (e.previousNode = t);
        }
        visitKeyframes(t, e) {
          const i = e.currentAnimateTimings,
            r = e.currentTimeline.duration,
            o = i.duration,
            a = e.createSubContext().currentTimeline;
          (a.easing = i.easing),
            t.styles.forEach((l) => {
              a.forwardTime((l.offset || 0) * o),
                a.setStyles(l.styles, l.easing, e.errors, e.options),
                a.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(a),
            e.transformIntoNewTimeline(r + o),
            (e.previousNode = t);
        }
        visitQuery(t, e) {
          const i = e.currentTimeline.currentTime,
            r = t.options || {},
            o = r.delay ? ai(r.delay) : 0;
          o &&
            (6 === e.previousNode.type ||
              (0 == i && e.currentTimeline.hasCurrentStyleProperties())) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = gc));
          let s = i;
          const a = e.invokeQuery(
            t.selector,
            t.originalSelector,
            t.limit,
            t.includeSelf,
            !!r.optional,
            e.errors
          );
          e.currentQueryTotal = a.length;
          let l = null;
          a.forEach((c, d) => {
            e.currentQueryIndex = d;
            const u = e.createSubContext(t.options, c);
            o && u.delayNextStep(o),
              c === e.element && (l = u.currentTimeline),
              qt(this, t.animation, u),
              u.currentTimeline.applyStylesToKeyframe(),
              (s = Math.max(s, u.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(s),
            l &&
              (e.currentTimeline.mergeTimelineCollectedStyles(l),
              e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = t);
        }
        visitStagger(t, e) {
          const i = e.parentContext,
            r = e.currentTimeline,
            o = t.timings,
            s = Math.abs(o.duration),
            a = s * (e.currentQueryTotal - 1);
          let l = s * e.currentQueryIndex;
          switch (o.duration < 0 ? "reverse" : o.easing) {
            case "reverse":
              l = a - l;
              break;
            case "full":
              l = i.currentStaggerTime;
          }
          const d = e.currentTimeline;
          l && d.delayNextStep(l);
          const u = d.currentTime;
          qt(this, t.animation, e),
            (e.previousNode = t),
            (i.currentStaggerTime =
              r.currentTime - u + (r.startTime - i.currentTimeline.startTime));
        }
      }
      const gc = {};
      class Dp {
        constructor(t, e, i, r, o, s, a, l) {
          (this._driver = t),
            (this.element = e),
            (this.subInstructions = i),
            (this._enterClassName = r),
            (this._leaveClassName = o),
            (this.errors = s),
            (this.timelines = a),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = gc),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = l || new _c(this._driver, e, 0)),
            a.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(t, e) {
          if (!t) return;
          const i = t;
          let r = this.options;
          null != i.duration && (r.duration = ai(i.duration)),
            null != i.delay && (r.delay = ai(i.delay));
          const o = i.params;
          if (o) {
            let s = r.params;
            s || (s = this.options.params = {}),
              Object.keys(o).forEach((a) => {
                (!e || !s.hasOwnProperty(a)) &&
                  (s[a] = ks(o[a], s, this.errors));
              });
          }
        }
        _copyOptions() {
          const t = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const i = (t.params = {});
              Object.keys(e).forEach((r) => {
                i[r] = e[r];
              });
            }
          }
          return t;
        }
        createSubContext(t = null, e, i) {
          const r = e || this.element,
            o = new Dp(
              this._driver,
              r,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(r, i || 0)
            );
          return (
            (o.previousNode = this.previousNode),
            (o.currentAnimateTimings = this.currentAnimateTimings),
            (o.options = this._copyOptions()),
            o.updateOptions(t),
            (o.currentQueryIndex = this.currentQueryIndex),
            (o.currentQueryTotal = this.currentQueryTotal),
            (o.parentContext = this),
            this.subContextCount++,
            o
          );
        }
        transformIntoNewTimeline(t) {
          return (
            (this.previousNode = gc),
            (this.currentTimeline = this.currentTimeline.fork(this.element, t)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(t, e, i) {
          const r = {
              duration: e ?? t.duration,
              delay: this.currentTimeline.currentTime + (i ?? 0) + t.delay,
              easing: "",
            },
            o = new vz(
              this._driver,
              t.element,
              t.keyframes,
              t.preStyleProps,
              t.postStyleProps,
              r,
              t.stretchStartingKeyframe
            );
          return this.timelines.push(o), r;
        }
        incrementTime(t) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + t);
        }
        delayNextStep(t) {
          t > 0 && this.currentTimeline.delayNextStep(t);
        }
        invokeQuery(t, e, i, r, o, s) {
          let a = [];
          if ((r && a.push(this.element), t.length > 0)) {
            t = (t = t.replace(gz, "." + this._enterClassName)).replace(
              bz,
              "." + this._leaveClassName
            );
            let c = this._driver.query(this.element, t, 1 != i);
            0 !== i &&
              (c = i < 0 ? c.slice(c.length + i, c.length) : c.slice(0, i)),
              a.push(...c);
          }
          return (
            !o &&
              0 == a.length &&
              s.push(
                (function Cj(n) {
                  return new w(3014, !1);
                })()
              ),
            a
          );
        }
      }
      class _c {
        constructor(t, e, i, r) {
          (this._driver = t),
            (this.element = e),
            (this.startTime = i),
            (this._elementTimelineStylesLookup = r),
            (this.duration = 0),
            (this.easing = null),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                e,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(t) {
          const e = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || e
            ? (this.forwardTime(this.currentTime + t),
              e && this.snapshotCurrentStyles())
            : (this.startTime += t);
        }
        fork(t, e) {
          return (
            this.applyStylesToKeyframe(),
            new _c(
              this._driver,
              t,
              e || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(t) {
          this.applyStylesToKeyframe(),
            (this.duration = t),
            this._loadKeyframe();
        }
        _updateStyle(t, e) {
          this._localTimelineStyles.set(t, e),
            this._globalTimelineStyles.set(t, e),
            this._styleSummary.set(t, { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(t) {
          t && this._previousKeyframe.set("easing", t);
          for (let [e, i] of this._globalTimelineStyles)
            this._backFill.set(e, i || ri), this._currentKeyframe.set(e, ri);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(t, e, i, r) {
          e && this._previousKeyframe.set("easing", e);
          const o = (r && r.params) || {},
            s = (function Dz(n, t) {
              const e = new Map();
              let i;
              return (
                n.forEach((r) => {
                  if ("*" === r) {
                    i = i || t.keys();
                    for (let o of i) e.set(o, ri);
                  } else Ei(r, e);
                }),
                e
              );
            })(t, this._globalTimelineStyles);
          for (let [a, l] of s) {
            const c = ks(l, o, i);
            this._pendingStyles.set(a, c),
              this._localTimelineStyles.has(a) ||
                this._backFill.set(a, this._globalTimelineStyles.get(a) ?? ri),
              this._updateStyle(a, c);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((t, e) => {
              this._currentKeyframe.set(e, t);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((t, e) => {
              this._currentKeyframe.has(e) || this._currentKeyframe.set(e, t);
            }));
        }
        snapshotCurrentStyles() {
          for (let [t, e] of this._localTimelineStyles)
            this._pendingStyles.set(t, e), this._updateStyle(t, e);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const t = [];
          for (let e in this._currentKeyframe) t.push(e);
          return t;
        }
        mergeTimelineCollectedStyles(t) {
          t._styleSummary.forEach((e, i) => {
            const r = this._styleSummary.get(i);
            (!r || e.time > r.time) && this._updateStyle(i, e.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const t = new Set(),
            e = new Set(),
            i = 1 === this._keyframes.size && 0 === this.duration;
          let r = [];
          this._keyframes.forEach((a, l) => {
            const c = Ei(a, new Map(), this._backFill);
            c.forEach((d, u) => {
              d === gf ? t.add(u) : d === ri && e.add(u);
            }),
              i || c.set("offset", l / this.duration),
              r.push(c);
          });
          const o = t.size ? cc(t.values()) : [],
            s = e.size ? cc(e.values()) : [];
          if (i) {
            const a = r[0],
              l = new Map(a);
            a.set("offset", 0), l.set("offset", 1), (r = [a, l]);
          }
          return yp(
            this.element,
            r,
            o,
            s,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class vz extends _c {
        constructor(t, e, i, r, o, s, a = !1) {
          super(t, e, s.delay),
            (this.keyframes = i),
            (this.preStyleProps = r),
            (this.postStyleProps = o),
            (this._stretchStartingKeyframe = a),
            (this.timings = {
              duration: s.duration,
              delay: s.delay,
              easing: s.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let t = this.keyframes,
            { delay: e, duration: i, easing: r } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const o = [],
              s = i + e,
              a = e / s,
              l = Ei(t[0]);
            l.set("offset", 0), o.push(l);
            const c = Ei(t[0]);
            c.set("offset", hC(a)), o.push(c);
            const d = t.length - 1;
            for (let u = 1; u <= d; u++) {
              let h = Ei(t[u]);
              const f = h.get("offset");
              h.set("offset", hC((e + f * i) / s)), o.push(h);
            }
            (i = s), (e = 0), (r = ""), (t = o);
          }
          return yp(
            this.element,
            t,
            this.preStyleProps,
            this.postStyleProps,
            i,
            e,
            r,
            !0
          );
        }
      }
      function hC(n, t = 3) {
        const e = Math.pow(10, t - 1);
        return Math.round(n * e) / e;
      }
      class wp {}
      const wz = new Set([
        "width",
        "height",
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight",
        "left",
        "top",
        "bottom",
        "right",
        "fontSize",
        "outlineWidth",
        "outlineOffset",
        "paddingTop",
        "paddingLeft",
        "paddingBottom",
        "paddingRight",
        "marginTop",
        "marginLeft",
        "marginBottom",
        "marginRight",
        "borderRadius",
        "borderWidth",
        "borderTopWidth",
        "borderLeftWidth",
        "borderRightWidth",
        "borderBottomWidth",
        "textIndent",
        "perspective",
      ]);
      class xz extends wp {
        normalizePropertyName(t, e) {
          return gp(t);
        }
        normalizeStyleValue(t, e, i, r) {
          let o = "";
          const s = i.toString().trim();
          if (wz.has(e) && 0 !== i && "0" !== i)
            if ("number" == typeof i) o = "px";
            else {
              const a = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
              a &&
                0 == a[1].length &&
                r.push(
                  (function fj(n, t) {
                    return new w(3005, !1);
                  })()
                );
            }
          return s + o;
        }
      }
      function fC(n, t, e, i, r, o, s, a, l, c, d, u, h) {
        return {
          type: 0,
          element: n,
          triggerName: t,
          isRemovalTransition: r,
          fromState: e,
          fromStyles: o,
          toState: i,
          toStyles: s,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: d,
          totalTime: u,
          errors: h,
        };
      }
      const xp = {};
      class pC {
        constructor(t, e, i) {
          (this._triggerName = t), (this.ast = e), (this._stateStyles = i);
        }
        match(t, e, i, r) {
          return (function Cz(n, t, e, i, r) {
            return n.some((o) => o(t, e, i, r));
          })(this.ast.matchers, t, e, i, r);
        }
        buildStyles(t, e, i) {
          let r = this._stateStyles.get("*");
          return (
            void 0 !== t && (r = this._stateStyles.get(t?.toString()) || r),
            r ? r.buildStyles(e, i) : new Map()
          );
        }
        build(t, e, i, r, o, s, a, l, c, d) {
          const u = [],
            h = (this.ast.options && this.ast.options.params) || xp,
            m = this.buildStyles(i, (a && a.params) || xp, u),
            g = (l && l.params) || xp,
            _ = this.buildStyles(r, g, u),
            v = new Set(),
            E = new Map(),
            y = new Map(),
            S = "void" === r,
            ie = { params: Ez(g, h), delay: this.ast.options?.delay },
            pe = d ? [] : vp(t, e, this.ast.animation, o, s, m, _, ie, c, u);
          let bt = 0;
          if (
            (pe.forEach((ci) => {
              bt = Math.max(ci.duration + ci.delay, bt);
            }),
            u.length)
          )
            return fC(e, this._triggerName, i, r, S, m, _, [], [], E, y, bt, u);
          pe.forEach((ci) => {
            const di = ci.element,
              ZC = Wt(E, di, new Set());
            ci.preStyleProps.forEach((tr) => ZC.add(tr));
            const Ls = Wt(y, di, new Set());
            ci.postStyleProps.forEach((tr) => Ls.add(tr)),
              di !== e && v.add(di);
          });
          const li = cc(v.values());
          return fC(e, this._triggerName, i, r, S, m, _, pe, li, E, y, bt);
        }
      }
      function Ez(n, t) {
        const e = Is(t);
        for (const i in n) n.hasOwnProperty(i) && null != n[i] && (e[i] = n[i]);
        return e;
      }
      class Sz {
        constructor(t, e, i) {
          (this.styles = t), (this.defaultParams = e), (this.normalizer = i);
        }
        buildStyles(t, e) {
          const i = new Map(),
            r = Is(this.defaultParams);
          return (
            Object.keys(t).forEach((o) => {
              const s = t[o];
              null !== s && (r[o] = s);
            }),
            this.styles.styles.forEach((o) => {
              "string" != typeof o &&
                o.forEach((s, a) => {
                  s && (s = ks(s, r, e));
                  const l = this.normalizer.normalizePropertyName(a, e);
                  (s = this.normalizer.normalizeStyleValue(a, l, s, e)),
                    i.set(a, s);
                });
            }),
            i
          );
        }
      }
      class Tz {
        constructor(t, e, i) {
          (this.name = t),
            (this.ast = e),
            (this._normalizer = i),
            (this.transitionFactories = []),
            (this.states = new Map()),
            e.states.forEach((r) => {
              this.states.set(
                r.name,
                new Sz(r.style, (r.options && r.options.params) || {}, i)
              );
            }),
            mC(this.states, "true", "1"),
            mC(this.states, "false", "0"),
            e.transitions.forEach((r) => {
              this.transitionFactories.push(new pC(t, r, this.states));
            }),
            (this.fallbackTransition = (function Az(n, t, e) {
              return new pC(
                n,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(s, a) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                t
              );
            })(t, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(t, e, i, r) {
          return (
            this.transitionFactories.find((s) => s.match(t, e, i, r)) || null
          );
        }
        matchStyles(t, e, i) {
          return this.fallbackTransition.buildStyles(t, e, i);
        }
      }
      function mC(n, t, e) {
        n.has(t)
          ? n.has(e) || n.set(e, n.get(t))
          : n.has(e) && n.set(t, n.get(e));
      }
      const Iz = new mc();
      class Rz {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = i),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(t, e) {
          const i = [],
            r = [],
            o = _p(this._driver, e, i, r);
          if (i.length)
            throw (function Rj(n) {
              return new w(3503, !1);
            })();
          this._animations.set(t, o);
        }
        _buildPlayer(t, e, i) {
          const r = t.element,
            o = qx(0, this._normalizer, 0, t.keyframes, e, i);
          return this._driver.animate(
            r,
            o,
            t.duration,
            t.delay,
            t.easing,
            [],
            !0
          );
        }
        create(t, e, i = {}) {
          const r = [],
            o = this._animations.get(t);
          let s;
          const a = new Map();
          if (
            (o
              ? ((s = vp(
                  this._driver,
                  e,
                  o,
                  hp,
                  oc,
                  new Map(),
                  new Map(),
                  i,
                  Iz,
                  r
                )),
                s.forEach((d) => {
                  const u = Wt(a, d.element, new Map());
                  d.postStyleProps.forEach((h) => u.set(h, null));
                }))
              : (r.push(
                  (function kj() {
                    return new w(3300, !1);
                  })()
                ),
                (s = [])),
            r.length)
          )
            throw (function Oj(n) {
              return new w(3504, !1);
            })();
          a.forEach((d, u) => {
            d.forEach((h, f) => {
              d.set(f, this._driver.computeStyle(u, f, ri));
            });
          });
          const c = Ci(
            s.map((d) => {
              const u = a.get(d.element);
              return this._buildPlayer(d, new Map(), u);
            })
          );
          return (
            this._playersById.set(t, c),
            c.onDestroy(() => this.destroy(t)),
            this.players.push(c),
            c
          );
        }
        destroy(t) {
          const e = this._getPlayer(t);
          e.destroy(), this._playersById.delete(t);
          const i = this.players.indexOf(e);
          i >= 0 && this.players.splice(i, 1);
        }
        _getPlayer(t) {
          const e = this._playersById.get(t);
          if (!e)
            throw (function Fj(n) {
              return new w(3301, !1);
            })();
          return e;
        }
        listen(t, e, i, r) {
          const o = lp(e, "", "", "");
          return sp(this._getPlayer(t), i, o, r), () => {};
        }
        command(t, e, i, r) {
          if ("register" == i) return void this.register(t, r[0]);
          if ("create" == i) return void this.create(t, e, r[0] || {});
          const o = this._getPlayer(t);
          switch (i) {
            case "play":
              o.play();
              break;
            case "pause":
              o.pause();
              break;
            case "reset":
              o.reset();
              break;
            case "restart":
              o.restart();
              break;
            case "finish":
              o.finish();
              break;
            case "init":
              o.init();
              break;
            case "setPosition":
              o.setPosition(parseFloat(r[0]));
              break;
            case "destroy":
              this.destroy(t);
          }
        }
      }
      const gC = "ng-animate-queued",
        Cp = "ng-animate-disabled",
        Nz = [],
        _C = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        Lz = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        on = "__ng_removed";
      class Ep {
        get params() {
          return this.options.params;
        }
        constructor(t, e = "") {
          this.namespaceId = e;
          const i = t && t.hasOwnProperty("value");
          if (
            ((this.value = (function jz(n) {
              return n ?? null;
            })(i ? t.value : t)),
            i)
          ) {
            const o = Is(t);
            delete o.value, (this.options = o);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        absorbOptions(t) {
          const e = t.params;
          if (e) {
            const i = this.options.params;
            Object.keys(e).forEach((r) => {
              null == i[r] && (i[r] = e[r]);
            });
          }
        }
      }
      const Os = "void",
        Sp = new Ep(Os);
      class Vz {
        constructor(t, e, i) {
          (this.id = t),
            (this.hostElement = e),
            (this._engine = i),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + t),
            sn(e, this._hostClassName);
        }
        listen(t, e, i, r) {
          if (!this._triggers.has(e))
            throw (function Pj(n, t) {
              return new w(3302, !1);
            })();
          if (null == i || 0 == i.length)
            throw (function Nj(n) {
              return new w(3303, !1);
            })();
          if (
            !(function zz(n) {
              return "start" == n || "done" == n;
            })(i)
          )
            throw (function Lj(n, t) {
              return new w(3400, !1);
            })();
          const o = Wt(this._elementListeners, t, []),
            s = { name: e, phase: i, callback: r };
          o.push(s);
          const a = Wt(this._engine.statesByElement, t, new Map());
          return (
            a.has(e) || (sn(t, sc), sn(t, sc + "-" + e), a.set(e, Sp)),
            () => {
              this._engine.afterFlush(() => {
                const l = o.indexOf(s);
                l >= 0 && o.splice(l, 1), this._triggers.has(e) || a.delete(e);
              });
            }
          );
        }
        register(t, e) {
          return !this._triggers.has(t) && (this._triggers.set(t, e), !0);
        }
        _getTrigger(t) {
          const e = this._triggers.get(t);
          if (!e)
            throw (function Vj(n) {
              return new w(3401, !1);
            })();
          return e;
        }
        trigger(t, e, i, r = !0) {
          const o = this._getTrigger(e),
            s = new Mp(this.id, e, t);
          let a = this._engine.statesByElement.get(t);
          a ||
            (sn(t, sc),
            sn(t, sc + "-" + e),
            this._engine.statesByElement.set(t, (a = new Map())));
          let l = a.get(e);
          const c = new Ep(i, this.id);
          if (
            (!(i && i.hasOwnProperty("value")) &&
              l &&
              c.absorbOptions(l.options),
            a.set(e, c),
            l || (l = Sp),
            c.value !== Os && l.value === c.value)
          ) {
            if (
              !(function Gz(n, t) {
                const e = Object.keys(n),
                  i = Object.keys(t);
                if (e.length != i.length) return !1;
                for (let r = 0; r < e.length; r++) {
                  const o = e[r];
                  if (!t.hasOwnProperty(o) || n[o] !== t[o]) return !1;
                }
                return !0;
              })(l.params, c.params)
            ) {
              const g = [],
                _ = o.matchStyles(l.value, l.params, g),
                v = o.matchStyles(c.value, c.params, g);
              g.length
                ? this._engine.reportError(g)
                : this._engine.afterFlush(() => {
                    Ji(t, _), Ln(t, v);
                  });
            }
            return;
          }
          const h = Wt(this._engine.playersByElement, t, []);
          h.forEach((g) => {
            g.namespaceId == this.id &&
              g.triggerName == e &&
              g.queued &&
              g.destroy();
          });
          let f = o.matchTransition(l.value, c.value, t, c.params),
            m = !1;
          if (!f) {
            if (!r) return;
            (f = o.fallbackTransition), (m = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: t,
              triggerName: e,
              transition: f,
              fromState: l,
              toState: c,
              player: s,
              isFallbackTransition: m,
            }),
            m ||
              (sn(t, gC),
              s.onStart(() => {
                lo(t, gC);
              })),
            s.onDone(() => {
              let g = this.players.indexOf(s);
              g >= 0 && this.players.splice(g, 1);
              const _ = this._engine.playersByElement.get(t);
              if (_) {
                let v = _.indexOf(s);
                v >= 0 && _.splice(v, 1);
              }
            }),
            this.players.push(s),
            h.push(s),
            s
          );
        }
        deregister(t) {
          this._triggers.delete(t),
            this._engine.statesByElement.forEach((e) => e.delete(t)),
            this._elementListeners.forEach((e, i) => {
              this._elementListeners.set(
                i,
                e.filter((r) => r.name != t)
              );
            });
        }
        clearElementCache(t) {
          this._engine.statesByElement.delete(t),
            this._elementListeners.delete(t);
          const e = this._engine.playersByElement.get(t);
          e &&
            (e.forEach((i) => i.destroy()),
            this._engine.playersByElement.delete(t));
        }
        _signalRemovalForInnerTriggers(t, e) {
          const i = this._engine.driver.query(t, ac, !0);
          i.forEach((r) => {
            if (r[on]) return;
            const o = this._engine.fetchNamespacesByElement(r);
            o.size
              ? o.forEach((s) => s.triggerLeaveAnimation(r, e, !1, !0))
              : this.clearElementCache(r);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              i.forEach((r) => this.clearElementCache(r))
            );
        }
        triggerLeaveAnimation(t, e, i, r) {
          const o = this._engine.statesByElement.get(t),
            s = new Map();
          if (o) {
            const a = [];
            if (
              (o.forEach((l, c) => {
                if ((s.set(c, l.value), this._triggers.has(c))) {
                  const d = this.trigger(t, c, Os, r);
                  d && a.push(d);
                }
              }),
              a.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, t, !0, e, s),
                i && Ci(a).onDone(() => this._engine.processLeaveNode(t)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(t) {
          const e = this._elementListeners.get(t),
            i = this._engine.statesByElement.get(t);
          if (e && i) {
            const r = new Set();
            e.forEach((o) => {
              const s = o.name;
              if (r.has(s)) return;
              r.add(s);
              const l = this._triggers.get(s).fallbackTransition,
                c = i.get(s) || Sp,
                d = new Ep(Os),
                u = new Mp(this.id, s, t);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: t,
                  triggerName: s,
                  transition: l,
                  fromState: c,
                  toState: d,
                  player: u,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(t, e) {
          const i = this._engine;
          if (
            (t.childElementCount && this._signalRemovalForInnerTriggers(t, e),
            this.triggerLeaveAnimation(t, e, !0))
          )
            return;
          let r = !1;
          if (i.totalAnimations) {
            const o = i.players.length ? i.playersByQueriedElement.get(t) : [];
            if (o && o.length) r = !0;
            else {
              let s = t;
              for (; (s = s.parentNode); )
                if (i.statesByElement.get(s)) {
                  r = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(t), r))
            i.markElementAsRemoved(this.id, t, !1, e);
          else {
            const o = t[on];
            (!o || o === _C) &&
              (i.afterFlush(() => this.clearElementCache(t)),
              i.destroyInnerAnimations(t),
              i._onRemovalComplete(t, e));
          }
        }
        insertNode(t, e) {
          sn(t, this._hostClassName);
        }
        drainQueuedTransitions(t) {
          const e = [];
          return (
            this._queue.forEach((i) => {
              const r = i.player;
              if (r.destroyed) return;
              const o = i.element,
                s = this._elementListeners.get(o);
              s &&
                s.forEach((a) => {
                  if (a.name == i.triggerName) {
                    const l = lp(
                      o,
                      i.triggerName,
                      i.fromState.value,
                      i.toState.value
                    );
                    (l._data = t), sp(i.player, a.phase, l, a.callback);
                  }
                }),
                r.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      r.destroy();
                    })
                  : e.push(i);
            }),
            (this._queue = []),
            e.sort((i, r) => {
              const o = i.transition.ast.depCount,
                s = r.transition.ast.depCount;
              return 0 == o || 0 == s
                ? o - s
                : this._engine.driver.containsElement(i.element, r.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(t) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, t);
        }
        elementContainsData(t) {
          let e = !1;
          return (
            this._elementListeners.has(t) && (e = !0),
            (e = !!this._queue.find((i) => i.element === t) || e),
            e
          );
        }
      }
      class Bz {
        _onRemovalComplete(t, e) {
          this.onRemovalComplete(t, e);
        }
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this.driver = e),
            (this._normalizer = i),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (r, o) => {});
        }
        get queuedPlayers() {
          const t = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((i) => {
                i.queued && t.push(i);
              });
            }),
            t
          );
        }
        createNamespace(t, e) {
          const i = new Vz(t, e, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, e)
              ? this._balanceNamespaceList(i, e)
              : (this.newHostElements.set(e, i), this.collectEnterElement(e)),
            (this._namespaceLookup[t] = i)
          );
        }
        _balanceNamespaceList(t, e) {
          const i = this._namespaceList,
            r = this.namespacesByHostElement;
          if (i.length - 1 >= 0) {
            let s = !1,
              a = this.driver.getParentElement(e);
            for (; a; ) {
              const l = r.get(a);
              if (l) {
                const c = i.indexOf(l);
                i.splice(c + 1, 0, t), (s = !0);
                break;
              }
              a = this.driver.getParentElement(a);
            }
            s || i.unshift(t);
          } else i.push(t);
          return r.set(e, t), t;
        }
        register(t, e) {
          let i = this._namespaceLookup[t];
          return i || (i = this.createNamespace(t, e)), i;
        }
        registerTrigger(t, e, i) {
          let r = this._namespaceLookup[t];
          r && r.register(e, i) && this.totalAnimations++;
        }
        destroy(t, e) {
          if (!t) return;
          const i = this._fetchNamespace(t);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(i.hostElement),
              delete this._namespaceLookup[t];
            const r = this._namespaceList.indexOf(i);
            r >= 0 && this._namespaceList.splice(r, 1);
          }),
            this.afterFlushAnimationsDone(() => i.destroy(e));
        }
        _fetchNamespace(t) {
          return this._namespaceLookup[t];
        }
        fetchNamespacesByElement(t) {
          const e = new Set(),
            i = this.statesByElement.get(t);
          if (i)
            for (let r of i.values())
              if (r.namespaceId) {
                const o = this._fetchNamespace(r.namespaceId);
                o && e.add(o);
              }
          return e;
        }
        trigger(t, e, i, r) {
          if (bc(e)) {
            const o = this._fetchNamespace(t);
            if (o) return o.trigger(e, i, r), !0;
          }
          return !1;
        }
        insertNode(t, e, i, r) {
          if (!bc(e)) return;
          const o = e[on];
          if (o && o.setForRemoval) {
            (o.setForRemoval = !1), (o.setForMove = !0);
            const s = this.collectedLeaveElements.indexOf(e);
            s >= 0 && this.collectedLeaveElements.splice(s, 1);
          }
          if (t) {
            const s = this._fetchNamespace(t);
            s && s.insertNode(e, i);
          }
          r && this.collectEnterElement(e);
        }
        collectEnterElement(t) {
          this.collectedEnterElements.push(t);
        }
        markElementAsDisabled(t, e) {
          e
            ? this.disabledNodes.has(t) ||
              (this.disabledNodes.add(t), sn(t, Cp))
            : this.disabledNodes.has(t) &&
              (this.disabledNodes.delete(t), lo(t, Cp));
        }
        removeNode(t, e, i, r) {
          if (bc(e)) {
            const o = t ? this._fetchNamespace(t) : null;
            if (
              (o ? o.removeNode(e, r) : this.markElementAsRemoved(t, e, !1, r),
              i)
            ) {
              const s = this.namespacesByHostElement.get(e);
              s && s.id !== t && s.removeNode(e, r);
            }
          } else this._onRemovalComplete(e, r);
        }
        markElementAsRemoved(t, e, i, r, o) {
          this.collectedLeaveElements.push(e),
            (e[on] = {
              namespaceId: t,
              setForRemoval: r,
              hasAnimation: i,
              removedBeforeQueried: !1,
              previousTriggersValues: o,
            });
        }
        listen(t, e, i, r, o) {
          return bc(e) ? this._fetchNamespace(t).listen(e, i, r, o) : () => {};
        }
        _buildInstruction(t, e, i, r, o) {
          return t.transition.build(
            this.driver,
            t.element,
            t.fromState.value,
            t.toState.value,
            i,
            r,
            t.fromState.options,
            t.toState.options,
            e,
            o
          );
        }
        destroyInnerAnimations(t) {
          let e = this.driver.query(t, ac, !0);
          e.forEach((i) => this.destroyActiveAnimationsForElement(i)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(t, fp, !0)),
              e.forEach((i) => this.finishActiveQueriedAnimationOnElement(i)));
        }
        destroyActiveAnimationsForElement(t) {
          const e = this.playersByElement.get(t);
          e &&
            e.forEach((i) => {
              i.queued ? (i.markedForDestroy = !0) : i.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(t) {
          const e = this.playersByQueriedElement.get(t);
          e && e.forEach((i) => i.finish());
        }
        whenRenderingDone() {
          return new Promise((t) => {
            if (this.players.length) return Ci(this.players).onDone(() => t());
            t();
          });
        }
        processLeaveNode(t) {
          const e = t[on];
          if (e && e.setForRemoval) {
            if (((t[on] = _C), e.namespaceId)) {
              this.destroyInnerAnimations(t);
              const i = this._fetchNamespace(e.namespaceId);
              i && i.clearElementCache(t);
            }
            this._onRemovalComplete(t, e.setForRemoval);
          }
          t.classList?.contains(Cp) && this.markElementAsDisabled(t, !1),
            this.driver.query(t, ".ng-animate-disabled", !0).forEach((i) => {
              this.markElementAsDisabled(i, !1);
            });
        }
        flush(t = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((i, r) =>
                this._balanceNamespaceList(i, r)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let i = 0; i < this.collectedEnterElements.length; i++)
              sn(this.collectedEnterElements[i], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const i = [];
            try {
              e = this._flushAnimations(i, t);
            } finally {
              for (let r = 0; r < i.length; r++) i[r]();
            }
          } else
            for (let i = 0; i < this.collectedLeaveElements.length; i++)
              this.processLeaveNode(this.collectedLeaveElements[i]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((i) => i()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const i = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? Ci(e).onDone(() => {
                    i.forEach((r) => r());
                  })
                : i.forEach((r) => r());
          }
        }
        reportError(t) {
          throw (function Bj(n) {
            return new w(3402, !1);
          })();
        }
        _flushAnimations(t, e) {
          const i = new mc(),
            r = [],
            o = new Map(),
            s = [],
            a = new Map(),
            l = new Map(),
            c = new Map(),
            d = new Set();
          this.disabledNodes.forEach((P) => {
            d.add(P);
            const L = this.driver.query(P, ".ng-animate-queued", !0);
            for (let $ = 0; $ < L.length; $++) d.add(L[$]);
          });
          const u = this.bodyNode,
            h = Array.from(this.statesByElement.keys()),
            f = vC(h, this.collectedEnterElements),
            m = new Map();
          let g = 0;
          f.forEach((P, L) => {
            const $ = hp + g++;
            m.set(L, $), P.forEach((fe) => sn(fe, $));
          });
          const _ = [],
            v = new Set(),
            E = new Set();
          for (let P = 0; P < this.collectedLeaveElements.length; P++) {
            const L = this.collectedLeaveElements[P],
              $ = L[on];
            $ &&
              $.setForRemoval &&
              (_.push(L),
              v.add(L),
              $.hasAnimation
                ? this.driver
                    .query(L, ".ng-star-inserted", !0)
                    .forEach((fe) => v.add(fe))
                : E.add(L));
          }
          const y = new Map(),
            S = vC(h, Array.from(v));
          S.forEach((P, L) => {
            const $ = oc + g++;
            y.set(L, $), P.forEach((fe) => sn(fe, $));
          }),
            t.push(() => {
              f.forEach((P, L) => {
                const $ = m.get(L);
                P.forEach((fe) => lo(fe, $));
              }),
                S.forEach((P, L) => {
                  const $ = y.get(L);
                  P.forEach((fe) => lo(fe, $));
                }),
                _.forEach((P) => {
                  this.processLeaveNode(P);
                });
            });
          const ie = [],
            pe = [];
          for (let P = this._namespaceList.length - 1; P >= 0; P--)
            this._namespaceList[P].drainQueuedTransitions(e).forEach(($) => {
              const fe = $.player,
                st = $.element;
              if ((ie.push(fe), this.collectedEnterElements.length)) {
                const yt = st[on];
                if (yt && yt.setForMove) {
                  if (
                    yt.previousTriggersValues &&
                    yt.previousTriggersValues.has($.triggerName)
                  ) {
                    const nr = yt.previousTriggersValues.get($.triggerName),
                      an = this.statesByElement.get($.element);
                    if (an && an.has($.triggerName)) {
                      const Ec = an.get($.triggerName);
                      (Ec.value = nr), an.set($.triggerName, Ec);
                    }
                  }
                  return void fe.destroy();
                }
              }
              const Vn = !u || !this.driver.containsElement(u, st),
                Yt = y.get(st),
                Si = m.get(st),
                Ne = this._buildInstruction($, i, Si, Yt, Vn);
              if (Ne.errors && Ne.errors.length) return void pe.push(Ne);
              if (Vn)
                return (
                  fe.onStart(() => Ji(st, Ne.fromStyles)),
                  fe.onDestroy(() => Ln(st, Ne.toStyles)),
                  void r.push(fe)
                );
              if ($.isFallbackTransition)
                return (
                  fe.onStart(() => Ji(st, Ne.fromStyles)),
                  fe.onDestroy(() => Ln(st, Ne.toStyles)),
                  void r.push(fe)
                );
              const JC = [];
              Ne.timelines.forEach((yt) => {
                (yt.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(yt.element) || JC.push(yt);
              }),
                (Ne.timelines = JC),
                i.append(st, Ne.timelines),
                s.push({ instruction: Ne, player: fe, element: st }),
                Ne.queriedElements.forEach((yt) => Wt(a, yt, []).push(fe)),
                Ne.preStyleProps.forEach((yt, nr) => {
                  if (yt.size) {
                    let an = l.get(nr);
                    an || l.set(nr, (an = new Set())),
                      yt.forEach((Ec, Hp) => an.add(Hp));
                  }
                }),
                Ne.postStyleProps.forEach((yt, nr) => {
                  let an = c.get(nr);
                  an || c.set(nr, (an = new Set())),
                    yt.forEach((Ec, Hp) => an.add(Hp));
                });
            });
          if (pe.length) {
            const P = [];
            pe.forEach((L) => {
              P.push(
                (function Hj(n, t) {
                  return new w(3505, !1);
                })()
              );
            }),
              ie.forEach((L) => L.destroy()),
              this.reportError(P);
          }
          const bt = new Map(),
            li = new Map();
          s.forEach((P) => {
            const L = P.element;
            i.has(L) &&
              (li.set(L, L),
              this._beforeAnimationBuild(
                P.player.namespaceId,
                P.instruction,
                bt
              ));
          }),
            r.forEach((P) => {
              const L = P.element;
              this._getPreviousPlayers(
                L,
                !1,
                P.namespaceId,
                P.triggerName,
                null
              ).forEach((fe) => {
                Wt(bt, L, []).push(fe), fe.destroy();
              });
            });
          const ci = _.filter((P) => wC(P, l, c)),
            di = new Map();
          yC(di, this.driver, E, c, ri).forEach((P) => {
            wC(P, l, c) && ci.push(P);
          });
          const Ls = new Map();
          f.forEach((P, L) => {
            yC(Ls, this.driver, new Set(P), l, gf);
          }),
            ci.forEach((P) => {
              const L = di.get(P),
                $ = Ls.get(P);
              di.set(
                P,
                new Map([
                  ...Array.from(L?.entries() ?? []),
                  ...Array.from($?.entries() ?? []),
                ])
              );
            });
          const tr = [],
            XC = [],
            QC = {};
          s.forEach((P) => {
            const { element: L, player: $, instruction: fe } = P;
            if (i.has(L)) {
              if (d.has(L))
                return (
                  $.onDestroy(() => Ln(L, fe.toStyles)),
                  ($.disabled = !0),
                  $.overrideTotalTime(fe.totalTime),
                  void r.push($)
                );
              let st = QC;
              if (li.size > 1) {
                let Yt = L;
                const Si = [];
                for (; (Yt = Yt.parentNode); ) {
                  const Ne = li.get(Yt);
                  if (Ne) {
                    st = Ne;
                    break;
                  }
                  Si.push(Yt);
                }
                Si.forEach((Ne) => li.set(Ne, st));
              }
              const Vn = this._buildAnimation($.namespaceId, fe, bt, o, Ls, di);
              if (($.setRealPlayer(Vn), st === QC)) tr.push($);
              else {
                const Yt = this.playersByElement.get(st);
                Yt && Yt.length && ($.parentPlayer = Ci(Yt)), r.push($);
              }
            } else
              Ji(L, fe.fromStyles),
                $.onDestroy(() => Ln(L, fe.toStyles)),
                XC.push($),
                d.has(L) && r.push($);
          }),
            XC.forEach((P) => {
              const L = o.get(P.element);
              if (L && L.length) {
                const $ = Ci(L);
                P.setRealPlayer($);
              }
            }),
            r.forEach((P) => {
              P.parentPlayer ? P.syncPlayerEvents(P.parentPlayer) : P.destroy();
            });
          for (let P = 0; P < _.length; P++) {
            const L = _[P],
              $ = L[on];
            if ((lo(L, oc), $ && $.hasAnimation)) continue;
            let fe = [];
            if (a.size) {
              let Vn = a.get(L);
              Vn && Vn.length && fe.push(...Vn);
              let Yt = this.driver.query(L, fp, !0);
              for (let Si = 0; Si < Yt.length; Si++) {
                let Ne = a.get(Yt[Si]);
                Ne && Ne.length && fe.push(...Ne);
              }
            }
            const st = fe.filter((Vn) => !Vn.destroyed);
            st.length ? $z(this, L, st) : this.processLeaveNode(L);
          }
          return (
            (_.length = 0),
            tr.forEach((P) => {
              this.players.push(P),
                P.onDone(() => {
                  P.destroy();
                  const L = this.players.indexOf(P);
                  this.players.splice(L, 1);
                }),
                P.play();
            }),
            tr
          );
        }
        elementContainsData(t, e) {
          let i = !1;
          const r = e[on];
          return (
            r && r.setForRemoval && (i = !0),
            this.playersByElement.has(e) && (i = !0),
            this.playersByQueriedElement.has(e) && (i = !0),
            this.statesByElement.has(e) && (i = !0),
            this._fetchNamespace(t).elementContainsData(e) || i
          );
        }
        afterFlush(t) {
          this._flushFns.push(t);
        }
        afterFlushAnimationsDone(t) {
          this._whenQuietFns.push(t);
        }
        _getPreviousPlayers(t, e, i, r, o) {
          let s = [];
          if (e) {
            const a = this.playersByQueriedElement.get(t);
            a && (s = a);
          } else {
            const a = this.playersByElement.get(t);
            if (a) {
              const l = !o || o == Os;
              a.forEach((c) => {
                c.queued || (!l && c.triggerName != r) || s.push(c);
              });
            }
          }
          return (
            (i || r) &&
              (s = s.filter(
                (a) => !((i && i != a.namespaceId) || (r && r != a.triggerName))
              )),
            s
          );
        }
        _beforeAnimationBuild(t, e, i) {
          const o = e.element,
            s = e.isRemovalTransition ? void 0 : t,
            a = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const l of e.timelines) {
            const c = l.element,
              d = c !== o,
              u = Wt(i, c, []);
            this._getPreviousPlayers(c, d, s, a, e.toState).forEach((f) => {
              const m = f.getRealPlayer();
              m.beforeDestroy && m.beforeDestroy(), f.destroy(), u.push(f);
            });
          }
          Ji(o, e.fromStyles);
        }
        _buildAnimation(t, e, i, r, o, s) {
          const a = e.triggerName,
            l = e.element,
            c = [],
            d = new Set(),
            u = new Set(),
            h = e.timelines.map((m) => {
              const g = m.element;
              d.add(g);
              const _ = g[on];
              if (_ && _.removedBeforeQueried)
                return new ys(m.duration, m.delay);
              const v = g !== l,
                E = (function Uz(n) {
                  const t = [];
                  return DC(n, t), t;
                })((i.get(g) || Nz).map((bt) => bt.getRealPlayer())).filter(
                  (bt) => !!bt.element && bt.element === g
                ),
                y = o.get(g),
                S = s.get(g),
                ie = qx(0, this._normalizer, 0, m.keyframes, y, S),
                pe = this._buildPlayer(m, ie, E);
              if ((m.subTimeline && r && u.add(g), v)) {
                const bt = new Mp(t, a, g);
                bt.setRealPlayer(pe), c.push(bt);
              }
              return pe;
            });
          c.forEach((m) => {
            Wt(this.playersByQueriedElement, m.element, []).push(m),
              m.onDone(() =>
                (function Hz(n, t, e) {
                  let i = n.get(t);
                  if (i) {
                    if (i.length) {
                      const r = i.indexOf(e);
                      i.splice(r, 1);
                    }
                    0 == i.length && n.delete(t);
                  }
                  return i;
                })(this.playersByQueriedElement, m.element, m)
              );
          }),
            d.forEach((m) => sn(m, nC));
          const f = Ci(h);
          return (
            f.onDestroy(() => {
              d.forEach((m) => lo(m, nC)), Ln(l, e.toStyles);
            }),
            u.forEach((m) => {
              Wt(r, m, []).push(f);
            }),
            f
          );
        }
        _buildPlayer(t, e, i) {
          return e.length > 0
            ? this.driver.animate(
                t.element,
                e,
                t.duration,
                t.delay,
                t.easing,
                i
              )
            : new ys(t.duration, t.delay);
        }
      }
      class Mp {
        constructor(t, e, i) {
          (this.namespaceId = t),
            (this.triggerName = e),
            (this.element = i),
            (this._player = new ys()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.parentPlayer = null),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(t) {
          this._containsRealPlayer ||
            ((this._player = t),
            this._queuedCallbacks.forEach((e, i) => {
              e.forEach((r) => sp(t, i, void 0, r));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(t.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(t) {
          this.totalTime = t;
        }
        syncPlayerEvents(t) {
          const e = this._player;
          e.triggerCallback && t.onStart(() => e.triggerCallback("start")),
            t.onDone(() => this.finish()),
            t.onDestroy(() => this.destroy());
        }
        _queueEvent(t, e) {
          Wt(this._queuedCallbacks, t, []).push(e);
        }
        onDone(t) {
          this.queued && this._queueEvent("done", t), this._player.onDone(t);
        }
        onStart(t) {
          this.queued && this._queueEvent("start", t), this._player.onStart(t);
        }
        onDestroy(t) {
          this.queued && this._queueEvent("destroy", t),
            this._player.onDestroy(t);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(t) {
          this.queued || this._player.setPosition(t);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(t) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(t);
        }
      }
      function bc(n) {
        return n && 1 === n.nodeType;
      }
      function bC(n, t) {
        const e = n.style.display;
        return (n.style.display = t ?? "none"), e;
      }
      function yC(n, t, e, i, r) {
        const o = [];
        e.forEach((l) => o.push(bC(l)));
        const s = [];
        i.forEach((l, c) => {
          const d = new Map();
          l.forEach((u) => {
            const h = t.computeStyle(c, u, r);
            d.set(u, h), (!h || 0 == h.length) && ((c[on] = Lz), s.push(c));
          }),
            n.set(c, d);
        });
        let a = 0;
        return e.forEach((l) => bC(l, o[a++])), s;
      }
      function vC(n, t) {
        const e = new Map();
        if ((n.forEach((a) => e.set(a, [])), 0 == t.length)) return e;
        const i = 1,
          r = new Set(t),
          o = new Map();
        function s(a) {
          if (!a) return i;
          let l = o.get(a);
          if (l) return l;
          const c = a.parentNode;
          return (l = e.has(c) ? c : r.has(c) ? i : s(c)), o.set(a, l), l;
        }
        return (
          t.forEach((a) => {
            const l = s(a);
            l !== i && e.get(l).push(a);
          }),
          e
        );
      }
      function sn(n, t) {
        n.classList?.add(t);
      }
      function lo(n, t) {
        n.classList?.remove(t);
      }
      function $z(n, t, e) {
        Ci(e).onDone(() => n.processLeaveNode(t));
      }
      function DC(n, t) {
        for (let e = 0; e < n.length; e++) {
          const i = n[e];
          i instanceof e0 ? DC(i.players, t) : t.push(i);
        }
      }
      function wC(n, t, e) {
        const i = e.get(n);
        if (!i) return !1;
        let r = t.get(n);
        return r ? i.forEach((o) => r.add(o)) : t.set(n, i), e.delete(n), !0;
      }
      class yc {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = i),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (r, o) => {}),
            (this._transitionEngine = new Bz(t, e, i)),
            (this._timelineEngine = new Rz(t, e, i)),
            (this._transitionEngine.onRemovalComplete = (r, o) =>
              this.onRemovalComplete(r, o));
        }
        registerTrigger(t, e, i, r, o) {
          const s = t + "-" + r;
          let a = this._triggerCache[s];
          if (!a) {
            const l = [],
              c = [],
              d = _p(this._driver, o, l, c);
            if (l.length)
              throw (function Aj(n, t) {
                return new w(3404, !1);
              })();
            (a = (function Mz(n, t, e) {
              return new Tz(n, t, e);
            })(r, d, this._normalizer)),
              (this._triggerCache[s] = a);
          }
          this._transitionEngine.registerTrigger(e, r, a);
        }
        register(t, e) {
          this._transitionEngine.register(t, e);
        }
        destroy(t, e) {
          this._transitionEngine.destroy(t, e);
        }
        onInsert(t, e, i, r) {
          this._transitionEngine.insertNode(t, e, i, r);
        }
        onRemove(t, e, i, r) {
          this._transitionEngine.removeNode(t, e, r || !1, i);
        }
        disableAnimations(t, e) {
          this._transitionEngine.markElementAsDisabled(t, e);
        }
        process(t, e, i, r) {
          if ("@" == i.charAt(0)) {
            const [o, s] = Yx(i);
            this._timelineEngine.command(o, e, s, r);
          } else this._transitionEngine.trigger(t, e, i, r);
        }
        listen(t, e, i, r, o) {
          if ("@" == i.charAt(0)) {
            const [s, a] = Yx(i);
            return this._timelineEngine.listen(s, e, a, o);
          }
          return this._transitionEngine.listen(t, e, i, r, o);
        }
        flush(t = -1) {
          this._transitionEngine.flush(t);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      let qz = (() => {
        class n {
          constructor(e, i, r) {
            (this._element = e),
              (this._startStyles = i),
              (this._endStyles = r),
              (this._state = 0);
            let o = n.initialStylesByElement.get(e);
            o || n.initialStylesByElement.set(e, (o = new Map())),
              (this._initialStyles = o);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                Ln(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (Ln(this._element, this._initialStyles),
                this._endStyles &&
                  (Ln(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (n.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (Ji(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (Ji(this._element, this._endStyles),
                  (this._endStyles = null)),
                Ln(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (n.initialStylesByElement = new WeakMap()), n;
      })();
      function Tp(n) {
        let t = null;
        return (
          n.forEach((e, i) => {
            (function Yz(n) {
              return "display" === n || "position" === n;
            })(i) && ((t = t || new Map()), t.set(i, e));
          }),
          t
        );
      }
      class xC {
        constructor(t, e, i, r) {
          (this.element = t),
            (this.keyframes = e),
            (this.options = i),
            (this._specialStyles = r),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = i.duration),
            (this._delay = i.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const t = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            t,
            this.options
          )),
            (this._finalKeyframe = t.length ? t[t.length - 1] : new Map()),
            this.domPlayer.addEventListener("finish", () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(t) {
          const e = [];
          return (
            t.forEach((i) => {
              e.push(Object.fromEntries(i));
            }),
            e
          );
        }
        _triggerWebAnimation(t, e, i) {
          return t.animate(this._convertKeyframesToObject(e), i);
        }
        onStart(t) {
          this._originalOnStartFns.push(t), this._onStartFns.push(t);
        }
        onDone(t) {
          this._originalOnDoneFns.push(t), this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((t) => t()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        setPosition(t) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = t * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const t = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((i, r) => {
              "offset" !== r &&
                t.set(r, this._finished ? i : lC(this.element, r));
            }),
            (this.currentSnapshot = t);
        }
        triggerCallback(t) {
          const e = "start" === t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class Kz {
        validateStyleProperty(t) {
          return !0;
        }
        validateAnimatableStyleProperty(t) {
          return !0;
        }
        matchesElement(t, e) {
          return !1;
        }
        containsElement(t, e) {
          return Qx(t, e);
        }
        getParentElement(t) {
          return dp(t);
        }
        query(t, e, i) {
          return Jx(t, e, i);
        }
        computeStyle(t, e, i) {
          return window.getComputedStyle(t)[e];
        }
        animate(t, e, i, r, o, s = []) {
          const l = {
            duration: i,
            delay: r,
            fill: 0 == r ? "both" : "forwards",
          };
          o && (l.easing = o);
          const c = new Map(),
            d = s.filter((f) => f instanceof xC);
          (function Jj(n, t) {
            return 0 === n || 0 === t;
          })(i, r) &&
            d.forEach((f) => {
              f.currentSnapshot.forEach((m, g) => c.set(g, m));
            });
          let u = (function Kj(n) {
            return n.length
              ? n[0] instanceof Map
                ? n
                : n.map((t) => iC(t))
              : [];
          })(e).map((f) => Ei(f));
          u = (function ez(n, t, e) {
            if (e.size && t.length) {
              let i = t[0],
                r = [];
              if (
                (e.forEach((o, s) => {
                  i.has(s) || r.push(s), i.set(s, o);
                }),
                r.length)
              )
                for (let o = 1; o < t.length; o++) {
                  let s = t[o];
                  r.forEach((a) => s.set(a, lC(n, a)));
                }
            }
            return t;
          })(t, u, c);
          const h = (function Wz(n, t) {
            let e = null,
              i = null;
            return (
              Array.isArray(t) && t.length
                ? ((e = Tp(t[0])), t.length > 1 && (i = Tp(t[t.length - 1])))
                : t instanceof Map && (e = Tp(t)),
              e || i ? new qz(n, e, i) : null
            );
          })(t, u);
          return new xC(t, u, l, h);
        }
      }
      let Zz = (() => {
        class n extends Zw {
          constructor(e, i) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = e.createRenderer(i.body, {
                id: "0",
                encapsulation: ln.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(e) {
            const i = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const r = Array.isArray(e) ? Qw(e) : e;
            return (
              CC(this._renderer, null, i, "register", [r]),
              new Xz(i, this._renderer)
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(Lo), b(ne));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class Xz extends u2 {
        constructor(t, e) {
          super(), (this._id = t), (this._renderer = e);
        }
        create(t, e) {
          return new Qz(this._id, t, e || {}, this._renderer);
        }
      }
      class Qz {
        constructor(t, e, i, r) {
          (this.id = t),
            (this.element = e),
            (this._renderer = r),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", i);
        }
        _listen(t, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${t}`, e);
        }
        _command(t, ...e) {
          return CC(this._renderer, this.element, this.id, t, e);
        }
        onDone(t) {
          this._listen("done", t);
        }
        onStart(t) {
          this._listen("start", t);
        }
        onDestroy(t) {
          this._listen("destroy", t);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(t) {
          this._command("setPosition", t);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function CC(n, t, e, i, r) {
        return n.setProperty(t, `@@${e}:${i}`, r);
      }
      const EC = "@.disabled";
      let Jz = (() => {
        class n {
          constructor(e, i, r) {
            (this.delegate = e),
              (this.engine = i),
              (this._zone = r),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (i.onRemovalComplete = (o, s) => {
                const a = s?.parentNode(o);
                a && s.removeChild(a, o);
              });
          }
          createRenderer(e, i) {
            const o = this.delegate.createRenderer(e, i);
            if (!(e && i && i.data && i.data.animation)) {
              let d = this._rendererCache.get(o);
              return (
                d ||
                  ((d = new SC("", o, this.engine, () =>
                    this._rendererCache.delete(o)
                  )),
                  this._rendererCache.set(o, d)),
                d
              );
            }
            const s = i.id,
              a = i.id + "-" + this._currentId;
            this._currentId++, this.engine.register(a, e);
            const l = (d) => {
              Array.isArray(d)
                ? d.forEach(l)
                : this.engine.registerTrigger(s, a, e, d.name, d);
            };
            return i.data.animation.forEach(l), new e3(this, a, o, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(e, i, r) {
            e >= 0 && e < this._microtaskId
              ? this._zone.run(() => i(r))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((o) => {
                        const [s, a] = o;
                        s(a);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([i, r]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(Lo), b(yc), b(V));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class SC {
        constructor(t, e, i, r) {
          (this.namespaceId = t),
            (this.delegate = e),
            (this.engine = i),
            (this._onDestroy = r),
            (this.destroyNode = this.delegate.destroyNode
              ? (o) => e.destroyNode(o)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy(),
            this._onDestroy?.();
        }
        createElement(t, e) {
          return this.delegate.createElement(t, e);
        }
        createComment(t) {
          return this.delegate.createComment(t);
        }
        createText(t) {
          return this.delegate.createText(t);
        }
        appendChild(t, e) {
          this.delegate.appendChild(t, e),
            this.engine.onInsert(this.namespaceId, e, t, !1);
        }
        insertBefore(t, e, i, r = !0) {
          this.delegate.insertBefore(t, e, i),
            this.engine.onInsert(this.namespaceId, e, t, r);
        }
        removeChild(t, e, i) {
          this.engine.onRemove(this.namespaceId, e, this.delegate, i);
        }
        selectRootElement(t, e) {
          return this.delegate.selectRootElement(t, e);
        }
        parentNode(t) {
          return this.delegate.parentNode(t);
        }
        nextSibling(t) {
          return this.delegate.nextSibling(t);
        }
        setAttribute(t, e, i, r) {
          this.delegate.setAttribute(t, e, i, r);
        }
        removeAttribute(t, e, i) {
          this.delegate.removeAttribute(t, e, i);
        }
        addClass(t, e) {
          this.delegate.addClass(t, e);
        }
        removeClass(t, e) {
          this.delegate.removeClass(t, e);
        }
        setStyle(t, e, i, r) {
          this.delegate.setStyle(t, e, i, r);
        }
        removeStyle(t, e, i) {
          this.delegate.removeStyle(t, e, i);
        }
        setProperty(t, e, i) {
          "@" == e.charAt(0) && e == EC
            ? this.disableAnimations(t, !!i)
            : this.delegate.setProperty(t, e, i);
        }
        setValue(t, e) {
          this.delegate.setValue(t, e);
        }
        listen(t, e, i) {
          return this.delegate.listen(t, e, i);
        }
        disableAnimations(t, e) {
          this.engine.disableAnimations(t, e);
        }
      }
      class e3 extends SC {
        constructor(t, e, i, r, o) {
          super(e, i, r, o), (this.factory = t), (this.namespaceId = e);
        }
        setProperty(t, e, i) {
          "@" == e.charAt(0)
            ? "." == e.charAt(1) && e == EC
              ? this.disableAnimations(t, (i = void 0 === i || !!i))
              : this.engine.process(this.namespaceId, t, e.slice(1), i)
            : this.delegate.setProperty(t, e, i);
        }
        listen(t, e, i) {
          if ("@" == e.charAt(0)) {
            const r = (function t3(n) {
              switch (n) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return n;
              }
            })(t);
            let o = e.slice(1),
              s = "";
            return (
              "@" != o.charAt(0) &&
                ([o, s] = (function n3(n) {
                  const t = n.indexOf(".");
                  return [n.substring(0, t), n.slice(t + 1)];
                })(o)),
              this.engine.listen(this.namespaceId, r, o, s, (a) => {
                this.factory.scheduleListenerCallback(a._data || -1, i, a);
              })
            );
          }
          return this.delegate.listen(t, e, i);
        }
      }
      const MC = [
          { provide: Zw, useClass: Zz },
          {
            provide: wp,
            useFactory: function r3() {
              return new xz();
            },
          },
          {
            provide: yc,
            useClass: (() => {
              class n extends yc {
                constructor(e, i, r, o) {
                  super(e.body, i, r);
                }
                ngOnDestroy() {
                  this.flush();
                }
              }
              return (
                (n.ɵfac = function (e) {
                  return new (e || n)(b(ne), b(up), b(wp), b(Qo));
                }),
                (n.ɵprov = I({ token: n, factory: n.ɵfac })),
                n
              );
            })(),
          },
          {
            provide: Lo,
            useFactory: function o3(n, t, e) {
              return new Jz(n, t, e);
            },
            deps: [fl, yc, V],
          },
        ],
        Ap = [
          { provide: up, useFactory: () => new Kz() },
          { provide: mn, useValue: "BrowserAnimations" },
          ...MC,
        ],
        TC = [
          { provide: up, useClass: eC },
          { provide: mn, useValue: "NoopAnimations" },
          ...MC,
        ];
      let AC = (() => {
          class n {
            static withConfig(e) {
              return { ngModule: n, providers: e.disableAnimations ? TC : Ap };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ providers: Ap, imports: [Fh] })),
            n
          );
        })(),
        l3 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ imports: [kn, Xe] })),
            n
          );
        })();
      function c3(n, t) {
        1 & n && we(0, "mat-header-row");
      }
      function d3(n, t) {
        1 & n && we(0, "mat-row");
      }
      function u3(n, t) {
        if ((1 & n && (F(0, "mat-header-cell", 18), qe(1), N()), 2 & n)) {
          const e = se().$implicit;
          O(1), Ot(" ", e, " ");
        }
      }
      function h3(n, t) {
        if ((1 & n && (F(0, "mat-cell"), qe(1), N()), 2 & n)) {
          const e = t.$implicit,
            i = se().$implicit;
          O(1), Ot(" ", e[i], " ");
        }
      }
      function f3(n, t) {
        1 & n &&
          (Bi(0, 16),
          W(1, u3, 2, 1, "mat-header-cell", 12),
          W(2, h3, 2, 1, "mat-cell", 17),
          Hi()),
          2 & n && k("matColumnDef", t.$implicit);
      }
      function p3(n, t) {
        1 & n && (F(0, "mat-header-cell", 18), qe(1, " INDUSTRY "), N());
      }
      function m3(n, t) {
        if ((1 & n && (F(0, "mat-cell", 19), qe(1), N()), 2 & n)) {
          const e = t.$implicit;
          O(1), Ot(" ", e.description, " ");
        }
      }
      const g3 = function () {
        return [5, 10, 25, 100];
      };
      let _3 = (() => {
          class n {
            constructor() {
              (this.isDragging = !1), (this.startX = 0), (this.startY = 0);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        b3 = (() => {
          class n {
            constructor(e, i, r) {
              (this.srvce = e), (this.el = i), (this.renderer = r);
            }
            onMouseDown(e) {
              (this.srvce.isDragging = !0),
                (this.srvce.startX =
                  e.clientX - this.el.nativeElement.offsetLeft),
                (this.srvce.startY =
                  e.clientY - this.el.nativeElement.offsetTop),
                this.renderer.addClass(this.el.nativeElement, "dragging");
            }
            onMouseMove(e) {
              if (this.srvce.isDragging) {
                const i = e.clientX - this.srvce.startX;
                this.renderer.setStyle(
                  this.el.nativeElement,
                  "top",
                  e.clientY - this.srvce.startY + "px"
                ),
                  this.renderer.setStyle(
                    this.el.nativeElement,
                    "left",
                    `${i}px`
                  );
              }
            }
            onMouseUp() {
              (this.srvce.isDragging = !1),
                this.renderer.removeClass(this.el.nativeElement, "dragging");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(_3), p(U), p(gi));
            }),
            (n.ɵdir = x({
              type: n,
              selectors: [["", "appDraggable", ""]],
              hostBindings: function (e, i) {
                1 & e &&
                  ve("mousedown", function (o) {
                    return i.onMouseDown(o);
                  })(
                    "mousemove",
                    function (o) {
                      return i.onMouseMove(o);
                    },
                    !1,
                    tu
                  )(
                    "mouseup",
                    function () {
                      return i.onMouseUp();
                    },
                    !1,
                    tu
                  );
              },
            })),
            n
          );
        })(),
        y3 = (() => {
          class n {
            keyss(e) {
              if (null != e) return console.log(Object.keys(e)), Object.keys(e);
            }
            constructor() {
              (this.name = "Angular 5"),
                (this.displayedColumns = []),
                (this.dataSource = new v0(this.loadTokens())),
                (this.storedObArr = []),
                (this.loadTokensFlg = !1);
            }
            ngOnInit() {
              this.loadTokens();
            }
            loadTokens() {
              return (
                chrome.runtime.onMessage.addListener((e, i, r) => {
                  if(e.popupActive || e.checkPopup)
                    return;
                    (console.log("typescript communication"),
                    (this.storedObArr = JSON.parse(e.jsonString)),
                    this.storedObArr.splice(this.storedObArr.length - 1, 1),
                    this.storedObArr.splice(0, 2),
                    (this.dataSource = new v0(this.storedObArr)),
                    (this.tt = this.storedObArr[3]),
                    (this.displayedColumns = [
                      ...Object.keys(this.storedObArr[3]),
                    ]),
                    this.displayedColumns.splice(0, 1),
                    console.log(this.displayedColumns),
                    (this.dataSource.paginator = this.paginator),
                    (this.dataSource.sort = this.sort));
                }),
                (this.loadTokensFlg = !0),
                this.storedObArr
              );
            }
            ngAfterViewInit() {
              (this.dataSource.paginator = this.paginator),
                (this.dataSource.sort = this.sort);
            }
            applyFilter(e) {
              let i = e.target.value;
              (i = i.trim()),
                (i = i.toLowerCase()),
                (this.dataSource.filter = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["table-basic-example"]],
              viewQuery: function (e, i) {
                if ((1 & e && (Oe(zx, 5), Oe(Pf, 5)), 2 & e)) {
                  let r;
                  q((r = Y())) && (i.paginator = r.first),
                    q((r = Y())) && (i.sort = r.first);
                }
              },
              decls: 20,
              vars: 6,
              consts: [
                [
                  "appDraggable",
                  "",
                  "id",
                  "ddd",
                  2,
                  "cursor",
                  "move",
                  "background-color",
                  "aqua",
                ],
                [2, "width", "40%"],
                ["matInput", "", "placeholder", "Ex. ium", 3, "keyup"],
                ["input", ""],
                [1, "col-md-12"],
                [1, "row"],
                [1, "example-container", "mat-elevation-z8"],
                ["matSort", "", 3, "dataSource"],
                [4, "matHeaderRowDef"],
                [4, "matRowDef", "matRowDefColumns"],
                [3, "matColumnDef", 4, "ngFor", "ngForOf"],
                ["matColumnDef", "description"],
                ["mat-sort-header", "", 4, "matHeaderCellDef"],
                [3, "color", 4, "matCellDef"],
                [3, "pageSizeOptions"],
                ["paginator", ""],
                [3, "matColumnDef"],
                [4, "matCellDef"],
                ["mat-sort-header", ""],
                [3, "color"],
              ],
              template: function (e, i) {
                1 & e &&
                  (F(0, "div", 0),
                  we(1, "br")(2, "br"),
                  F(3, "mat-form-field", 1)(4, "mat-label"),
                  qe(5, "Filter"),
                  N(),
                  F(6, "input", 2, 3),
                  ve("keyup", function (o) {
                    return i.applyFilter(o);
                  }),
                  N()(),
                  F(8, "div", 4)(9, "div", 5)(10, "div", 6)(11, "mat-table", 7),
                  W(12, c3, 1, 0, "mat-header-row", 8),
                  W(13, d3, 1, 0, "mat-row", 9),
                  W(14, f3, 3, 1, "ng-container", 10),
                  Bi(15, 11),
                  W(16, p3, 2, 0, "mat-header-cell", 12),
                  W(17, m3, 2, 1, "mat-cell", 13),
                  Hi(),
                  N(),
                  we(18, "mat-paginator", 14, 15),
                  N()()()()),
                  2 & e &&
                    (O(11),
                    k("dataSource", i.dataSource),
                    O(1),
                    k("matHeaderRowDef", i.displayedColumns),
                    O(1),
                    k("matRowDefColumns", i.displayedColumns),
                    O(1),
                    k("ngForOf", i.keyss(i.tt)),
                    O(4),
                    k("pageSizeOptions", Hy(5, g3)));
              },
              dependencies: [
                Dh,
                I0,
                Nf,
                aj,
                Pf,
                fV,
                zx,
                m0,
                Rf,
                g0,
                kf,
                If,
                _0,
                Of,
                Ff,
                b0,
                y0,
                b3,
              ],
              styles: [
                "table[_ngcontent-%COMP%]{width:100%}.mat-paginator-range-label[_ngcontent-%COMP%]{display:none}.mat-form-field[_ngcontent-%COMP%]{font-size:14px;width:100%}.mat-form-field-appearance-outline[_ngcontent-%COMP%]   .mat-form-field-outline[_ngcontent-%COMP%]{color:#fff}input.mat-input-element[_ngcontent-%COMP%]{color:#000}",
              ],
            })),
            n
          );
        })(),
        Ip = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["lib-genGrid2"]],
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && we(0, "table-basic-example");
              },
              dependencies: [y3],
              encapsulation: 2,
            })),
            n
          );
        })(),
        v3 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({
              imports: [Fh, aH, xs, Gx, l3, pV, Vx, $x, nV, kn, AC, xs],
            })),
            n
          );
        })(),
        D3 = (() => {
          class n {
            closeGrid() {
              this.dialog.closeAll();
            }
            yyy() {
              let e;
              (e = localStorage.getItem("myData")), e && this.modalGrid(e);
            }
            constructor(e, i, r) {
              (this.serv = e),
                (this.dialog = i),
                (this.title = "tryApp"),
                (this.flg = !1),
                this.yyy(),
                setTimeout(() => {
                  document
                    .querySelector("#ddd")
                    ?.setAttribute(
                      "style",
                      "position:absolute; background: cyan;"
                    ),
                    document
                      .querySelector(".mat-mdc-dialog-surface")
                      ?.setAttribute(
                        "style",
                        "min-width: 100vw;   min-height: 100vh;    top: 0px;     left: 0px;  position: absolute;"
                      );
                }, 1e3);
            }
            modalGrid(e = "") {
              console.log("modalGrid...............");
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(p(FP), p(bf), p(Ip));
            }),
            (n.ɵcmp = Ee({
              type: n,
              selectors: [["app-root"]],
              decls: 5,
              vars: 0,
              consts: [
                [
                  "id",
                  "zzz2",
                  "data-info",
                  "Some information",
                  2,
                  "z-index",
                  "999",
                  "position",
                  "absolute",
                ],
                ["id", "zzz1"],
              ],
              template: function (e, i) {
                1 & e &&
                  (F(0, "button", 0),
                  qe(1, "sddrrd"),
                  N(),
                  we(2, "textarea", 1),
                  F(3, "div"),
                  we(4, "lib-genGrid2"),
                  N());
              },
              dependencies: [Ip],
              styles: [
                "body[_ngcontent-%COMP%], html[_ngcontent-%COMP%]{margin:0;padding:0}.full-screen-div[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100vw;height:100vh;background-color:#f0f0f0}",
                ".draggable-dialog[_ngcontent-%COMP%] {\n        cursor: move;\n        }\n\n\n\n    body[_ngcontent-%COMP%], html[_ngcontent-%COMP%] {\n    margin: 0;\n    padding: 0;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vw;\n    z-index: 999999999;\n    }\n\n    \n    .full-screen-div[_ngcontent-%COMP%] {\n    position: fixed; \n    top: 0; \n    left: 0; \n    width: 100vw; \n    height: 100vh; \n    background-color: #f0f0f0; \n    }\n\n\n    .draggable-dialog[_ngcontent-%COMP%] {\n        position: fixed !important;\n        z-index: 1000 !important;\n        cursor: move;\n    }",
              ],
            })),
            n
          );
        })();
      function Rp(n, t, e) {
        for (let i in t)
          if (t.hasOwnProperty(i)) {
            const r = t[i];
            r
              ? n.setProperty(i, r, e?.has(i) ? "important" : "")
              : n.removeProperty(i);
          }
        return n;
      }
      function co(n, t) {
        const e = t ? "" : "none";
        Rp(n.style, {
          "touch-action": t ? "" : "none",
          "-webkit-user-drag": t ? "" : "none",
          "-webkit-tap-highlight-color": t ? "" : "transparent",
          "user-select": e,
          "-ms-user-select": e,
          "-webkit-user-select": e,
          "-moz-user-select": e,
        });
      }
      function IC(n, t, e) {
        Rp(
          n.style,
          {
            position: t ? "" : "fixed",
            top: t ? "" : "0",
            opacity: t ? "" : "0",
            left: t ? "" : "-999em",
          },
          e
        );
      }
      function Dc(n, t) {
        return t && "none" != t ? n + " " + t : n;
      }
      function RC(n) {
        const t = n.toLowerCase().indexOf("ms") > -1 ? 1 : 1e3;
        return parseFloat(n) * t;
      }
      function kp(n, t) {
        return n
          .getPropertyValue(t)
          .split(",")
          .map((i) => i.trim());
      }
      function Op(n) {
        const t = n.getBoundingClientRect();
        return {
          top: t.top,
          right: t.right,
          bottom: t.bottom,
          left: t.left,
          width: t.width,
          height: t.height,
          x: t.x,
          y: t.y,
        };
      }
      function Fp(n, t, e) {
        const { top: i, bottom: r, left: o, right: s } = n;
        return e >= i && e <= r && t >= o && t <= s;
      }
      function Fs(n, t, e) {
        (n.top += t),
          (n.bottom = n.top + n.height),
          (n.left += e),
          (n.right = n.left + n.width);
      }
      function kC(n, t, e, i) {
        const { top: r, right: o, bottom: s, left: a, width: l, height: c } = n,
          d = l * t,
          u = c * t;
        return i > r - u && i < s + u && e > a - d && e < o + d;
      }
      class OC {
        constructor(t) {
          (this._document = t), (this.positions = new Map());
        }
        clear() {
          this.positions.clear();
        }
        cache(t) {
          this.clear(),
            this.positions.set(this._document, {
              scrollPosition: this.getViewportScrollPosition(),
            }),
            t.forEach((e) => {
              this.positions.set(e, {
                scrollPosition: { top: e.scrollTop, left: e.scrollLeft },
                clientRect: Op(e),
              });
            });
        }
        handleScroll(t) {
          const e = rn(t),
            i = this.positions.get(e);
          if (!i) return null;
          const r = i.scrollPosition;
          let o, s;
          if (e === this._document) {
            const c = this.getViewportScrollPosition();
            (o = c.top), (s = c.left);
          } else (o = e.scrollTop), (s = e.scrollLeft);
          const a = r.top - o,
            l = r.left - s;
          return (
            this.positions.forEach((c, d) => {
              c.clientRect &&
                e !== d &&
                e.contains(d) &&
                Fs(c.clientRect, a, l);
            }),
            (r.top = o),
            (r.left = s),
            { top: a, left: l }
          );
        }
        getViewportScrollPosition() {
          return { top: window.scrollY, left: window.scrollX };
        }
      }
      function FC(n) {
        const t = n.cloneNode(!0),
          e = t.querySelectorAll("[id]"),
          i = n.nodeName.toLowerCase();
        t.removeAttribute("id");
        for (let r = 0; r < e.length; r++) e[r].removeAttribute("id");
        return (
          "canvas" === i
            ? LC(n, t)
            : ("input" === i || "select" === i || "textarea" === i) && NC(n, t),
          PC("canvas", n, t, LC),
          PC("input, textarea, select", n, t, NC),
          t
        );
      }
      function PC(n, t, e, i) {
        const r = t.querySelectorAll(n);
        if (r.length) {
          const o = e.querySelectorAll(n);
          for (let s = 0; s < r.length; s++) i(r[s], o[s]);
        }
      }
      let C3 = 0;
      function NC(n, t) {
        "file" !== t.type && (t.value = n.value),
          "radio" === t.type &&
            t.name &&
            (t.name = `mat-clone-${t.name}-${C3++}`);
      }
      function LC(n, t) {
        const e = t.getContext("2d");
        if (e)
          try {
            e.drawImage(n, 0, 0);
          } catch {}
      }
      const VC = ii({ passive: !0 }),
        wc = ii({ passive: !1 }),
        Pp = new Set(["position"]);
      class S3 {
        get disabled() {
          return (
            this._disabled ||
            !(!this._dropContainer || !this._dropContainer.disabled)
          );
        }
        set disabled(t) {
          const e = ae(t);
          e !== this._disabled &&
            ((this._disabled = e),
            this._toggleNativeDragInteractions(),
            this._handles.forEach((i) => co(i, e)));
        }
        constructor(t, e, i, r, o, s) {
          (this._config = e),
            (this._document = i),
            (this._ngZone = r),
            (this._viewportRuler = o),
            (this._dragDropRegistry = s),
            (this._passiveTransform = { x: 0, y: 0 }),
            (this._activeTransform = { x: 0, y: 0 }),
            (this._hasStartedDragging = !1),
            (this._moveEvents = new A()),
            (this._pointerMoveSubscription = xe.EMPTY),
            (this._pointerUpSubscription = xe.EMPTY),
            (this._scrollSubscription = xe.EMPTY),
            (this._resizeSubscription = xe.EMPTY),
            (this._boundaryElement = null),
            (this._nativeInteractionsEnabled = !0),
            (this._handles = []),
            (this._disabledHandles = new Set()),
            (this._direction = "ltr"),
            (this.dragStartDelay = 0),
            (this._disabled = !1),
            (this.beforeStarted = new A()),
            (this.started = new A()),
            (this.released = new A()),
            (this.ended = new A()),
            (this.entered = new A()),
            (this.exited = new A()),
            (this.dropped = new A()),
            (this.moved = this._moveEvents),
            (this._pointerDown = (a) => {
              if ((this.beforeStarted.next(), this._handles.length)) {
                const l = this._getTargetHandle(a);
                l &&
                  !this._disabledHandles.has(l) &&
                  !this.disabled &&
                  this._initializeDragSequence(l, a);
              } else
                this.disabled ||
                  this._initializeDragSequence(this._rootElement, a);
            }),
            (this._pointerMove = (a) => {
              const l = this._getPointerPositionOnPage(a);
              if (!this._hasStartedDragging) {
                if (
                  Math.abs(l.x - this._pickupPositionOnPage.x) +
                    Math.abs(l.y - this._pickupPositionOnPage.y) >=
                  this._config.dragStartThreshold
                ) {
                  const f =
                      Date.now() >=
                      this._dragStartTime + this._getDragStartDelay(a),
                    m = this._dropContainer;
                  if (!f) return void this._endDragSequence(a);
                  (!m || (!m.isDragging() && !m.isReceiving())) &&
                    (a.preventDefault(),
                    (this._hasStartedDragging = !0),
                    this._ngZone.run(() => this._startDragSequence(a)));
                }
                return;
              }
              a.preventDefault();
              const c = this._getConstrainedPointerPosition(l);
              if (
                ((this._hasMoved = !0),
                (this._lastKnownPointerPosition = l),
                this._updatePointerDirectionDelta(c),
                this._dropContainer)
              )
                this._updateActiveDropContainer(c, l);
              else {
                const d = this.constrainPosition
                    ? this._initialClientRect
                    : this._pickupPositionOnPage,
                  u = this._activeTransform;
                (u.x = c.x - d.x + this._passiveTransform.x),
                  (u.y = c.y - d.y + this._passiveTransform.y),
                  this._applyRootElementTransform(u.x, u.y);
              }
              this._moveEvents.observers.length &&
                this._ngZone.run(() => {
                  this._moveEvents.next({
                    source: this,
                    pointerPosition: c,
                    event: a,
                    distance: this._getDragDistance(c),
                    delta: this._pointerDirectionDelta,
                  });
                });
            }),
            (this._pointerUp = (a) => {
              this._endDragSequence(a);
            }),
            (this._nativeDragStart = (a) => {
              if (this._handles.length) {
                const l = this._getTargetHandle(a);
                l &&
                  !this._disabledHandles.has(l) &&
                  !this.disabled &&
                  a.preventDefault();
              } else this.disabled || a.preventDefault();
            }),
            this.withRootElement(t).withParent(e.parentDragRef || null),
            (this._parentPositions = new OC(i)),
            s.registerDragItem(this);
        }
        getPlaceholderElement() {
          return this._placeholder;
        }
        getRootElement() {
          return this._rootElement;
        }
        getVisibleElement() {
          return this.isDragging()
            ? this.getPlaceholderElement()
            : this.getRootElement();
        }
        withHandles(t) {
          (this._handles = t.map((i) => je(i))),
            this._handles.forEach((i) => co(i, this.disabled)),
            this._toggleNativeDragInteractions();
          const e = new Set();
          return (
            this._disabledHandles.forEach((i) => {
              this._handles.indexOf(i) > -1 && e.add(i);
            }),
            (this._disabledHandles = e),
            this
          );
        }
        withPreviewTemplate(t) {
          return (this._previewTemplate = t), this;
        }
        withPlaceholderTemplate(t) {
          return (this._placeholderTemplate = t), this;
        }
        withRootElement(t) {
          const e = je(t);
          return (
            e !== this._rootElement &&
              (this._rootElement &&
                this._removeRootElementListeners(this._rootElement),
              this._ngZone.runOutsideAngular(() => {
                e.addEventListener("mousedown", this._pointerDown, wc),
                  e.addEventListener("touchstart", this._pointerDown, VC),
                  e.addEventListener("dragstart", this._nativeDragStart, wc);
              }),
              (this._initialTransform = void 0),
              (this._rootElement = e)),
            typeof SVGElement < "u" &&
              this._rootElement instanceof SVGElement &&
              (this._ownerSVGElement = this._rootElement.ownerSVGElement),
            this
          );
        }
        withBoundaryElement(t) {
          return (
            (this._boundaryElement = t ? je(t) : null),
            this._resizeSubscription.unsubscribe(),
            t &&
              (this._resizeSubscription = this._viewportRuler
                .change(10)
                .subscribe(() => this._containInsideBoundaryOnResize())),
            this
          );
        }
        withParent(t) {
          return (this._parentDragRef = t), this;
        }
        dispose() {
          this._removeRootElementListeners(this._rootElement),
            this.isDragging() && this._rootElement?.remove(),
            this._anchor?.remove(),
            this._destroyPreview(),
            this._destroyPlaceholder(),
            this._dragDropRegistry.removeDragItem(this),
            this._removeSubscriptions(),
            this.beforeStarted.complete(),
            this.started.complete(),
            this.released.complete(),
            this.ended.complete(),
            this.entered.complete(),
            this.exited.complete(),
            this.dropped.complete(),
            this._moveEvents.complete(),
            (this._handles = []),
            this._disabledHandles.clear(),
            (this._dropContainer = void 0),
            this._resizeSubscription.unsubscribe(),
            this._parentPositions.clear(),
            (this._boundaryElement =
              this._rootElement =
              this._ownerSVGElement =
              this._placeholderTemplate =
              this._previewTemplate =
              this._anchor =
              this._parentDragRef =
                null);
        }
        isDragging() {
          return (
            this._hasStartedDragging && this._dragDropRegistry.isDragging(this)
          );
        }
        reset() {
          (this._rootElement.style.transform = this._initialTransform || ""),
            (this._activeTransform = { x: 0, y: 0 }),
            (this._passiveTransform = { x: 0, y: 0 });
        }
        disableHandle(t) {
          !this._disabledHandles.has(t) &&
            this._handles.indexOf(t) > -1 &&
            (this._disabledHandles.add(t), co(t, !0));
        }
        enableHandle(t) {
          this._disabledHandles.has(t) &&
            (this._disabledHandles.delete(t), co(t, this.disabled));
        }
        withDirection(t) {
          return (this._direction = t), this;
        }
        _withDropContainer(t) {
          this._dropContainer = t;
        }
        getFreeDragPosition() {
          const t = this.isDragging()
            ? this._activeTransform
            : this._passiveTransform;
          return { x: t.x, y: t.y };
        }
        setFreeDragPosition(t) {
          return (
            (this._activeTransform = { x: 0, y: 0 }),
            (this._passiveTransform.x = t.x),
            (this._passiveTransform.y = t.y),
            this._dropContainer || this._applyRootElementTransform(t.x, t.y),
            this
          );
        }
        withPreviewContainer(t) {
          return (this._previewContainer = t), this;
        }
        _sortFromLastPointerPosition() {
          const t = this._lastKnownPointerPosition;
          t &&
            this._dropContainer &&
            this._updateActiveDropContainer(
              this._getConstrainedPointerPosition(t),
              t
            );
        }
        _removeSubscriptions() {
          this._pointerMoveSubscription.unsubscribe(),
            this._pointerUpSubscription.unsubscribe(),
            this._scrollSubscription.unsubscribe();
        }
        _destroyPreview() {
          this._preview?.remove(),
            this._previewRef?.destroy(),
            (this._preview = this._previewRef = null);
        }
        _destroyPlaceholder() {
          this._placeholder?.remove(),
            this._placeholderRef?.destroy(),
            (this._placeholder = this._placeholderRef = null);
        }
        _endDragSequence(t) {
          if (
            this._dragDropRegistry.isDragging(this) &&
            (this._removeSubscriptions(),
            this._dragDropRegistry.stopDragging(this),
            this._toggleNativeDragInteractions(),
            this._handles &&
              (this._rootElement.style.webkitTapHighlightColor =
                this._rootElementTapHighlight),
            this._hasStartedDragging)
          )
            if (
              (this.released.next({ source: this, event: t }),
              this._dropContainer)
            )
              this._dropContainer._stopScrolling(),
                this._animatePreviewToPlaceholder().then(() => {
                  this._cleanupDragArtifacts(t),
                    this._cleanupCachedDimensions(),
                    this._dragDropRegistry.stopDragging(this);
                });
            else {
              this._passiveTransform.x = this._activeTransform.x;
              const e = this._getPointerPositionOnPage(t);
              (this._passiveTransform.y = this._activeTransform.y),
                this._ngZone.run(() => {
                  this.ended.next({
                    source: this,
                    distance: this._getDragDistance(e),
                    dropPoint: e,
                    event: t,
                  });
                }),
                this._cleanupCachedDimensions(),
                this._dragDropRegistry.stopDragging(this);
            }
        }
        _startDragSequence(t) {
          Ps(t) && (this._lastTouchEventTime = Date.now()),
            this._toggleNativeDragInteractions();
          const e = this._dropContainer;
          if (e) {
            const i = this._rootElement,
              r = i.parentNode,
              o = (this._placeholder = this._createPlaceholderElement()),
              s = (this._anchor =
                this._anchor || this._document.createComment("")),
              a = this._getShadowRoot();
            r.insertBefore(s, i),
              (this._initialTransform = i.style.transform || ""),
              (this._preview = this._createPreviewElement()),
              IC(i, !1, Pp),
              this._document.body.appendChild(r.replaceChild(o, i)),
              this._getPreviewInsertionPoint(r, a).appendChild(this._preview),
              this.started.next({ source: this, event: t }),
              e.start(),
              (this._initialContainer = e),
              (this._initialIndex = e.getItemIndex(this));
          } else
            this.started.next({ source: this, event: t }),
              (this._initialContainer = this._initialIndex = void 0);
          this._parentPositions.cache(e ? e.getScrollableParents() : []);
        }
        _initializeDragSequence(t, e) {
          this._parentDragRef && e.stopPropagation();
          const i = this.isDragging(),
            r = Ps(e),
            o = !r && 0 !== e.button,
            s = this._rootElement,
            a = rn(e),
            l =
              !r &&
              this._lastTouchEventTime &&
              this._lastTouchEventTime + 800 > Date.now(),
            c = r ? df(e) : cf(e);
          if (
            (a && a.draggable && "mousedown" === e.type && e.preventDefault(),
            i || o || l || c)
          )
            return;
          if (this._handles.length) {
            const h = s.style;
            (this._rootElementTapHighlight = h.webkitTapHighlightColor || ""),
              (h.webkitTapHighlightColor = "transparent");
          }
          (this._hasStartedDragging = this._hasMoved = !1),
            this._removeSubscriptions(),
            (this._initialClientRect =
              this._rootElement.getBoundingClientRect()),
            (this._pointerMoveSubscription =
              this._dragDropRegistry.pointerMove.subscribe(this._pointerMove)),
            (this._pointerUpSubscription =
              this._dragDropRegistry.pointerUp.subscribe(this._pointerUp)),
            (this._scrollSubscription = this._dragDropRegistry
              .scrolled(this._getShadowRoot())
              .subscribe((h) => this._updateOnScroll(h))),
            this._boundaryElement &&
              (this._boundaryRect = Op(this._boundaryElement));
          const d = this._previewTemplate;
          this._pickupPositionInElement =
            d && d.template && !d.matchSize
              ? { x: 0, y: 0 }
              : this._getPointerPositionInElement(
                  this._initialClientRect,
                  t,
                  e
                );
          const u =
            (this._pickupPositionOnPage =
            this._lastKnownPointerPosition =
              this._getPointerPositionOnPage(e));
          (this._pointerDirectionDelta = { x: 0, y: 0 }),
            (this._pointerPositionAtLastDirectionChange = { x: u.x, y: u.y }),
            (this._dragStartTime = Date.now()),
            this._dragDropRegistry.startDragging(this, e);
        }
        _cleanupDragArtifacts(t) {
          IC(this._rootElement, !0, Pp),
            this._anchor.parentNode.replaceChild(
              this._rootElement,
              this._anchor
            ),
            this._destroyPreview(),
            this._destroyPlaceholder(),
            (this._initialClientRect =
              this._boundaryRect =
              this._previewRect =
              this._initialTransform =
                void 0),
            this._ngZone.run(() => {
              const e = this._dropContainer,
                i = e.getItemIndex(this),
                r = this._getPointerPositionOnPage(t),
                o = this._getDragDistance(r),
                s = e._isOverContainer(r.x, r.y);
              this.ended.next({
                source: this,
                distance: o,
                dropPoint: r,
                event: t,
              }),
                this.dropped.next({
                  item: this,
                  currentIndex: i,
                  previousIndex: this._initialIndex,
                  container: e,
                  previousContainer: this._initialContainer,
                  isPointerOverContainer: s,
                  distance: o,
                  dropPoint: r,
                  event: t,
                }),
                e.drop(
                  this,
                  i,
                  this._initialIndex,
                  this._initialContainer,
                  s,
                  o,
                  r,
                  t
                ),
                (this._dropContainer = this._initialContainer);
            });
        }
        _updateActiveDropContainer({ x: t, y: e }, { x: i, y: r }) {
          let o = this._initialContainer._getSiblingContainerFromPosition(
            this,
            t,
            e
          );
          !o &&
            this._dropContainer !== this._initialContainer &&
            this._initialContainer._isOverContainer(t, e) &&
            (o = this._initialContainer),
            o &&
              o !== this._dropContainer &&
              this._ngZone.run(() => {
                this.exited.next({
                  item: this,
                  container: this._dropContainer,
                }),
                  this._dropContainer.exit(this),
                  (this._dropContainer = o),
                  this._dropContainer.enter(
                    this,
                    t,
                    e,
                    o === this._initialContainer && o.sortingDisabled
                      ? this._initialIndex
                      : void 0
                  ),
                  this.entered.next({
                    item: this,
                    container: o,
                    currentIndex: o.getItemIndex(this),
                  });
              }),
            this.isDragging() &&
              (this._dropContainer._startScrollingIfNecessary(i, r),
              this._dropContainer._sortItem(
                this,
                t,
                e,
                this._pointerDirectionDelta
              ),
              this.constrainPosition
                ? this._applyPreviewTransform(t, e)
                : this._applyPreviewTransform(
                    t - this._pickupPositionInElement.x,
                    e - this._pickupPositionInElement.y
                  ));
        }
        _createPreviewElement() {
          const t = this._previewTemplate,
            e = this.previewClass,
            i = t ? t.template : null;
          let r;
          if (i && t) {
            const o = t.matchSize ? this._initialClientRect : null,
              s = t.viewContainer.createEmbeddedView(i, t.context);
            s.detectChanges(),
              (r = HC(s, this._document)),
              (this._previewRef = s),
              t.matchSize
                ? jC(r, o)
                : (r.style.transform = xc(
                    this._pickupPositionOnPage.x,
                    this._pickupPositionOnPage.y
                  ));
          } else
            (r = FC(this._rootElement)),
              jC(r, this._initialClientRect),
              this._initialTransform &&
                (r.style.transform = this._initialTransform);
          return (
            Rp(
              r.style,
              {
                "pointer-events": "none",
                margin: "0",
                position: "fixed",
                top: "0",
                left: "0",
                "z-index": `${this._config.zIndex || 1e3}`,
              },
              Pp
            ),
            co(r, !1),
            r.classList.add("cdk-drag-preview"),
            r.setAttribute("dir", this._direction),
            e &&
              (Array.isArray(e)
                ? e.forEach((o) => r.classList.add(o))
                : r.classList.add(e)),
            r
          );
        }
        _animatePreviewToPlaceholder() {
          if (!this._hasMoved) return Promise.resolve();
          const t = this._placeholder.getBoundingClientRect();
          this._preview.classList.add("cdk-drag-animating"),
            this._applyPreviewTransform(t.left, t.top);
          const e = (function x3(n) {
            const t = getComputedStyle(n),
              e = kp(t, "transition-property"),
              i = e.find((a) => "transform" === a || "all" === a);
            if (!i) return 0;
            const r = e.indexOf(i),
              o = kp(t, "transition-duration"),
              s = kp(t, "transition-delay");
            return RC(o[r]) + RC(s[r]);
          })(this._preview);
          return 0 === e
            ? Promise.resolve()
            : this._ngZone.runOutsideAngular(
                () =>
                  new Promise((i) => {
                    const r = (s) => {
                        (!s ||
                          (rn(s) === this._preview &&
                            "transform" === s.propertyName)) &&
                          (this._preview?.removeEventListener(
                            "transitionend",
                            r
                          ),
                          i(),
                          clearTimeout(o));
                      },
                      o = setTimeout(r, 1.5 * e);
                    this._preview.addEventListener("transitionend", r);
                  })
              );
        }
        _createPlaceholderElement() {
          const t = this._placeholderTemplate,
            e = t ? t.template : null;
          let i;
          return (
            e
              ? ((this._placeholderRef = t.viewContainer.createEmbeddedView(
                  e,
                  t.context
                )),
                this._placeholderRef.detectChanges(),
                (i = HC(this._placeholderRef, this._document)))
              : (i = FC(this._rootElement)),
            (i.style.pointerEvents = "none"),
            i.classList.add("cdk-drag-placeholder"),
            i
          );
        }
        _getPointerPositionInElement(t, e, i) {
          const r = e === this._rootElement ? null : e,
            o = r ? r.getBoundingClientRect() : t,
            s = Ps(i) ? i.targetTouches[0] : i,
            a = this._getViewportScrollPosition();
          return {
            x: o.left - t.left + (s.pageX - o.left - a.left),
            y: o.top - t.top + (s.pageY - o.top - a.top),
          };
        }
        _getPointerPositionOnPage(t) {
          const e = this._getViewportScrollPosition(),
            i = Ps(t)
              ? t.touches[0] || t.changedTouches[0] || { pageX: 0, pageY: 0 }
              : t,
            r = i.pageX - e.left,
            o = i.pageY - e.top;
          if (this._ownerSVGElement) {
            const s = this._ownerSVGElement.getScreenCTM();
            if (s) {
              const a = this._ownerSVGElement.createSVGPoint();
              return (a.x = r), (a.y = o), a.matrixTransform(s.inverse());
            }
          }
          return { x: r, y: o };
        }
        _getConstrainedPointerPosition(t) {
          const e = this._dropContainer ? this._dropContainer.lockAxis : null;
          let { x: i, y: r } = this.constrainPosition
            ? this.constrainPosition(
                t,
                this,
                this._initialClientRect,
                this._pickupPositionInElement
              )
            : t;
          if (
            ("x" === this.lockAxis || "x" === e
              ? (r = this._pickupPositionOnPage.y)
              : ("y" === this.lockAxis || "y" === e) &&
                (i = this._pickupPositionOnPage.x),
            this._boundaryRect)
          ) {
            const { x: o, y: s } = this._pickupPositionInElement,
              a = this._boundaryRect,
              { width: l, height: c } = this._getPreviewRect(),
              d = a.top + s,
              u = a.bottom - (c - s);
            (i = BC(i, a.left + o, a.right - (l - o))), (r = BC(r, d, u));
          }
          return { x: i, y: r };
        }
        _updatePointerDirectionDelta(t) {
          const { x: e, y: i } = t,
            r = this._pointerDirectionDelta,
            o = this._pointerPositionAtLastDirectionChange,
            s = Math.abs(e - o.x),
            a = Math.abs(i - o.y);
          return (
            s > this._config.pointerDirectionChangeThreshold &&
              ((r.x = e > o.x ? 1 : -1), (o.x = e)),
            a > this._config.pointerDirectionChangeThreshold &&
              ((r.y = i > o.y ? 1 : -1), (o.y = i)),
            r
          );
        }
        _toggleNativeDragInteractions() {
          if (!this._rootElement || !this._handles) return;
          const t = this._handles.length > 0 || !this.isDragging();
          t !== this._nativeInteractionsEnabled &&
            ((this._nativeInteractionsEnabled = t), co(this._rootElement, t));
        }
        _removeRootElementListeners(t) {
          t.removeEventListener("mousedown", this._pointerDown, wc),
            t.removeEventListener("touchstart", this._pointerDown, VC),
            t.removeEventListener("dragstart", this._nativeDragStart, wc);
        }
        _applyRootElementTransform(t, e) {
          const i = xc(t, e),
            r = this._rootElement.style;
          null == this._initialTransform &&
            (this._initialTransform =
              r.transform && "none" != r.transform ? r.transform : ""),
            (r.transform = Dc(i, this._initialTransform));
        }
        _applyPreviewTransform(t, e) {
          const i = this._previewTemplate?.template
              ? void 0
              : this._initialTransform,
            r = xc(t, e);
          this._preview.style.transform = Dc(r, i);
        }
        _getDragDistance(t) {
          const e = this._pickupPositionOnPage;
          return e ? { x: t.x - e.x, y: t.y - e.y } : { x: 0, y: 0 };
        }
        _cleanupCachedDimensions() {
          (this._boundaryRect = this._previewRect = void 0),
            this._parentPositions.clear();
        }
        _containInsideBoundaryOnResize() {
          let { x: t, y: e } = this._passiveTransform;
          if (
            (0 === t && 0 === e) ||
            this.isDragging() ||
            !this._boundaryElement
          )
            return;
          const i = this._rootElement.getBoundingClientRect(),
            r = this._boundaryElement.getBoundingClientRect();
          if (
            (0 === r.width && 0 === r.height) ||
            (0 === i.width && 0 === i.height)
          )
            return;
          const o = r.left - i.left,
            s = i.right - r.right,
            a = r.top - i.top,
            l = i.bottom - r.bottom;
          r.width > i.width ? (o > 0 && (t += o), s > 0 && (t -= s)) : (t = 0),
            r.height > i.height
              ? (a > 0 && (e += a), l > 0 && (e -= l))
              : (e = 0),
            (t !== this._passiveTransform.x ||
              e !== this._passiveTransform.y) &&
              this.setFreeDragPosition({ y: e, x: t });
        }
        _getDragStartDelay(t) {
          const e = this.dragStartDelay;
          return "number" == typeof e ? e : Ps(t) ? e.touch : e ? e.mouse : 0;
        }
        _updateOnScroll(t) {
          const e = this._parentPositions.handleScroll(t);
          if (e) {
            const i = rn(t);
            this._boundaryRect &&
              i !== this._boundaryElement &&
              i.contains(this._boundaryElement) &&
              Fs(this._boundaryRect, e.top, e.left),
              (this._pickupPositionOnPage.x += e.left),
              (this._pickupPositionOnPage.y += e.top),
              this._dropContainer ||
                ((this._activeTransform.x -= e.left),
                (this._activeTransform.y -= e.top),
                this._applyRootElementTransform(
                  this._activeTransform.x,
                  this._activeTransform.y
                ));
          }
        }
        _getViewportScrollPosition() {
          return (
            this._parentPositions.positions.get(this._document)
              ?.scrollPosition ||
            this._parentPositions.getViewportScrollPosition()
          );
        }
        _getShadowRoot() {
          return (
            void 0 === this._cachedShadowRoot &&
              (this._cachedShadowRoot = Uh(this._rootElement)),
            this._cachedShadowRoot
          );
        }
        _getPreviewInsertionPoint(t, e) {
          const i = this._previewContainer || "global";
          if ("parent" === i) return t;
          if ("global" === i) {
            const r = this._document;
            return (
              e ||
              r.fullscreenElement ||
              r.webkitFullscreenElement ||
              r.mozFullScreenElement ||
              r.msFullscreenElement ||
              r.body
            );
          }
          return je(i);
        }
        _getPreviewRect() {
          return (
            (!this._previewRect ||
              (!this._previewRect.width && !this._previewRect.height)) &&
              (this._previewRect = this._preview
                ? this._preview.getBoundingClientRect()
                : this._initialClientRect),
            this._previewRect
          );
        }
        _getTargetHandle(t) {
          return this._handles.find(
            (e) => t.target && (t.target === e || e.contains(t.target))
          );
        }
      }
      function xc(n, t) {
        return `translate3d(${Math.round(n)}px, ${Math.round(t)}px, 0)`;
      }
      function BC(n, t, e) {
        return Math.max(t, Math.min(e, n));
      }
      function Ps(n) {
        return "t" === n.type[0];
      }
      function HC(n, t) {
        const e = n.rootNodes;
        if (1 === e.length && e[0].nodeType === t.ELEMENT_NODE) return e[0];
        const i = t.createElement("div");
        return e.forEach((r) => i.appendChild(r)), i;
      }
      function jC(n, t) {
        (n.style.width = `${t.width}px`),
          (n.style.height = `${t.height}px`),
          (n.style.transform = xc(t.left, t.top));
      }
      function Ns(n, t) {
        return Math.max(0, Math.min(t, n));
      }
      class T3 {
        constructor(t, e) {
          (this._element = t),
            (this._dragDropRegistry = e),
            (this._itemPositions = []),
            (this.orientation = "vertical"),
            (this._previousSwap = { drag: null, delta: 0, overlaps: !1 });
        }
        start(t) {
          this.withItems(t);
        }
        sort(t, e, i, r) {
          const o = this._itemPositions,
            s = this._getItemIndexFromPointerPosition(t, e, i, r);
          if (-1 === s && o.length > 0) return null;
          const a = "horizontal" === this.orientation,
            l = o.findIndex((_) => _.drag === t),
            c = o[s],
            u = c.clientRect,
            h = l > s ? 1 : -1,
            f = this._getItemOffsetPx(o[l].clientRect, u, h),
            m = this._getSiblingOffsetPx(l, o, h),
            g = o.slice();
          return (
            (function M3(n, t, e) {
              const i = Ns(t, n.length - 1),
                r = Ns(e, n.length - 1);
              if (i === r) return;
              const o = n[i],
                s = r < i ? -1 : 1;
              for (let a = i; a !== r; a += s) n[a] = n[a + s];
              n[r] = o;
            })(o, l, s),
            o.forEach((_, v) => {
              if (g[v] === _) return;
              const E = _.drag === t,
                y = E ? f : m,
                S = E ? t.getPlaceholderElement() : _.drag.getRootElement();
              (_.offset += y),
                a
                  ? ((S.style.transform = Dc(
                      `translate3d(${Math.round(_.offset)}px, 0, 0)`,
                      _.initialTransform
                    )),
                    Fs(_.clientRect, 0, y))
                  : ((S.style.transform = Dc(
                      `translate3d(0, ${Math.round(_.offset)}px, 0)`,
                      _.initialTransform
                    )),
                    Fs(_.clientRect, y, 0));
            }),
            (this._previousSwap.overlaps = Fp(u, e, i)),
            (this._previousSwap.drag = c.drag),
            (this._previousSwap.delta = a ? r.x : r.y),
            { previousIndex: l, currentIndex: s }
          );
        }
        enter(t, e, i, r) {
          const o =
              null == r || r < 0
                ? this._getItemIndexFromPointerPosition(t, e, i)
                : r,
            s = this._activeDraggables,
            a = s.indexOf(t),
            l = t.getPlaceholderElement();
          let c = s[o];
          if (
            (c === t && (c = s[o + 1]),
            !c &&
              (null == o || -1 === o || o < s.length - 1) &&
              this._shouldEnterAsFirstChild(e, i) &&
              (c = s[0]),
            a > -1 && s.splice(a, 1),
            c && !this._dragDropRegistry.isDragging(c))
          ) {
            const d = c.getRootElement();
            d.parentElement.insertBefore(l, d), s.splice(o, 0, t);
          } else je(this._element).appendChild(l), s.push(t);
          (l.style.transform = ""), this._cacheItemPositions();
        }
        withItems(t) {
          (this._activeDraggables = t.slice()), this._cacheItemPositions();
        }
        withSortPredicate(t) {
          this._sortPredicate = t;
        }
        reset() {
          this._activeDraggables.forEach((t) => {
            const e = t.getRootElement();
            if (e) {
              const i = this._itemPositions.find(
                (r) => r.drag === t
              )?.initialTransform;
              e.style.transform = i || "";
            }
          }),
            (this._itemPositions = []),
            (this._activeDraggables = []),
            (this._previousSwap.drag = null),
            (this._previousSwap.delta = 0),
            (this._previousSwap.overlaps = !1);
        }
        getActiveItemsSnapshot() {
          return this._activeDraggables;
        }
        getItemIndex(t) {
          return (
            "horizontal" === this.orientation && "rtl" === this.direction
              ? this._itemPositions.slice().reverse()
              : this._itemPositions
          ).findIndex((i) => i.drag === t);
        }
        updateOnScroll(t, e) {
          this._itemPositions.forEach(({ clientRect: i }) => {
            Fs(i, t, e);
          }),
            this._itemPositions.forEach(({ drag: i }) => {
              this._dragDropRegistry.isDragging(i) &&
                i._sortFromLastPointerPosition();
            });
        }
        _cacheItemPositions() {
          const t = "horizontal" === this.orientation;
          this._itemPositions = this._activeDraggables
            .map((e) => {
              const i = e.getVisibleElement();
              return {
                drag: e,
                offset: 0,
                initialTransform: i.style.transform || "",
                clientRect: Op(i),
              };
            })
            .sort((e, i) =>
              t
                ? e.clientRect.left - i.clientRect.left
                : e.clientRect.top - i.clientRect.top
            );
        }
        _getItemOffsetPx(t, e, i) {
          const r = "horizontal" === this.orientation;
          let o = r ? e.left - t.left : e.top - t.top;
          return (
            -1 === i && (o += r ? e.width - t.width : e.height - t.height), o
          );
        }
        _getSiblingOffsetPx(t, e, i) {
          const r = "horizontal" === this.orientation,
            o = e[t].clientRect,
            s = e[t + -1 * i];
          let a = o[r ? "width" : "height"] * i;
          if (s) {
            const l = r ? "left" : "top",
              c = r ? "right" : "bottom";
            -1 === i
              ? (a -= s.clientRect[l] - o[c])
              : (a += o[l] - s.clientRect[c]);
          }
          return a;
        }
        _shouldEnterAsFirstChild(t, e) {
          if (!this._activeDraggables.length) return !1;
          const i = this._itemPositions,
            r = "horizontal" === this.orientation;
          if (i[0].drag !== this._activeDraggables[0]) {
            const s = i[i.length - 1].clientRect;
            return r ? t >= s.right : e >= s.bottom;
          }
          {
            const s = i[0].clientRect;
            return r ? t <= s.left : e <= s.top;
          }
        }
        _getItemIndexFromPointerPosition(t, e, i, r) {
          const o = "horizontal" === this.orientation,
            s = this._itemPositions.findIndex(
              ({ drag: a, clientRect: l }) =>
                a !== t &&
                (!r ||
                  a !== this._previousSwap.drag ||
                  !this._previousSwap.overlaps ||
                  (o ? r.x : r.y) !== this._previousSwap.delta) &&
                (o
                  ? e >= Math.floor(l.left) && e < Math.floor(l.right)
                  : i >= Math.floor(l.top) && i < Math.floor(l.bottom))
            );
          return -1 !== s && this._sortPredicate(s, t) ? s : -1;
        }
      }
      const $C = 0.05;
      class A3 {
        constructor(t, e, i, r, o) {
          (this._dragDropRegistry = e),
            (this._ngZone = r),
            (this._viewportRuler = o),
            (this.disabled = !1),
            (this.sortingDisabled = !1),
            (this.autoScrollDisabled = !1),
            (this.autoScrollStep = 2),
            (this.enterPredicate = () => !0),
            (this.sortPredicate = () => !0),
            (this.beforeStarted = new A()),
            (this.entered = new A()),
            (this.exited = new A()),
            (this.dropped = new A()),
            (this.sorted = new A()),
            (this.receivingStarted = new A()),
            (this.receivingStopped = new A()),
            (this._isDragging = !1),
            (this._draggables = []),
            (this._siblings = []),
            (this._activeSiblings = new Set()),
            (this._viewportScrollSubscription = xe.EMPTY),
            (this._verticalScrollDirection = 0),
            (this._horizontalScrollDirection = 0),
            (this._stopScrollTimers = new A()),
            (this._cachedShadowRoot = null),
            (this._startScrollInterval = () => {
              this._stopScrolling(),
                (function w3(n = 0, t = bl) {
                  return n < 0 && (n = 0), GD(n, n, t);
                })(0, $D)
                  .pipe(ge(this._stopScrollTimers))
                  .subscribe(() => {
                    const s = this._scrollNode,
                      a = this.autoScrollStep;
                    1 === this._verticalScrollDirection
                      ? s.scrollBy(0, -a)
                      : 2 === this._verticalScrollDirection && s.scrollBy(0, a),
                      1 === this._horizontalScrollDirection
                        ? s.scrollBy(-a, 0)
                        : 2 === this._horizontalScrollDirection &&
                          s.scrollBy(a, 0);
                  });
            }),
            (this.element = je(t)),
            (this._document = i),
            this.withScrollableParents([this.element]),
            e.registerDropContainer(this),
            (this._parentPositions = new OC(i)),
            (this._sortStrategy = new T3(this.element, e)),
            this._sortStrategy.withSortPredicate((s, a) =>
              this.sortPredicate(s, a, this)
            );
        }
        dispose() {
          this._stopScrolling(),
            this._stopScrollTimers.complete(),
            this._viewportScrollSubscription.unsubscribe(),
            this.beforeStarted.complete(),
            this.entered.complete(),
            this.exited.complete(),
            this.dropped.complete(),
            this.sorted.complete(),
            this.receivingStarted.complete(),
            this.receivingStopped.complete(),
            this._activeSiblings.clear(),
            (this._scrollNode = null),
            this._parentPositions.clear(),
            this._dragDropRegistry.removeDropContainer(this);
        }
        isDragging() {
          return this._isDragging;
        }
        start() {
          this._draggingStarted(), this._notifyReceivingSiblings();
        }
        enter(t, e, i, r) {
          this._draggingStarted(),
            null == r &&
              this.sortingDisabled &&
              (r = this._draggables.indexOf(t)),
            this._sortStrategy.enter(t, e, i, r),
            this._cacheParentPositions(),
            this._notifyReceivingSiblings(),
            this.entered.next({
              item: t,
              container: this,
              currentIndex: this.getItemIndex(t),
            });
        }
        exit(t) {
          this._reset(), this.exited.next({ item: t, container: this });
        }
        drop(t, e, i, r, o, s, a, l = {}) {
          this._reset(),
            this.dropped.next({
              item: t,
              currentIndex: e,
              previousIndex: i,
              container: this,
              previousContainer: r,
              isPointerOverContainer: o,
              distance: s,
              dropPoint: a,
              event: l,
            });
        }
        withItems(t) {
          const e = this._draggables;
          return (
            (this._draggables = t),
            t.forEach((i) => i._withDropContainer(this)),
            this.isDragging() &&
              (e.filter((r) => r.isDragging()).every((r) => -1 === t.indexOf(r))
                ? this._reset()
                : this._sortStrategy.withItems(this._draggables)),
            this
          );
        }
        withDirection(t) {
          return (this._sortStrategy.direction = t), this;
        }
        connectedTo(t) {
          return (this._siblings = t.slice()), this;
        }
        withOrientation(t) {
          return (this._sortStrategy.orientation = t), this;
        }
        withScrollableParents(t) {
          const e = je(this.element);
          return (
            (this._scrollableElements =
              -1 === t.indexOf(e) ? [e, ...t] : t.slice()),
            this
          );
        }
        getScrollableParents() {
          return this._scrollableElements;
        }
        getItemIndex(t) {
          return this._isDragging
            ? this._sortStrategy.getItemIndex(t)
            : this._draggables.indexOf(t);
        }
        isReceiving() {
          return this._activeSiblings.size > 0;
        }
        _sortItem(t, e, i, r) {
          if (
            this.sortingDisabled ||
            !this._clientRect ||
            !kC(this._clientRect, 0.05, e, i)
          )
            return;
          const o = this._sortStrategy.sort(t, e, i, r);
          o &&
            this.sorted.next({
              previousIndex: o.previousIndex,
              currentIndex: o.currentIndex,
              container: this,
              item: t,
            });
        }
        _startScrollingIfNecessary(t, e) {
          if (this.autoScrollDisabled) return;
          let i,
            r = 0,
            o = 0;
          if (
            (this._parentPositions.positions.forEach((s, a) => {
              a === this._document ||
                !s.clientRect ||
                i ||
                (kC(s.clientRect, 0.05, t, e) &&
                  (([r, o] = (function I3(n, t, e, i) {
                    const r = UC(t, i),
                      o = GC(t, e);
                    let s = 0,
                      a = 0;
                    if (r) {
                      const l = n.scrollTop;
                      1 === r
                        ? l > 0 && (s = 1)
                        : n.scrollHeight - l > n.clientHeight && (s = 2);
                    }
                    if (o) {
                      const l = n.scrollLeft;
                      1 === o
                        ? l > 0 && (a = 1)
                        : n.scrollWidth - l > n.clientWidth && (a = 2);
                    }
                    return [s, a];
                  })(a, s.clientRect, t, e)),
                  (r || o) && (i = a)));
            }),
            !r && !o)
          ) {
            const { width: s, height: a } =
                this._viewportRuler.getViewportSize(),
              l = { width: s, height: a, top: 0, right: s, bottom: a, left: 0 };
            (r = UC(l, e)), (o = GC(l, t)), (i = window);
          }
          i &&
            (r !== this._verticalScrollDirection ||
              o !== this._horizontalScrollDirection ||
              i !== this._scrollNode) &&
            ((this._verticalScrollDirection = r),
            (this._horizontalScrollDirection = o),
            (this._scrollNode = i),
            (r || o) && i
              ? this._ngZone.runOutsideAngular(this._startScrollInterval)
              : this._stopScrolling());
        }
        _stopScrolling() {
          this._stopScrollTimers.next();
        }
        _draggingStarted() {
          const t = je(this.element).style;
          this.beforeStarted.next(),
            (this._isDragging = !0),
            (this._initialScrollSnap =
              t.msScrollSnapType || t.scrollSnapType || ""),
            (t.scrollSnapType = t.msScrollSnapType = "none"),
            this._sortStrategy.start(this._draggables),
            this._cacheParentPositions(),
            this._viewportScrollSubscription.unsubscribe(),
            this._listenToScrollEvents();
        }
        _cacheParentPositions() {
          const t = je(this.element);
          this._parentPositions.cache(this._scrollableElements),
            (this._clientRect =
              this._parentPositions.positions.get(t).clientRect);
        }
        _reset() {
          this._isDragging = !1;
          const t = je(this.element).style;
          (t.scrollSnapType = t.msScrollSnapType = this._initialScrollSnap),
            this._siblings.forEach((e) => e._stopReceiving(this)),
            this._sortStrategy.reset(),
            this._stopScrolling(),
            this._viewportScrollSubscription.unsubscribe(),
            this._parentPositions.clear();
        }
        _isOverContainer(t, e) {
          return null != this._clientRect && Fp(this._clientRect, t, e);
        }
        _getSiblingContainerFromPosition(t, e, i) {
          return this._siblings.find((r) => r._canReceive(t, e, i));
        }
        _canReceive(t, e, i) {
          if (
            !this._clientRect ||
            !Fp(this._clientRect, e, i) ||
            !this.enterPredicate(t, this)
          )
            return !1;
          const r = this._getShadowRoot().elementFromPoint(e, i);
          if (!r) return !1;
          const o = je(this.element);
          return r === o || o.contains(r);
        }
        _startReceiving(t, e) {
          const i = this._activeSiblings;
          !i.has(t) &&
            e.every(
              (r) =>
                this.enterPredicate(r, this) || this._draggables.indexOf(r) > -1
            ) &&
            (i.add(t),
            this._cacheParentPositions(),
            this._listenToScrollEvents(),
            this.receivingStarted.next({
              initiator: t,
              receiver: this,
              items: e,
            }));
        }
        _stopReceiving(t) {
          this._activeSiblings.delete(t),
            this._viewportScrollSubscription.unsubscribe(),
            this.receivingStopped.next({ initiator: t, receiver: this });
        }
        _listenToScrollEvents() {
          this._viewportScrollSubscription = this._dragDropRegistry
            .scrolled(this._getShadowRoot())
            .subscribe((t) => {
              if (this.isDragging()) {
                const e = this._parentPositions.handleScroll(t);
                e && this._sortStrategy.updateOnScroll(e.top, e.left);
              } else this.isReceiving() && this._cacheParentPositions();
            });
        }
        _getShadowRoot() {
          if (!this._cachedShadowRoot) {
            const t = Uh(je(this.element));
            this._cachedShadowRoot = t || this._document;
          }
          return this._cachedShadowRoot;
        }
        _notifyReceivingSiblings() {
          const t = this._sortStrategy
            .getActiveItemsSnapshot()
            .filter((e) => e.isDragging());
          this._siblings.forEach((e) => e._startReceiving(this, t));
        }
      }
      function UC(n, t) {
        const { top: e, bottom: i, height: r } = n,
          o = r * $C;
        return t >= e - o && t <= e + o ? 1 : t >= i - o && t <= i + o ? 2 : 0;
      }
      function GC(n, t) {
        const { left: e, right: i, width: r } = n,
          o = r * $C;
        return t >= e - o && t <= e + o ? 1 : t >= i - o && t <= i + o ? 2 : 0;
      }
      const Cc = ii({ passive: !1, capture: !0 });
      let R3 = (() => {
        class n {
          constructor(e, i) {
            (this._ngZone = e),
              (this._dropInstances = new Set()),
              (this._dragInstances = new Set()),
              (this._activeDragInstances = []),
              (this._globalListeners = new Map()),
              (this._draggingPredicate = (r) => r.isDragging()),
              (this.pointerMove = new A()),
              (this.pointerUp = new A()),
              (this.scroll = new A()),
              (this._preventDefaultWhileDragging = (r) => {
                this._activeDragInstances.length > 0 && r.preventDefault();
              }),
              (this._persistentTouchmoveListener = (r) => {
                this._activeDragInstances.length > 0 &&
                  (this._activeDragInstances.some(this._draggingPredicate) &&
                    r.preventDefault(),
                  this.pointerMove.next(r));
              }),
              (this._document = i);
          }
          registerDropContainer(e) {
            this._dropInstances.has(e) || this._dropInstances.add(e);
          }
          registerDragItem(e) {
            this._dragInstances.add(e),
              1 === this._dragInstances.size &&
                this._ngZone.runOutsideAngular(() => {
                  this._document.addEventListener(
                    "touchmove",
                    this._persistentTouchmoveListener,
                    Cc
                  );
                });
          }
          removeDropContainer(e) {
            this._dropInstances.delete(e);
          }
          removeDragItem(e) {
            this._dragInstances.delete(e),
              this.stopDragging(e),
              0 === this._dragInstances.size &&
                this._document.removeEventListener(
                  "touchmove",
                  this._persistentTouchmoveListener,
                  Cc
                );
          }
          startDragging(e, i) {
            if (
              !(this._activeDragInstances.indexOf(e) > -1) &&
              (this._activeDragInstances.push(e),
              1 === this._activeDragInstances.length)
            ) {
              const r = i.type.startsWith("touch");
              this._globalListeners
                .set(r ? "touchend" : "mouseup", {
                  handler: (o) => this.pointerUp.next(o),
                  options: !0,
                })
                .set("scroll", {
                  handler: (o) => this.scroll.next(o),
                  options: !0,
                })
                .set("selectstart", {
                  handler: this._preventDefaultWhileDragging,
                  options: Cc,
                }),
                r ||
                  this._globalListeners.set("mousemove", {
                    handler: (o) => this.pointerMove.next(o),
                    options: Cc,
                  }),
                this._ngZone.runOutsideAngular(() => {
                  this._globalListeners.forEach((o, s) => {
                    this._document.addEventListener(s, o.handler, o.options);
                  });
                });
            }
          }
          stopDragging(e) {
            const i = this._activeDragInstances.indexOf(e);
            i > -1 &&
              (this._activeDragInstances.splice(i, 1),
              0 === this._activeDragInstances.length &&
                this._clearGlobalListeners());
          }
          isDragging(e) {
            return this._activeDragInstances.indexOf(e) > -1;
          }
          scrolled(e) {
            const i = [this.scroll];
            return (
              e &&
                e !== this._document &&
                i.push(
                  new De((r) =>
                    this._ngZone.runOutsideAngular(() => {
                      const s = (a) => {
                        this._activeDragInstances.length && r.next(a);
                      };
                      return (
                        e.addEventListener("scroll", s, !0),
                        () => {
                          e.removeEventListener("scroll", s, !0);
                        }
                      );
                    })
                  )
                ),
              Pt(...i)
            );
          }
          ngOnDestroy() {
            this._dragInstances.forEach((e) => this.removeDragItem(e)),
              this._dropInstances.forEach((e) => this.removeDropContainer(e)),
              this._clearGlobalListeners(),
              this.pointerMove.complete(),
              this.pointerUp.complete();
          }
          _clearGlobalListeners() {
            this._globalListeners.forEach((e, i) => {
              this._document.removeEventListener(i, e.handler, e.options);
            }),
              this._globalListeners.clear();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(b(V), b(ne));
          }),
          (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const k3 = { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };
      let Np = (() => {
          class n {
            constructor(e, i, r, o) {
              (this._document = e),
                (this._ngZone = i),
                (this._viewportRuler = r),
                (this._dragDropRegistry = o);
            }
            createDrag(e, i = k3) {
              return new S3(
                e,
                i,
                this._document,
                this._ngZone,
                this._viewportRuler,
                this._dragDropRegistry
              );
            }
            createDropList(e) {
              return new A3(
                e,
                this._dragDropRegistry,
                this._document,
                this._ngZone,
                this._viewportRuler
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(b(ne), b(V), b(Qr), b(R3));
            }),
            (n.ɵprov = I({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })(),
        j3 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = le({ type: n })),
            (n.ɵinj = oe({ providers: [Np], imports: [fs] })),
            n
          );
        })();
      const z3 = new C("MatMdcDialogData");
      let $3 = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = le({ type: n, bootstrap: [D3] })),
          (n.ɵinj = oe({
            providers: [Ip, n, bf, { provide: z3, useValue: {} }],
            imports: [j3, AC, kn, Gx, E2, $x, v3, Fh],
          })),
          n
        );
      })();
      SP()
        .bootstrapModule($3)
        .catch((n) => console.error(n));
    },
  },
  (de) => {
    de((de.s = 703));
  },
]);
